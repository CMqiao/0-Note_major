<h1>js 字符串截取</h1>

<p>本文实例讲述了JS截取与分割字符串的常用方法。分享给大家供大家参考，具体如下：</p>

<p>slice()<br />
第一个参数代表开始位置,第二个参数代表结束位置的下一个位置,截取出来的字符串的长度为第二个参数与第一个参数之间的差;若参数值为负数,则将该值加上字符串长度后转为正值;若第一个参数等于大于第二个参数,则返回空字符串.</p>

<p>substring()<br />
第一个参数代表开始位置,第二个参数代表结束位置的下一个位置;若参数值为负数,则将该值转为0;两个参数中,取较小值作为开始位置,截取出来的字符串的长度为较大值与较小值之间的差.</p>

<p>substr()<br />
第一个参数代表开始位置,第二个参数代表截取的长度</p>

<p>PS：字符串都从0开始计起</p>

<h2>函数：substring()</h2>

<p>定义：substring(start,end)表示从start到end之间的字符串，包括start位置的字符但是不包括end位置的字符。</p>

<p>功能：字符串截取，比如想从&quot;MinidxSearchEngine&quot;中得到&quot;Minidx&quot;就要用到substring(0,6)</p>

<p>例子：</p>

<p><br />
var src=&quot;images/off_1.png&quot;;</p>

<p>alert(src.substring(7,10));</p>

<p>//弹出值为：off</p>

<h2>函数：substr()</h2>

<p>定义：substr(start,length)表示从start位置开始，截取length长度的字符串。</p>

<p>功能：字符串截取</p>

<p>例子：<br />
var src=&quot;images/off_1.png&quot;;</p>

<p>alert(src.substr(7,3));</p>

<p>//弹出值为：off</p>

<h2>函数:slice()</h2>

<p>功能：arrayObject.slice(start,end)</p>

<p>　　start:必需。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。</p>

<p>　　end:可选。规定从何处结束选取。该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。</p>

<p>　　返回一个新的数组，包含从start到end（不包括该元素）的arrayobject中的元素。</p>

<p>例子：var str=&#39;ahji3o3s4e6p8a0sdewqdasj&#39;</p>

<p>　　alert(str.slice(2,5)) &nbsp; //结果ji3</p>

<h2>函数：split()</h2>

<p>功能：使用一个指定的分隔符把一个字符串分割存储到数组</p>

<p>例子：</p>

<p><br />
str=&quot;jpg|bmp|gif|ico|png&quot;;</p>

<p>arr=theString.split(&quot;|&quot;);</p>

<p>//arr是一个包含字符值&quot;jpg&quot;、&quot;bmp&quot;、&quot;gif&quot;、&quot;ico&quot;和&quot;png&quot;的数组</p>

<h2>函数：Join()</h2>

<p>功能：使用您选择的分隔符将一个数组合并为一个字符串</p>

<p>例子：</p>

<p><br />
var delimitedString=myArray.join(delimiter);</p>

<p>var myList=new Array(&quot;jpg&quot;,&quot;bmp&quot;,&quot;gif&quot;,&quot;ico&quot;,&quot;png&quot;);</p>

<p>var portableList=myList.join(&quot;|&quot;);</p>

<p>//结果是jpg|bmp|gif|ico|png</p>

<h2>函数：indexOf()</h2>

<p>功能：返回字符串中匹配子串的第一个字符的下标</p>

<p><br />
var myString=&quot;JavaScript&quot;;</p>

<p>var w=myString.indexOf(&quot;v&quot;);w will be 2</p>

<p>var x=myString.indexOf(&quot;S&quot;);x will be 4</p>

<p>var y=myString.indexOf(&quot;Script&quot;);y will also be 4</p>

<p>var z=myString.indexOf(&quot;key&quot;);z will be -1</p>

<h2>函数：lastIndexOf()</h2>

<p>定义：lastIndexOf()方法返回从右向左出现某个字符或字符串的首个字符索引值（与indexOf相反）</p>

<p>功能：返回字符串索引值</p>

<p>例子：</p>

<p>var src=&quot;images/off_1.png&quot;;</p>

<p>alert(src.lastIndexOf(&#39;/&#39;));</p>

<p>alert(src.lastIndexOf(&#39;g&#39;));</p>

<p>//弹出值依次为：6,15</p>

<h2>函数:concat（）</h2>

<p>功能：将两个数组连接在一起；</p>

<p>例子：arr1=[1,2,3,4]</p>

<p>　　arr2=[5,6,7,8]</p>

<p>　　alert(arr1.concat(arr2)) &nbsp;//结果为[1,2,3,4,5,6,7,8]</p>

<h2>函数:charAt()</h2>

<p>功能：返回指定位置的字符。字符串中第一个字符的下标是 0。如果参数 index 不在 0 与 string.length 之间，该方法将返回一个空字符串。</p>

<p>例子:var str=&#39;a,g,i,d,o,v,w,d,k,p&#39;</p>

<p>alert(str.charAt(2)) &nbsp;//结果为g</p>

<h2>函数:charCodeAt()</h2>

<p>功能：charCodeAt() 方法可返回指定位置的字符的 Unicode 编码。这个返回值是 0 - 65535 之间的整数。</p>

<p>方法 charCodeAt() 与 charAt() 方法执行的操作相似，只不过前者返回的是位于指定位置的字符的编码，而后者返回的是字符子串。</p>

<p>例子：var str=&#39;a,g,i,d,o,v,w,d,k,p&#39;</p>

<p>alert(str.charCodeAt(2)) &nbsp;//结果为103。即g的Unicode编码为103</p>
