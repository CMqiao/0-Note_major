<p>JS入门之ActiveXObject对象</p>

<p>&nbsp; 下面这句话的意思是生成一个相关的Active对象，根据相关的浏览器版本<br />
&nbsp; xmlHttp = newActiveXObject(aVersions[i]);<br />
&nbsp; 这行JS代码是产生一个XMLHttpRequest对象..<br />
&nbsp; 括号里面的是ActiveX插件的名字.<br />
&nbsp; 完整的应该这样写:&nbsp;</p>

<p>&nbsp; &nbsp; var xmlHttp;&nbsp;<br />
&nbsp; &nbsp; function createXMLHttpRequest() {&nbsp;<br />
&nbsp; &nbsp; &nbsp; if(window.ActiveXObject)&nbsp;<br />
&nbsp; &nbsp; &nbsp; {&nbsp;<br />
&nbsp; &nbsp; &nbsp; var aVersions =[&quot;MSXML2.XMLHttp.5.0&quot;,&quot;MSXML2.XMLHttp.4.0&quot;,&quot;MSXML2.XMLHttp.3.0&quot;,&quot;MSXML2.XMLHttp&quot;,&quot;Microsoft.XMLHttp&quot;];<br />
&nbsp; &nbsp; &nbsp; &nbsp; for(int i=0;i&lt;aVersions.length;i++)&nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; {&nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; try&nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {&nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xmlHttp = new ActiveXObject(aVersions[i]);&nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;&nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; catch(oError) &nbsp;{ }&nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp;<br />
&nbsp; &nbsp; &nbsp; }&nbsp;<br />
&nbsp; &nbsp; &nbsp; else if(window.XMLHttpRequest)&nbsp;<br />
&nbsp; &nbsp; &nbsp; {&nbsp;<br />
&nbsp; &nbsp; &nbsp; xmlHttp = new XMLHttpRequest();&nbsp;<br />
&nbsp; &nbsp; &nbsp; return;&nbsp;<br />
&nbsp; &nbsp; &nbsp; }&nbsp;<br />
&nbsp; &nbsp; &nbsp; throw new Error(&quot;XMLHttp object could not becreated.&quot;);&nbsp;<br />
&nbsp; &nbsp; }</p>

<p>&nbsp; &nbsp; 判断的原因是,各种浏览器对JavaScript的支持不一样..所以XmlHttpRequest对象的产生方式也不一样.比如IE.他支持的是ActiveX的方式.<br />
&nbsp; &nbsp; [&quot;MSXML2.XMLHttp.5.0&quot;,&quot;MSXML2.XMLHttp.4.0&quot;,&quot;MSXML2.XMLHttp.3.0&quot;,&quot;MSXML2.XMLHttp&quot;,&quot;Microsoft.XMLHttp&quot;];这些是他ActiveX的版本.<br />
&nbsp; &nbsp; 而有些浏览器.象FireFox,浏览器本身有对XmlHttpRequest的支持.浏览器有内置对象.所以用&quot;xmlHttp = new XMLHttpRequest(); &quot;就可以了<br />
&nbsp; &nbsp; if(window.XMLHttpRequest)是判断浏览器是否内置XmlHttpRequest对象</p>

<p>解说之一：<br />
&nbsp; 此对象提供自动化对象的接口。<br />
&nbsp; &nbsp;<br />
&nbsp; function ActiveXObject(ProgID : String [, location : String])<br />
&nbsp; Collapse 图像参数<br />
&nbsp; ProgID<br />
&nbsp; 必选。形式为&ldquo;serverName.typeName&rdquo;的字符串，其中 serverName 是提供对象的应用程序的名称，typeName 是要创建的对象的类型或类。</p>

<p>&nbsp; location<br />
&nbsp; 可选项。要在其中创建对象的网络访问器的名称。</p>

<p>&nbsp; Collapse 图像备注<br />
&nbsp; 通常，自动化服务器会提供至少一种对象。例如，字处理应用程序可能会提供应用程序对象、文档对象和工具栏对象。</p>

<p>&nbsp; 以下代码通过调用 ActiveXObject 对象构造函数来启动应用程序（在这种情况下为 Microsoft Excel 工作表）。ActiveXObject 允许您在代码中引用应用程序。使用下面的示例，您可以使用对象变量 ExcelSheet 和其他 Excel 对象（包括应用程序对象和 ActiveSheet.Cells 集合）来访问新对象的属性和方法。</p>

<p>&nbsp; CopyCode image复制代码<br />
&nbsp; &nbsp; &nbsp; // Declare the variables<br />
&nbsp; &nbsp; &nbsp; var Excel, Book;</p>

<p>&nbsp; &nbsp; &nbsp; // Create the Excel application object.<br />
&nbsp; &nbsp; &nbsp; Excel = new ActiveXObject(&quot;Excel.Application&quot;);</p>

<p>&nbsp; &nbsp; &nbsp; // Make Excel visible.<br />
&nbsp; &nbsp; &nbsp; Excel.Visible = true;</p>

<p>&nbsp; &nbsp; &nbsp; // Create a new work book.<br />
&nbsp; &nbsp; &nbsp; Book = Excel.Workbooks.Add()</p>

<p>&nbsp; &nbsp; &nbsp; // Place some text in the first cell of the sheet.<br />
&nbsp; &nbsp; &nbsp; Book.ActiveSheet.Cells(1,1).Value = &quot;This is column A, row 1&quot;;</p>

<p>&nbsp; &nbsp; &nbsp; // Save the sheet.<br />
&nbsp; &nbsp; &nbsp; Book.SaveAs(&quot;C://TEST.XLS&quot;);</p>

<p>&nbsp; &nbsp; &nbsp; // Close Excel with the Quit method on the Application object.<br />
&nbsp; &nbsp; &nbsp; Excel.Application.Quit();<br />
&nbsp; &nbsp; &nbsp; 若要在远程服务器上创建对象，只能在关闭 Internet 安全机制时完成。您可以通过将计算机的名称传递到 ActiveXObject 的 servername 参数在远程网络计算机上创建对象。该名称与共享名的计算机名部分相同。对于名为&ldquo;//MyServer/public&rdquo;的网络共享，servername 为&ldquo;MyServer&rdquo;。此外，您可以使用 DNS 格式或 IP 地址来指定 servername。</p>

<p>&nbsp; &nbsp; &nbsp; 以下代码返回在名为&ldquo;MyServer&rdquo;的远程网络计算机上运行的 Excel 实例的版本号：</p>

<p>&nbsp; &nbsp; CopyCode image复制代码<br />
&nbsp; &nbsp; &nbsp; function GetAppVersion() {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var Excel = new ActiveXObject(&quot;Excel.Application&quot;, &quot;MyServer&quot;);<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return(Excel.Version);<br />
&nbsp; &nbsp; &nbsp; }<br />
&nbsp; &nbsp; &nbsp; 如果指定的远程服务器不存在或者找不到，则会出错。</p>

<p>&nbsp; &nbsp; &nbsp; Collapse 图像属性和方法<br />
&nbsp; &nbsp; &nbsp; ActiveXObject 对象不具有任何内部属性或方法；它允许您访问自动化对象的属性和方法。</p>

<p>解说之二：</p>

<p>&nbsp; 最近老是出现JS在我面前，有很多是特效或其他AJAX方面的，也在研究Prototype.js的脚本库，但对于我这种JS菜鸟来说有很多东东还不是很懂。所以今天去看了一看教程，对于我们.NET的程序员来说，对OO编程已经没有什么新鲜的了，但对于JS中的OO编程我还不是很熟悉，所以今天就来学习学习JS中的ActiveXObject对象，在接下来的几篇随笔中我会慢慢的把其他对象给总结出来。</p>

<p>&nbsp; 有事没事new一个，要声明ActiveXObject对象当然也不例外，它能返回一个Automation对象的引用，代码如下：</p>

<p>&nbsp; var obj=new ActiveXObject(servername,typename[,location]);</p>

<p>&nbsp; 下面我们来看看参数说明：<br />
&nbsp; &nbsp; &nbsp;obj谁都知道是变量，即要赋值为ActiveXObject的变量名；<br />
&nbsp; servername提供该对象的应用程序名称；<br />
&nbsp; &nbsp; &nbsp;typename要创建的对象地类型或类；<br />
&nbsp; &nbsp; &nbsp;location创建该对象得网络服务器名称。</p>

<p>&nbsp; &nbsp; &nbsp;Automation服务器至少提供一类对象，例如字处理应用程序可能提供应用程序对象、文档对象和工具栏对象。例如要创建Excel的Application和Sheet对象，代码如下：</p>

<p>&nbsp; var ExcelApp = new ActiveXObject(&quot;Excel.Application&quot;);<br />
&nbsp; var ExcelSheet = new ActiveXObject(&quot;Excel.Sheet&quot;)</p>

<p>&nbsp; 一旦对象被创建，就可以用定义的对象变量在代码中的引用它。下面我们将通过一个例子来看看对对象和方法的引用，通过对象变量 ExcelSheet 访问新对象的属性和方法和其他 Excel 对象，包括 Application 对象和 ActiveSheet.Cells 集合。代码如下：</p>

<p>&nbsp; 1 ExcelSheet.Application.Visible = true;<br />
&nbsp; 2 ExcelSheet.ActiveSheet.Cells(1,1).Value = &quot;This is column A, row 1&quot;;<br />
&nbsp; 3 ExcelSheet.SaveAs(&quot;C://TEST.XLS&quot;);<br />
&nbsp; 4 ExcelSheet.Application.Quit();</p>

<p>&nbsp; 下面我们来看看怎样创建远程服务器中创建对象，但是这有一个前提就是要将Internet安全性关闭。要在远程网络计算机创建对象，可以将该计算机的名称传递给 ActiveXObject 的 servername 参数。该名称与共享名的机器名部分相同。比如共享名为 &quot;//myserver/public&quot; 的网络，servername 是 &quot;myserver&quot;。另外，可以用 DNS 格式或 IP 地址指定 servername。下面的代码返回在名为 &quot;myserver&quot; 的远程网络计算机上运行的 Excel 实例的版本号：&nbsp;</p>

<p>&nbsp; 1 function GetAppVersion() {<br />
&nbsp; 2 &nbsp; &nbsp; var XLApp = new ActiveXObject(&quot;Excel.Application&quot;, &quot;MyServer&quot;);<br />
&nbsp; 3 &nbsp; &nbsp; return(XLApp.Version);<br />
&nbsp; 4 }</p>

<p>&nbsp; 如果指定的远程服务器不存在或找不到时将会发生错误。<br />
&nbsp; 5.2.6 在客户端上创建对象实例&nbsp;<br />
&nbsp; 在ASP中讨论在服务器上实例化对象和组件的技术时，值得强调的是在浏览器中运行客户端页面而完成同样工作的方式。如果你使用ASP创建包含客户端脚本程序的页面，或者使用&lt;OBJECT&gt;元素创建客户端组件实例，将会发现这是非常有用的。在大多数情况下，脚本运行期对象可在客户端上实例化和使用，效果与服务器上的ASP相同。&nbsp;<br />
&nbsp; 1． VBScript CreateObject方法&nbsp;<br />
&nbsp; 在客户端使用CreateObject时，在浏览器的环境内创建组件或对象实例，它们与浏览器运行在相同的内存空间里（即进程内），除非实现的对象是带有.exe扩展文件名的可执行文件。&nbsp;<br />
&nbsp; 通常指定对象的ClassID，而不是使用ProgID字符串，这样就不可能与其他安装在客户端的对象发生冲突。&nbsp;<br />
&nbsp; &lt;SCRIPT LANGUAGE=&rdquo;VBScript&rdquo;&gt;&nbsp;<br />
&nbsp; Dim objThis&nbsp;<br />
&nbsp; Set objThis = CreateObject(&ldquo;clsid:892D6DA7-E0F9-00105A42AF30&rdquo;)&nbsp;<br />
&nbsp; &hellip;&nbsp;<br />
&nbsp; &lt;/SCRIPT&gt;&nbsp;<br />
&nbsp; 当然也可以使用ProgID，并且使用通用的对象或组件（特别是标准安装提供的对象或组件），那么得到错误的组件的风险是很小的：&nbsp;<br />
&nbsp; &lt;SCRIPT LANGUAGE=&rdquo;VBScript&rdquo;&gt;&nbsp;<br />
&nbsp; Dim objThis&nbsp;<br />
&nbsp; Set objThis = CreateObject(&ldquo;Scripting.Dictionary&rdquo;)&nbsp;<br />
&nbsp; &hellip;&nbsp;<br />
&nbsp; &lt;/SCRIPT&gt;&nbsp;<br />
&nbsp; 2． Jscript ActiveXObject方法&nbsp;<br />
&nbsp; 为了在客户端上实例化Jscript的对象和组件，必须使用ActiveXObject方法和new操作符：&nbsp;<br />
&nbsp; &lt;SCRIPT LANGUAGE=&rdquo;JScript&rdquo;&gt;&nbsp;<br />
&nbsp; var objMyData = new ActiveXObject(&lsquo;clsid: 892D6DA7-E0F9-00105A42AF30&rsquo;);&nbsp;<br />
&nbsp; &lt;/SCRIPT&gt;&nbsp;<br />
&nbsp; 或：&nbsp;<br />
&nbsp; &lt;SCRIPT LANGUAGE=&rdquo;JScript&rdquo;&gt;&nbsp;<br />
&nbsp; var objMyData = new ActiveXObject(&lsquo;this.object&rsquo;);&nbsp;<br />
&nbsp; &lt;/SCRIPT&gt;&nbsp;<br />
&nbsp; 3． &lt;OBJECT&gt;元素技术&nbsp;<br />
&nbsp; 也可使用&lt;OBJECT&gt;元素创建客户端对象或组件的实例。应省略RUNAT属性或者将其设定为&ldquo;CLIENT&rdquo;。然而，这个属性在客户端上是被忽略的，因此设置这个属性的唯一目的就是，在ASP页面使用&lt;OBJECT&gt;元素实例化服务器端的组件实例时防止混淆。&nbsp;<br />
&nbsp; &lt;OBJECT ID=&rdquo;objThis&rdquo; RUNAT=&rdquo;CLIENT&rdquo;&nbsp;<br />
&nbsp; CLASSID=&rdquo;clsid: 892D6DA7-E0F9-00105A42AF30&rdquo;&nbsp;<br />
&nbsp; CODEBASE=&rdquo;http://yourserver.com/components/mycomponent.cab&rdquo;&gt;&nbsp;<br />
&nbsp; &lt;PARAM NAME=&rdquo;param1&rdquo; VALUE=&rdquo;value1&rdquo;&gt;&nbsp;<br />
&nbsp; &lt;PARAM NAME=&rdquo;param2&rdquo; VALUE=&rdquo;value2&rdquo;&gt;&nbsp;<br />
&nbsp; &lt;/OBJECT&gt;&nbsp;<br />
&nbsp; 注意，这里出现的CODEBASE属性，表示允许下载并安装来自URL的组件（如果该组件没有安装）。IE 3.0以上的版本有此功能。&nbsp;<br />
&nbsp; 对于使用&lt;OBJECT&gt;元素的方法、可使用的属性、在客户端使用的值，可查看网站http: //msdn.Microsoft.com/workshop/author/dhtml/reference/objects/OBJECT.asp，或者Windows 2000 Platform SDK文档中的&lt;OBJECT&gt; tags，或者看看《IE5 Dynamic HTML Programmer&rsquo; Reference》一书，ISBN 1-861001-74-6，Wrox出版社。&nbsp;</p>

<p>解说之三：</p>

<p>&nbsp; ActiveXObject 对象<br />
&nbsp; 启用并返回 Automation 对象的引用。</p>

<p>&nbsp; newObj = new ActiveXObject(servername.typename[, location])</p>

<p>&nbsp; ActiveXObject 对象语法有这些部分：</p>

<p>&nbsp; 参数<br />
&nbsp; newObj</p>

<p>&nbsp; 必选项。要赋值为 ActiveXObject 的变量名。</p>

<p>&nbsp; servername</p>

<p>&nbsp; 必选项。提供该对象的应用程序的名称。</p>

<p>&nbsp; typename</p>

<p>&nbsp; 必选项。要创建的对象的类型或类。</p>

<p>&nbsp; location</p>

<p>&nbsp; 可选项。创建该对象的网络服务器的名称。</p>

<p>&nbsp; 说明<br />
&nbsp; Automation 服务器至少提供一类对象。例如，字处理应用程序可能提供应用程序对象、文档对象和工具栏对象。</p>

<p>&nbsp; 要创建 Automation 对象，将新的 ActiveXObject 赋给对象变量：</p>

<p>&nbsp; var ExcelSheet;<br />
&nbsp; ExcelApp = new ActiveXObject(&quot;Excel.Application&quot;);<br />
&nbsp; ExcelSheet = new ActiveXObject(&quot;Excel.Sheet&quot;);<br />
&nbsp; 本代码启动创建对象的应用程序（在这种情况下，Microsoft Excel 工作表）。一旦对象被创建，就可以用定义的对象变量在代码中引用它。 在下面的例子中，通过对象变量 ExcelSheet 访问新对象的属性和方法和其他 Excel 对象，包括 Application 对象和 ActiveSheet.Cells 集合。</p>

<p>&nbsp; // 使 Excel 通过 Application 对象可见。<br />
&nbsp; ExcelSheet.Application.Visible = true;<br />
&nbsp; // 将一些文本放置到表格的第一格中。<br />
&nbsp; ExcelSheet.ActiveSheet.Cells(1,1).Value = &quot;This is column A, row 1&quot;;<br />
&nbsp; // 保存表格。<br />
&nbsp; ExcelSheet.SaveAs(&quot;C://TEST.XLS&quot;);<br />
&nbsp; // 用 Application 对象用 Quit 方法关闭 Excel。<br />
&nbsp; ExcelSheet.Application.Quit();<br />
&nbsp; 只有当 Internet 安全性关闭时才能完成在远程服务器中创建对象。要在远程网络计算机创建对象，可以将该计算机的名称传递给 ActiveXObject 的 servername 参数。该名称与共享名的机器名部分相同。比如共享名为 &quot;//myserver/public&quot; 的网络，servername 是 &quot;myserver&quot;。另外，可以用 DNS 格式或 IP 地址指定 servername。</p>

<p>&nbsp; 下面的代码返回在名为 &quot;myserver&quot; 的远程网络计算机上运行的 Excel 实例的版本号：</p>

<p>&nbsp; function GetAppVersion() {<br />
&nbsp; &nbsp; &nbsp;var XLApp = new ActiveXObject(&quot;Excel.Application&quot;, &quot;MyServer&quot;);<br />
&nbsp; &nbsp; &nbsp;return(XLApp.Version);<br />
&nbsp; }<br />
&nbsp; 如果指定的远程服务器不存在或找不到时将发生错误。</p>

<p>javascript字典对象Dictionary用法<br />
&nbsp; [new ActiveXObject(&quot;Scripting.Dictionary&quot;)]</p>

<p>&nbsp; 解说：<br />
&nbsp; 字典对象的创建：<br />
&nbsp; var dic=new ActiveXObject(&quot;Scripting.Dictionary&quot;);</p>

<p>&nbsp; 创建了字典对象后就可以使用它的属性和方法了:</p>

<p>&nbsp; dic.add(key,value) 用来添加一组字典项目.<br />
&nbsp; dic.remove(key) 用来删除指定key的字典项目.<br />
&nbsp; dic.removeAll() 方法是用来删除字典全部项目.<br />
&nbsp; dic(key)可以取得字典里的值<br />
&nbsp; 用dic.Keys()来表示key的集合, 然后将集合转化为数组;然后用a.getItem(索引值)来取得字典的key.&nbsp;<br />
&nbsp; dic.Exists(key) 用来搜索字典中的key, 它是一个布尔值,存在就返回true,否则为false;<br />
&nbsp; //===================================================<br />
&nbsp; &lt;script language = javascript&gt;<br />
&nbsp; function ok(){<br />
&nbsp; try{<br />
&nbsp; &nbsp; &nbsp;var obj = new ActiveXObject(&quot;Scripting.Dictionary&quot;);//创建对象<br />
&nbsp; &nbsp; &nbsp;obj.Add(&quot;hello&quot;,&quot;BeiJing&quot;);//增加新项<br />
&nbsp; &nbsp; &nbsp;obj.Add(&quot;world&quot;,&quot;北京&quot;);<br />
&nbsp; &nbsp; &nbsp;obj.Item(&quot;hello&quot;)=&quot;上海&quot;;//修改<br />
&nbsp; &nbsp; &nbsp;//遍历Dictionary<br />
&nbsp; &nbsp; &nbsp;var keys=obj.Keys().toArray();//将obj对象的键值转换成数组<br />
&nbsp; &nbsp; &nbsp;for(var i = 0;i&lt;keys.length;i++){<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if(obj.Exists(keys[i])){//判断对象集合中是否存在指定键值的项<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alert(obj(keys[i]));<br />
&nbsp; obj.Item(keys[i])=null;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; obj.Remove(keys[i]);//删除指定键值项<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}<br />
&nbsp; &nbsp; &nbsp;}&nbsp;<br />
&nbsp; }<br />
&nbsp; catch(e)<br />
&nbsp; {<br />
&nbsp; &nbsp; &nbsp;alert(e.message);<br />
&nbsp; }<br />
&nbsp; }<br />
&nbsp; ok();<br />
&nbsp; &lt;/script&gt;</p>

<p>&nbsp; &nbsp;</p>

<p>&nbsp; 在Browser里通过JavaScript的new ActiveXObject( &quot;AAA.BBB&quot; )可以创建一个COM物件，但此种行为只能在Browser的安全限制为低时才能执行，这对于用户而言是不可接受的，如果安全限制不为低时，Browser没有任何提示下出错退出，我想，既然JavaScript提供new ActiveXObject这样的语句，就应该有其实用的地方,那位大侠能告诉我相关的知识？</p>

<p><object><object><object><object><object></object></object></object></object></object></p>
