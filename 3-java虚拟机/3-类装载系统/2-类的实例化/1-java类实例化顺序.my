<h1>类加载并实例化的过程</h1>

<p>1、虚拟机在首次加载<a href="http://lib.csdn.net/base/java" target="_blank" title="Java 知识库">Java</a>类</p>

<p>会对<strong>静态初始化块</strong>、<strong>静态成员变量</strong>、<strong>静态方法</strong>(下文将这三种统称为静态代码块)进行一次初始化。具体过程是：&nbsp;</p>

<p>①装(加)载类的加载指的是将类的.class文件中的二进制数据读入到内存中，将其放在运行时数据区的<strong>方法区</strong>中，然后在堆区创建一个java.lang.Class对象，用来封装类在方法区内的<a href="http://lib.csdn.net/base/datastructure" target="_blank" title="算法与数据结构知识库">数据结构</a>，之后可以用Class对象进行相关的反射操作。&nbsp;<br />
②连接分为三个子步骤　　　　</p>

<ol>
	<li>验证：确保被加载的类的正确性</li>
	<li>准备：为类的静态变量分配内存，并将其初始化为默认值</li>
	<li>解析： 把类中的符号引用转换为直接引用</li>
</ol>

<p>③初始化为为类的静态变量赋予正确的初始值</p>

<p>&nbsp;</p>

<p>2、类实例创建过程</p>

<p>(父类静态成员、静态代码块&mdash;&gt;子类静态成员、静态代码块&mdash;&gt;父类实例成员、代码块&mdash;&mdash;&gt;父类构造函数&mdash;&gt;子类实例成员、代码块&mdash;&gt;子类构造函数)</p>

<p><br />
3、类实例销毁时候，首先销毁子类部分，再销毁父类部分</p>

<hr />
<p>成员变量和静态变量的区别：&nbsp;<br />
1，成员变量所属于对象。所以也称为实例变量。&nbsp;<br />
静态变量所属于类。所以也称为类变量。&nbsp;<br />
2，成员变量存在于堆内存中。&nbsp;<br />
静态变量存在于方法区中。&nbsp;<br />
3，成员变量随着对象创建而存在。随着对象被回收而消失。&nbsp;<br />
静态变量随着类的加载而存在。随着类的消失而消失。&nbsp;<br />
4，成员变量只能被对象所调用 。&nbsp;<br />
静态变量可以被对象调用，也可以被类名调用。&nbsp;<br />
所以，成员变量可以称为对象的特有数据，静态变量称为对象的共享数据。</p>

<p>静态代码块：就是一个有静态关键字标示的一个代码块区域。定义在类中。&nbsp;<br />
作用：可以完成类的初始化。静态代码块随着类的加载而执行，而且只执行一次（new 多个对象就只执行一次）。如果和主函数在同一类中，优先于主函数执行。（静态成员就是静态代码块）</p>
