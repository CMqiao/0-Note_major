<h1>HTML编码规范</h1>

<p><a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#1-%E5%89%8D%E8%A8%80">1 前言</a></p>

<p><a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#2-%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC">2 代码风格</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#21-%E7%BC%A9%E8%BF%9B%E4%B8%8E%E6%8D%A2%E8%A1%8C">2.1 缩进与换行</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#22-%E5%91%BD%E5%90%8D">2.2 命名</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#23-%E6%A0%87%E7%AD%BE">2.3 标签</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#24-%E5%B1%9E%E6%80%A7">2.4 属性</a></p>

<p><a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#3-%E9%80%9A%E7%94%A8">3 通用</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#31-doctype">3.1 DOCTYPE</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#32-%E7%BC%96%E7%A0%81">3.2 编码</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#33-css%E5%92%8Cjavascript%E5%BC%95%E5%85%A5">3.3 CSS和JavaScript引入</a></p>

<p><a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#4-head">4 head</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#41-title">4.1 title</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#42-favicon">4.2 favicon</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#43-viewport">4.3 viewport</a></p>

<p><a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#5-%E5%9B%BE%E7%89%87">5 图片</a></p>

<p><a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#6-%E8%A1%A8%E5%8D%95">6 表单</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#61-%E6%8E%A7%E4%BB%B6%E6%A0%87%E9%A2%98">6.1 控件标题</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#62-%E6%8C%89%E9%92%AE">6.2 按钮</a></p>

<p>　　<a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#63-%E5%8F%AF%E8%AE%BF%E9%97%AE%E6%80%A7-a11y">6.3 可访问性 (A11Y)</a></p>

<p><a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#7-%E5%A4%9A%E5%AA%92%E4%BD%93">7 多媒体</a></p>

<p><a href="https://github.com/qianyuqianxun36963/0-Note_major/blob/master/1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/2-%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/html.md#8-%E6%A8%A1%E6%9D%BF%E4%B8%AD%E7%9A%84-html">8 模板中的 HTML</a></p>

<h2>1 前言</h2>

<p>HTML作为描述网页结构的超文本标记语言，在百度一直有着广泛的应用。本文档的目标是使HTML代码风格保持一致，容易被理解和被维护。</p>

<h2>2 代码风格</h2>

<h3>2.1 缩进与换行</h3>

<h4>[强制] 使用&nbsp;<code>4</code>&nbsp;个空格做为一个缩进层级，不允许使用&nbsp;<code>2</code>&nbsp;个空格 或&nbsp;<code>tab</code>&nbsp;字符。</h4>

<p>示例：</p>

<pre>
&lt;ul&gt;
    &lt;li&gt;first&lt;/li&gt;
    &lt;li&gt;second&lt;/li&gt;
&lt;/ul&gt;</pre>

<h4>[建议] 每行不得超过&nbsp;<code>120</code>&nbsp;个字符。</h4>

<p>解释：</p>

<p>过长的代码不容易阅读与维护。但是考虑到 HTML 的特殊性，不做硬性要求。</p>

<h3>2.2 命名</h3>

<h4>[强制]&nbsp;<code>class</code>&nbsp;必须单词全字母小写，单词间以&nbsp;<code>-</code>&nbsp;分隔。</h4>

<h4>[强制]&nbsp;<code>class</code>&nbsp;必须代表相应模块或部件的内容或功能，不得以样式信息进行命名。</h4>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;div class=&quot;sidebar&quot;&gt;&lt;/div&gt;

&lt;!-- bad --&gt;
&lt;div class=&quot;left&quot;&gt;&lt;/div&gt;</pre>

<h4>[强制] 元素&nbsp;<code>id</code>&nbsp;必须保证页面唯一。</h4>

<p>解释：</p>

<p>同一个页面中，不同的元素包含相同的 id，不符合 id 的属性含义。并且使用 document.getElementById 时可能导致难以追查的问题。</p>

<h4>[建议]&nbsp;<code>id</code>&nbsp;建议单词全字母小写，单词间以&nbsp;<code>-</code>&nbsp;分隔。同项目必须保持风格一致。</h4>

<h4>[建议]&nbsp;<code>id</code>、<code>class</code>&nbsp;命名，在避免冲突并描述清楚的前提下尽可能短。</h4>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;div id=&quot;nav&quot;&gt;&lt;/div&gt;
&lt;!-- bad --&gt;
&lt;div id=&quot;navigation&quot;&gt;&lt;/div&gt;

&lt;!-- good --&gt;
&lt;p class=&quot;comment&quot;&gt;&lt;/p&gt;
&lt;!-- bad --&gt;
&lt;p class=&quot;com&quot;&gt;&lt;/p&gt;

&lt;!-- good --&gt;
&lt;span class=&quot;author&quot;&gt;&lt;/span&gt;
&lt;!-- bad --&gt;
&lt;span class=&quot;red&quot;&gt;&lt;/span&gt;</pre>

<h4>[强制] 禁止为了&nbsp;<code>hook 脚本</code>，创建无样式信息的&nbsp;<code>class</code>。</h4>

<p>解释：</p>

<p>不允许 class 只用于让 JavaScript 选择某些元素，class 应该具有明确的语义和样式。否则容易导致 css class 泛滥。</p>

<p>使用 id、属性选择作为 hook 是更好的方式。</p>

<h4>[强制] 同一页面，应避免使用相同的&nbsp;<code>name</code>&nbsp;与&nbsp;<code>id</code>。</h4>

<p>解释：</p>

<p>IE 浏览器会混淆元素的 id 和 name 属性， document.getElementById 可能获得不期望的元素。所以在对元素的 id 与 name 属性的命名需要非常小心。</p>

<p>一个比较好的实践是，为 id 和 name 使用不同的命名法。</p>

<p>示例：</p>

<pre>
&lt;input name=&quot;foo&quot;&gt;
&lt;div id=&quot;foo&quot;&gt;&lt;/div&gt;
&lt;script&gt;
// IE6 将显示 INPUT
alert(document.getElementById(&#39;foo&#39;).tagName);
&lt;/script&gt;</pre>

<h3>2.3 标签</h3>

<h4>[强制] 标签名必须使用小写字母。</h4>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;p&gt;Hello StyleGuide!&lt;/p&gt;

&lt;!-- bad --&gt;
&lt;P&gt;Hello StyleGuide!&lt;/P&gt;</pre>

<h4>[强制] 对于无需自闭合的标签，不允许自闭合。</h4>

<p>解释：</p>

<p>常见无需自闭合标签有input、br、img、hr等。</p>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;input type=&quot;text&quot; name=&quot;title&quot;&gt;

&lt;!-- bad --&gt;
&lt;input type=&quot;text&quot; name=&quot;title&quot; /&gt;</pre>

<h4>[强制] 对&nbsp;<code>HTML5</code>&nbsp;中规定允许省略的闭合标签，不允许省略闭合标签。</h4>

<p>解释：</p>

<p>对代码体积要求非常严苛的场景，可以例外。比如：第三方页面使用的投放系统。</p>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;ul&gt;
    &lt;li&gt;first&lt;/li&gt;
    &lt;li&gt;second&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- bad --&gt;
&lt;ul&gt;
    &lt;li&gt;first
    &lt;li&gt;second
&lt;/ul&gt;</pre>

<h4>[强制] 标签使用必须符合标签嵌套规则。</h4>

<p>解释：</p>

<p>比如 div 不得置于 p 中，tbody 必须置于 table 中。</p>

<p>详细的标签嵌套规则参见<a href="http://www.cs.tut.fi/~jkorpela/html5.dtd" rel="nofollow">HTML DTD</a>中的&nbsp;<code>Elements</code>&nbsp;定义部分。</p>

<h4>[建议]&nbsp;<code>HTML</code>&nbsp;标签的使用应该遵循标签的语义。</h4>

<p>解释：</p>

<p>下面是常见标签语义</p>

<ul>
	<li>p - 段落</li>
	<li>h1,h2,h3,h4,h5,h6 - 层级标题</li>
	<li>strong,em - 强调</li>
	<li>ins - 插入</li>
	<li>del - 删除</li>
	<li>abbr - 缩写</li>
	<li>code - 代码标识</li>
	<li>cite - 引述来源作品的标题</li>
	<li>q - 引用</li>
	<li>blockquote - 一段或长篇引用</li>
	<li>ul - 无序列表</li>
	<li>ol - 有序列表</li>
	<li>dl,dt,dd - 定义列表</li>
</ul>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;p&gt;Esprima serves as an important &lt;strong&gt;building block&lt;/strong&gt; for some JavaScript language tools.&lt;/p&gt;

&lt;!-- bad --&gt;
&lt;div&gt;Esprima serves as an important &lt;span class=&quot;strong&quot;&gt;building block&lt;/span&gt; for some JavaScript language tools.&lt;/div&gt;</pre>

<h4>[建议] 在&nbsp;<code>CSS</code>&nbsp;可以实现相同需求的情况下不得使用表格进行布局。</h4>

<p>解释：</p>

<p>在兼容性允许的情况下应尽量保持语义正确性。对网格对齐和拉伸性有严格要求的场景允许例外，如多列复杂表单。</p>

<h4>[建议] 标签的使用应尽量简洁，减少不必要的标签。</h4>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;img class=&quot;avatar&quot; src=&quot;image.png&quot;&gt;

&lt;!-- bad --&gt;
&lt;span class=&quot;avatar&quot;&gt;
    &lt;img src=&quot;image.png&quot;&gt;
&lt;/span&gt;</pre>

<h3>2.4 属性</h3>

<h4>[强制] 属性名必须使用小写字母。</h4>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;table cellspacing=&quot;0&quot;&gt;...&lt;/table&gt;

&lt;!-- bad --&gt;
&lt;table cellSpacing=&quot;0&quot;&gt;...&lt;/table&gt;</pre>

<h4>[强制] 属性值必须用双引号包围。</h4>

<p>解释：</p>

<p>不允许使用单引号，不允许不使用引号。</p>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;script src=&quot;esl.js&quot;&gt;&lt;/script&gt;

&lt;!-- bad --&gt;
&lt;script src=&#39;esl.js&#39;&gt;&lt;/script&gt;
&lt;script src=esl.js&gt;&lt;/script&gt;</pre>

<h4>[建议] 布尔类型的属性，建议不添加属性值。</h4>

<p>示例：</p>

<pre>
&lt;input type=&quot;text&quot; disabled&gt;
&lt;input type=&quot;checkbox&quot; value=&quot;1&quot; checked&gt;</pre>

<h4>[建议] 自定义属性建议以&nbsp;<code>xxx-</code>&nbsp;为前缀，推荐使用&nbsp;<code>data-</code>。</h4>

<p>解释：</p>

<p>使用前缀有助于区分自定义属性和标准定义的属性。</p>

<p>示例：</p>

<pre>
&lt;ol data-ui-type=&quot;Select&quot;&gt;&lt;/ol&gt;</pre>

<h2>3 通用</h2>

<h3>3.1 DOCTYPE</h3>

<h4>[强制] 使用&nbsp;<code>HTML5</code>&nbsp;的&nbsp;<code>doctype</code>&nbsp;来启用标准模式，建议使用大写的&nbsp;<code>DOCTYPE</code>。</h4>

<p>示例：</p>

<pre>
&lt;!DOCTYPE html&gt;</pre>

<h4>[建议] 启用 IE Edge 模式。</h4>

<p>示例：</p>

<pre>
&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge&quot;&gt;</pre>

<h4>[建议] 在&nbsp;<code>html</code>&nbsp;标签上设置正确的 lang 属性。</h4>

<p>解释：</p>

<p>有助于提高页面的可访问性，如：让语音合成工具确定其所应该采用的发音，令翻译工具确定其翻译语言等。</p>

<p>示例：</p>

<pre>
&lt;html lang=&quot;zh-CN&quot;&gt;</pre>

<h3>3.2 编码</h3>

<h4>[强制] 页面必须使用精简形式，明确指定字符编码。指定字符编码的&nbsp;<code>meta</code>&nbsp;必须是&nbsp;<code>head</code>&nbsp;的第一个直接子元素。</h4>

<p>解释：</p>

<p>见&nbsp;<a href="http://www.qianduan.net/html5-charset-can-it.html" rel="nofollow">HTML5 Charset能用吗</a>&nbsp;一文。</p>

<p>示例：</p>

<pre>
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset=&quot;UTF-8&quot;&gt;
        ......
    &lt;/head&gt;
    &lt;body&gt;
        ......
    &lt;/body&gt;
&lt;/html&gt;</pre>

<h4>[建议]&nbsp;<code>HTML</code>&nbsp;文件使用无&nbsp;<code>BOM</code>&nbsp;的&nbsp;<code>UTF-8</code>&nbsp;编码。</h4>

<p>解释：</p>

<p>UTF-8 编码具有更广泛的适应性。BOM 在使用程序或工具处理文件时可能造成不必要的干扰。</p>

<h3>3.3 CSS和JavaScript引入</h3>

<h4>[强制] 引入&nbsp;<code>CSS</code>&nbsp;时必须指明&nbsp;<code>rel=&quot;stylesheet&quot;</code>。</h4>

<p>示例：</p>

<pre>
&lt;link rel=&quot;stylesheet&quot; src=&quot;page.css&quot;&gt;</pre>

<h4>[建议] 引入&nbsp;<code>CSS</code>&nbsp;和&nbsp;<code>JavaScript</code>&nbsp;时无须指明&nbsp;<code>type</code>&nbsp;属性。</h4>

<p>解释：</p>

<p><code>text/css</code>&nbsp;和&nbsp;<code>text/javascript</code>&nbsp;是 type 的默认值。</p>

<h4>[建议] 展现定义放置于外部&nbsp;<code>CSS</code>&nbsp;中，行为定义放置于外部&nbsp;<code>JavaScript</code>&nbsp;中。</h4>

<p>解释：</p>

<p>结构-样式-行为的代码分离，对于提高代码的可阅读性和维护性都有好处。</p>

<h4>[建议] 在&nbsp;<code>head</code>&nbsp;中引入页面需要的所有&nbsp;<code>CSS</code>&nbsp;资源。</h4>

<p>解释：</p>

<p>在页面渲染的过程中，新的CSS可能导致元素的样式重新计算和绘制，页面闪烁。</p>

<h4>[建议]&nbsp;<code>JavaScript</code>&nbsp;应当放在页面末尾，或采用异步加载。</h4>

<p>解释：</p>

<p>将 script 放在页面中间将阻断页面的渲染。出于性能方面的考虑，如非必要，请遵守此条建议。</p>

<p>示例：</p>

<pre>
&lt;body&gt;
    &lt;!-- a lot of elements --&gt;
    &lt;script src=&quot;init-behavior.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;</pre>

<h4>[建议] 移动环境或只针对现代浏览器设计的 Web 应用，如果引用外部资源的&nbsp;<code>URL</code>&nbsp;协议部分与页面相同，建议省略协议前缀。</h4>

<p>解释：</p>

<p>使用&nbsp;<code>protocol-relative URL</code>&nbsp;引入 CSS，在&nbsp;<code>IE7/8</code>&nbsp;下，会发两次请求。是否使用&nbsp;<code>protocol-relative URL</code>&nbsp;应充分考虑页面针对的环境。</p>

<p>示例：</p>

<pre>
&lt;script src=&quot;//s1.bdstatic.com/cache/static/jquery-1.10.2.min_f2fb5194.js&quot;&gt;&lt;/script&gt;</pre>

<h2>4 head</h2>

<h3>4.1 title</h3>

<h4>[强制] 页面必须包含&nbsp;<code>title</code>&nbsp;标签声明标题。</h4>

<h4>[强制]&nbsp;<code>title</code>&nbsp;必须作为&nbsp;<code>head</code>&nbsp;的直接子元素，并紧随&nbsp;<code>charset</code>&nbsp;声明之后。</h4>

<p>解释：</p>

<p>title 中如果包含 ascii 之外的字符，浏览器需要知道字符编码类型才能进行解码，否则可能导致乱码。</p>

<p>示例：</p>

<pre>
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;页面标题&lt;/title&gt;
&lt;/head&gt;</pre>

<h3>4.2 favicon</h3>

<h4>[强制] 保证&nbsp;<code>favicon</code>&nbsp;可访问。</h4>

<p>解释：</p>

<p>在未指定 favicon 时，大多数浏览器会请求 Web Server 根目录下的 favicon.ico 。为了保证favicon可访问，避免404，必须遵循以下两种方法之一：</p>

<ol>
	<li>在 Web Server 根目录放置 favicon.ico 文件。</li>
	<li>使用 link 指定 favicon。</li>
</ol>

<p>示例：</p>

<pre>
&lt;link rel=&quot;shortcut icon&quot; href=&quot;path/to/favicon.ico&quot;&gt;</pre>

<h3>4.3 viewport</h3>

<h4>[建议] 若页面欲对移动设备友好，需指定页面的&nbsp;<code>viewport</code>。</h4>

<p>解释：</p>

<p>viewport meta tag可以设置可视区域的宽度和初始缩放大小，避免在移动设备上出现页面展示不正常。</p>

<p>比如，在页面宽度小于 980px 时，若需 iOS 设备友好，应当设置 viewport 的 width 值来适应你的页面宽度。同时因为不同移动设备分辨率不同，在设置时，应当使用 device-width 和 device-height 变量。</p>

<p>另外，为了使 viewport 正常工作，在页面内容样式布局设计上也要做相应调整，如避免绝对定位等。关于 viewport 的更多介绍，可以参见&nbsp;<a href="https://developer.apple.com/library/mac/documentation/AppleApplications/Reference/SafariWebContent/UsingtheViewport/UsingtheViewport.html#//apple_ref/doc/uid/TP40006509-SW26" rel="nofollow">Safari Web Content Guide的介绍</a></p>

<h2>5 图片</h2>

<h4>[强制] 禁止&nbsp;<code>img</code>&nbsp;的&nbsp;<code>src</code>&nbsp;取值为空。延迟加载的图片也要增加默认的&nbsp;<code>src</code>。</h4>

<p>解释：</p>

<p>src 取值为空，会导致部分浏览器重新加载一次当前页面，参考：<a href="https://developer.yahoo.com/performance/rules.html#emptysrc" rel="nofollow">https://developer.yahoo.com/performance/rules.html#emptysrc</a></p>

<h4>[建议] 避免为&nbsp;<code>img</code>&nbsp;添加不必要的&nbsp;<code>title</code>&nbsp;属性。</h4>

<p>解释：</p>

<p>多余的 title 影响看图体验，并且增加了页面尺寸。</p>

<h4>[建议] 为重要图片添加&nbsp;<code>alt</code>&nbsp;属性。</h4>

<p>解释：</p>

<p>可以提高图片加载失败时的用户体验。</p>

<h4>[建议] 添加&nbsp;<code>width</code>&nbsp;和&nbsp;<code>height</code>&nbsp;属性，以避免页面抖动。</h4>

<h4>[建议] 有下载需求的图片采用&nbsp;<code>img</code>&nbsp;标签实现，无下载需求的图片采用&nbsp;<code>CSS</code>&nbsp;背景图实现。</h4>

<p>解释：</p>

<ol>
	<li>产品 logo、用户头像、用户产生的图片等有潜在下载需求的图片，以 img 形式实现，能方便用户下载。</li>
	<li>无下载需求的图片，比如：icon、背景、代码使用的图片等，尽可能采用 css 背景图实现。</li>
</ol>

<h2>6 表单</h2>

<h3>6.1 控件标题</h3>

<h4>[强制] 有文本标题的控件必须使用&nbsp;<code>label</code>&nbsp;标签将其与其标题相关联。</h4>

<p>解释：</p>

<p>有两种方式：</p>

<ol>
	<li>将控件置于 label 内。</li>
	<li>label 的 for 属性指向控件的 id。</li>
</ol>

<p>推荐使用第一种，减少不必要的 id。如果 DOM 结构不允许直接嵌套，则应使用第二种。</p>

<p>示例：</p>

<pre>
&lt;label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;confirm&quot; value=&quot;on&quot;&gt; 我已确认上述条款&lt;/label&gt;

&lt;label for=&quot;username&quot;&gt;用户名：&lt;/label&gt; &lt;input type=&quot;textbox&quot; name=&quot;username&quot; id=&quot;username&quot;&gt;</pre>

<h3>6.2 按钮</h3>

<h4>[强制] 使用&nbsp;<code>button</code>&nbsp;元素时必须指明&nbsp;<code>type</code>&nbsp;属性值。</h4>

<p>解释：</p>

<p>button 元素的默认 type 为 submit，如果被置于 form 元素中，点击后将导致表单提交。为显示区分其作用方便理解，必须给出 type 属性。</p>

<p>示例：</p>

<pre>
&lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt;
&lt;button type=&quot;button&quot;&gt;取消&lt;/button&gt;</pre>

<h4>[建议] 尽量不要使用按钮类元素的&nbsp;<code>name</code>&nbsp;属性。</h4>

<p>解释：</p>

<p>由于浏览器兼容性问题，使用按钮的 name 属性会带来许多难以发现的问题。具体情况可参考<a href="http://w3help.org/zh-cn/causes/CM2001" rel="nofollow">此文</a>。</p>

<h3>6.3 可访问性 (A11Y)</h3>

<h4>[建议] 负责主要功能的按钮在&nbsp;<code>DOM</code>&nbsp;中的顺序应靠前。</h4>

<p>解释：</p>

<p>负责主要功能的按钮应相对靠前，以提高可访问性。如果在 CSS 中指定了&nbsp;<code>float: right</code>&nbsp;则可能导致视觉上主按钮在前，而 DOM 中主按钮靠后的情况。</p>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;style&gt;
.buttons .button-group {
    float: right;
}
&lt;/style&gt;

&lt;div class=&quot;buttons&quot;&gt;
    &lt;div class=&quot;button-group&quot;&gt;
        &lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt;
        &lt;button type=&quot;button&quot;&gt;取消&lt;/button&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;!-- bad --&gt;
&lt;style&gt;
.buttons button {
    float: right;
}
&lt;/style&gt;

&lt;div class=&quot;buttons&quot;&gt;
    &lt;button type=&quot;button&quot;&gt;取消&lt;/button&gt;
    &lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt;
&lt;/div&gt;</pre>

<h4>[建议] 当使用&nbsp;<code>JavaScript</code>&nbsp;进行表单提交时，如果条件允许，应使原生提交功能正常工作。</h4>

<p>解释：</p>

<p>当浏览器 JS 运行错误或关闭 JS 时，提交功能将无法工作。如果正确指定了 form 元素的 action 属性和表单控件的 name 属性时，提交仍可继续进行。</p>

<p>示例：</p>

<pre>
&lt;form action=&quot;/login&quot; method=&quot;post&quot;&gt;
    &lt;p&gt;&lt;input name=&quot;username&quot; type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt;&lt;/p&gt;
    &lt;p&gt;&lt;input name=&quot;password&quot; type=&quot;password&quot; placeholder=&quot;密码&quot;&gt;&lt;/p&gt;
&lt;/form&gt;</pre>

<h4>[建议] 在针对移动设备开发的页面时，根据内容类型指定输入框的&nbsp;<code>type</code>&nbsp;属性。</h4>

<p>解释：</p>

<p>根据内容类型指定输入框类型，能获得能友好的输入体验。</p>

<p>示例：</p>

<pre>
&lt;input type=&quot;date&quot;&gt;</pre>

<h2>7 多媒体</h2>

<h4>[建议] 当在现代浏览器中使用&nbsp;<code>audio</code>&nbsp;以及&nbsp;<code>video</code>&nbsp;标签来播放音频、视频时，应当注意格式。</h4>

<p>解释：</p>

<p>音频应尽可能覆盖到如下格式：</p>

<ul>
	<li>MP3</li>
	<li>WAV</li>
	<li>Ogg</li>
</ul>

<p>视频应尽可能覆盖到如下格式：</p>

<ul>
	<li>MP4</li>
	<li>WebM</li>
	<li>Ogg</li>
</ul>

<h4>[建议] 在支持&nbsp;<code>HTML5</code>&nbsp;的浏览器中优先使用&nbsp;<code>audio</code>&nbsp;和&nbsp;<code>video</code>&nbsp;标签来定义音视频元素。</h4>

<h4>[建议] 使用退化到插件的方式来对多浏览器进行支持。</h4>

<p>示例：</p>

<pre>
&lt;audio controls&gt;
    &lt;source src=&quot;audio.mp3&quot; type=&quot;audio/mpeg&quot;&gt;
    &lt;source src=&quot;audio.ogg&quot; type=&quot;audio/ogg&quot;&gt;
    &lt;object width=&quot;100&quot; height=&quot;50&quot; data=&quot;audio.mp3&quot;&gt;
        &lt;embed width=&quot;100&quot; height=&quot;50&quot; src=&quot;audio.swf&quot;&gt;
    &lt;/object&gt;
&lt;/audio&gt;

&lt;video width=&quot;100&quot; height=&quot;50&quot; controls&gt;
    &lt;source src=&quot;video.mp4&quot; type=&quot;video/mp4&quot;&gt;
    &lt;source src=&quot;video.ogg&quot; type=&quot;video/ogg&quot;&gt;
    &lt;object width=&quot;100&quot; height=&quot;50&quot; data=&quot;video.mp4&quot;&gt;
        &lt;embed width=&quot;100&quot; height=&quot;50&quot; src=&quot;video.swf&quot;&gt;
    &lt;/object&gt;
&lt;/video&gt;</pre>

<h4>[建议] 只在必要的时候开启音视频的自动播放。</h4>

<h4>[建议] 在&nbsp;<code>object</code>&nbsp;标签内部提供指示浏览器不支持该标签的说明。</h4>

<p>示例：</p>

<pre>
&lt;object width=&quot;100&quot; height=&quot;50&quot; data=&quot;something.swf&quot;&gt;DO NOT SUPPORT THIS TAG&lt;/object&gt;</pre>

<h2>8 模板中的 HTML</h2>

<h4>[建议] 模板代码的缩进优先保证&nbsp;<code>HTML</code>&nbsp;代码的缩进规则。</h4>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
{if $display == true}
&lt;div&gt;
    &lt;ul&gt;
    {foreach $item_list as $item}
        &lt;li&gt;{$item.name}&lt;li&gt;
    {/foreach}
    &lt;/ul&gt;
&lt;/div&gt;
{/if}

&lt;!-- bad --&gt;
{if $display == true}
    &lt;div&gt;
        &lt;ul&gt;
    {foreach $item_list as $item}
        &lt;li&gt;{$item.name}&lt;li&gt;
    {/foreach}
        &lt;/ul&gt;
    &lt;/div&gt;
{/if}</pre>

<h4>[建议] 模板代码应以保证&nbsp;<code>HTML</code>&nbsp;单个标签语法的正确性为基本原则。</h4>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;li class=&quot;{if $item.type_id == $current_type}focus{/if}&quot;&gt;{ $item.type_name }&lt;/li&gt;

&lt;!-- bad --&gt;
&lt;li {if $item.type_id == $current_type} class=&quot;focus&quot;{/if}&gt;{ $item.type_name }&lt;/li&gt;</pre>

<h4>[建议] 在循环处理模板数据构造表格时，若要求每行输出固定的个数，建议先将数据分组，之后再循环输出。</h4>

<p>示例：</p>

<pre>
&lt;!-- good --&gt;
&lt;table&gt;
    {foreach $item_list as $item_group}
    &lt;tr&gt;
        {foreach $item_group as $item}
        &lt;td&gt;{ $item.name }&lt;/td&gt;
        {/foreach}
    &lt;tr&gt;
    {/foreach}
&lt;/table&gt;

&lt;!-- bad --&gt;
&lt;table&gt;
&lt;tr&gt;
    {foreach $item_list as $item}
    &lt;td&gt;{ $item.name }&lt;/td&gt;
        {if $item@iteration is div by 5}
    &lt;/tr&gt;
    &lt;tr&gt;
        {/if}
    {/foreach}
&lt;/tr&gt;
&lt;/table&gt;</pre>
