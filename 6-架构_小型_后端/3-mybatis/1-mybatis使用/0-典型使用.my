<h1>MyBatis的Mapper接口以及Example的实例函数及详解</h1>

<p>一、mapper接口中的方法解析</p>

<p>mapper接口中的函数及方法</p>

<table>
	<thead>
		<tr>
			<th>方法</th>
			<th>功能说明</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>int countByExample(UserExample example) thorws SQLException</td>
			<td>按条件计数</td>
		</tr>
		<tr>
			<td>int deleteByPrimaryKey(Integer id) thorws SQLException</td>
			<td>按主键删除</td>
		</tr>
		<tr>
			<td>int deleteByExample(UserExample example) thorws SQLException</td>
			<td>按条件查询</td>
		</tr>
		<tr>
			<td>String/Integer insert(User record) thorws SQLException</td>
			<td>插入数据（返回值为ID）</td>
		</tr>
		<tr>
			<td>User selectByPrimaryKey(Integer id) thorws SQLException</td>
			<td>按主键查询</td>
		</tr>
		<tr>
			<td>ListselectByExample(UserExample example) thorws SQLException</td>
			<td>按条件查询</td>
		</tr>
		<tr>
			<td>ListselectByExampleWithBLOGs(UserExample example) thorws SQLException</td>
			<td>按条件查询（包括BLOB字段）。只有当数据表中的字段类型有为二进制的才会产生。</td>
		</tr>
		<tr>
			<td>int updateByPrimaryKey(User record) thorws SQLException</td>
			<td>按主键更新</td>
		</tr>
		<tr>
			<td>int updateByPrimaryKeySelective(User record) thorws SQLException</td>
			<td>按主键更新值不为null的字段</td>
		</tr>
		<tr>
			<td>int updateByExample(User record, UserExample example) thorws SQLException</td>
			<td>按条件更新</td>
		</tr>
		<tr>
			<td>int updateByExampleSelective(User record, UserExample example) thorws SQLException</td>
			<td>按条件更新值不为null的字段</td>
		</tr>
	</tbody>
</table>

<h3>二、example实例解析</h3>

<p>mybatis的逆向工程中会生成实例及实例对应的example，example用于添加条件，相当where后面的部分&nbsp;<br />
xxxExample example = new xxxExample();&nbsp;<br />
Criteria criteria = new Example().createCriteria();</p>

<table>
	<thead>
		<tr>
			<th>方法</th>
			<th>说明</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>example.setOrderByClause(&ldquo;字段名 ASC&rdquo;);</td>
			<td>添加升序排列条件，DESC为降序</td>
		</tr>
		<tr>
			<td>example.setDistinct(false)</td>
			<td>去除重复，boolean型，true为选择不重复的记录。</td>
		</tr>
		<tr>
			<td>criteria.andXxxIsNull</td>
			<td>添加字段xxx为null的条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxIsNotNull</td>
			<td>添加字段xxx不为null的条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxEqualTo(value)</td>
			<td>添加xxx字段等于value条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxNotEqualTo(value)</td>
			<td>添加xxx字段不等于value条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxGreaterThan(value)</td>
			<td>添加xxx字段大于value条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxGreaterThanOrEqualTo(value)</td>
			<td>添加xxx字段大于等于value条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxLessThan(value)</td>
			<td>添加xxx字段小于value条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxLessThanOrEqualTo(value)</td>
			<td>添加xxx字段小于等于value条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxIn(List&lt;？&gt;)</td>
			<td>添加xxx字段值在List&lt;？&gt;条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxNotIn(List&lt;？&gt;)</td>
			<td>添加xxx字段值不在List&lt;？&gt;条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxLike(&ldquo;%&rdquo;+value+&rdquo;%&rdquo;)</td>
			<td>添加xxx字段值为value的模糊查询条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxNotLike(&ldquo;%&rdquo;+value+&rdquo;%&rdquo;)</td>
			<td>添加xxx字段值不为value的模糊查询条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxBetween(value1,value2)</td>
			<td>添加xxx字段值在value1和value2之间条件</td>
		</tr>
		<tr>
			<td>criteria.andXxxNotBetween(value1,value2)</td>
			<td>添加xxx字段值不在value1和value2之间条件</td>
		</tr>
	</tbody>
</table>

<h3>三、应用举例</h3>

<h4>1.查询</h4>

<p>① selectByPrimaryKey()</p>

<pre>
<code>User user = XxxMapper.selectByPrimaryKey(100); //相当于select * from user where id = 100</code></pre>

<ul>
	<li>1</li>
</ul>

<p>② selectByExample() 和 selectByExampleWithBLOGs()</p>

<pre>
<code>UserExample example = new UserExample();
Criteria criteria = example.createCriteria();
criteria.andUsernameEqualTo(&quot;wyw&quot;);
criteria.andUsernameIsNull();
example.setOrderByClause(&quot;username asc,email desc&quot;);
List&lt;?&gt;list = XxxMapper.selectByExample(example);
//相当于：select * from user where username = &#39;wyw&#39; and  username is null order by username asc,email desc</code></pre>

<p>注：在iBator逆向工程生成的文件XxxExample.java中包含一个static的内部类Criteria，Criteria中的方法是定义SQL 语句where后的查询条件。</p>

<h4>2.插入数据</h4>

<p>①insert()</p>

<pre>
<code>User user = new User();
user.setId(&quot;dsfgsdfgdsfgds&quot;);
user.setUsername(&quot;admin&quot;);
user.setPassword(&quot;admin&quot;)
user.setEmail(&quot;wyw@163.com&quot;);
XxxMapper.insert(user);
//相当于：insert into user(ID,username,password,email) values (&#39;dsfgsdfgdsfgds&#39;,&#39;admin&#39;,&#39;admin&#39;,&#39;wyw@126.com&#39;);</code></pre>

<h4>3.更新数据</h4>

<p>①updateByPrimaryKey()</p>

<pre>
<code>User user =new User();
user.setId(&quot;dsfgsdfgdsfgds&quot;);
user.setUsername(&quot;wyw&quot;);
user.setPassword(&quot;wyw&quot;);
user.setEmail(&quot;wyw@163.com&quot;);
XxxMapper.updateByPrimaryKey(user);
//相当于：update user set username=&#39;wyw&#39;, password=&#39;wyw&#39;, email=&#39;wyw@163.com&#39; where id=&#39;dsfgsdfgdsfgds&#39;</code></pre>

<p>②updateByPrimaryKeySelective()</p>

<pre>
<code>User user = new User();
user.setId(&quot;dsfgsdfgdsfgds&quot;);
user.setPassword(&quot;wyw&quot;);
XxxMapper.updateByPrimaryKey(user);
//相当于：update user set password=&#39;wyw&#39; where id=&#39;dsfgsdfgdsfgds&#39;</code></pre>

<p>③ updateByExample() 和 updateByExampleSelective()</p>

<pre>
<code>UserExample example = new UserExample();
Criteria criteria = example.createCriteria();
criteria.andUsernameEqualTo(&quot;admin&quot;);
User user = new User();
user.setPassword(&quot;wyw&quot;);
XxxMapper.updateByPrimaryKeySelective(user,example);
//相当于：update user set password=&#39;wyw&#39; where username=&#39;admin&#39;</code></pre>

<p>updateByExample()更新所有的字段，包括字段为null的也更新，建议使用 updateByExampleSelective()更新想更新的字段</p>

<h4>4.删除数据</h4>

<p>①deleteByPrimaryKey()</p>

<pre>
<code>XxxMapper.deleteByPrimaryKey(1);  //相当于：delete from user where id=1</code></pre>

<p>②deleteByExample()</p>

<pre>
<code>UserExample example = new UserExample();
Criteria criteria = example.createCriteria();
criteria.andUsernameEqualTo(&quot;admin&quot;);
XxxMapper.deleteByExample(example);
//相当于：delete from user where username=&#39;admin&#39;</code></pre>

<h4>5.查询数据数量</h4>

<p>①countByExample()</p>

<pre>
<code>UserExample example = new UserExample();
Criteria criteria = example.createCriteria();
criteria.andUsernameEqualTo(&quot;wyw&quot;);
int count = XxxMapper.countByExample(example);
//相当于：select count(*) from</code></pre>
