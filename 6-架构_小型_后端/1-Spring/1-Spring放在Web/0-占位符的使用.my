<h1><strong>Spring 利用PropertyPlaceholderConfigurer占位符</strong></h1>

<p>&nbsp;</p>

<p>通过占位符，将属性文件中的proprietary文件里的属性通过 ${} 方式用于xml配置文件。</p>

<p>1. PropertyPlaceholderConfigurer是个bean工厂后置处理器的实现，也就是 BeanFactoryPostProcessor接口的一个实现。PropertyPlaceholderConfigurer可以将上下文（配置文 件）中的属性值放在另一个单独的标准java Properties文件中去。在XML文件中用${key}替换指定的properties文件中的值。这样的话，只需要对properties文件进 行修改，而不用对xml配置文件进行修改。</p>

<p>2.在Spring中，使用PropertyPlaceholderConfigurer可以在XML配置文件中加入外部属性文件，当然也可以指定外部文件的编码，如：</p>

<pre>
&lt;bean id=&quot;propertyConfigurer&quot;class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&gt;

   &lt;property name=&quot;location&quot;&gt;

     &lt;value&gt;conf/sqlmap/jdbc.properties&lt;/value&gt;

   &lt;/property&gt;

    &lt;property name=&quot;fileEncoding&quot;&gt;

      &lt;value&gt;UTF-8&lt;/value&gt;

    &lt;/property&gt;

&lt;/bean&gt;
</pre>

<p>&nbsp;</p>

<p>当然也可以引入多个属性文件，如：</p>

<pre>
&lt;bean id=&quot;propertyConfigurer&quot;class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&gt;

  &lt;property name=&quot;locations&quot;&gt;

   &lt;list&gt;

    &lt;value&gt;/WEB-INF/mail.properties&lt;/value&gt;  

    &lt;value&gt;classpath: conf/sqlmap/jdbc.properties&lt;/value&gt;//注意这两种value值的写法

   &lt;/list&gt;

  &lt;/property&gt;

&lt;/bean&gt;
</pre>

<p>&nbsp;</p>

<p>3.譬如，jdbc.properties的内容为：</p>

<pre>
jdbc.driverClassName=com.mysql.jdbc.Driver

jdbc.url=jdbc:mysql://localhost/mysqldb?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;zeroDateTimeBehavior=round;

jdbc.username=root

jdbc.password=123456
</pre>

<p>&nbsp;</p>

<p>4.那么在spring配置文件中，我们就可以这样写：</p>

<pre>
&lt;bean id=&quot;propertyConfigurer&quot;class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&gt;

  &lt;property name=&quot;locations&quot;&gt;

   &lt;list&gt;

    &lt;value&gt;classpath: conf/sqlmap/jdbc.properties &lt;/value&gt;

   &lt;/list&gt;

  &lt;/property&gt;

&lt;/bean&gt;

&lt;bean id=&quot;dataSource&quot;class=&quot;org.apache.commons.dbcp.BasicDataSource&quot;destroy-method=&quot;close&quot;&gt;

  &lt;property name=&quot;driverClassName&quot;value=&quot;${jdbc.driverClassName}&quot; /&gt;

  &lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot; /&gt;

  &lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot;/&gt;

  &lt;property name=&quot;password&quot;value=&quot;${jdbc.password}&quot; /&gt;

&lt;/bean&gt;</pre>

<p>&nbsp;</p>

<p>5.这样，一个简单的数据源就设置完毕了。可以看出：PropertyPlaceholderConfigurer起的作用就是将占位符指向的数据库配置信息放在bean中定义的工具。</p>

<p>6.查看源代码，可以发现，locations属性定义在PropertyPlaceholderConfigurer的祖父类 PropertiesLoaderSupport中，而location只有 setter方法。类似于这样的配置，在spring的源程序中很常见的。</p>

<p>PropertyPlaceholderConfigurer如果在指定的Properties文件中找不到你想使用的属性，它还会在Java的System类属性中查找。</p>

<p>我们可以通过System.setProperty(key, value)或者java中通过-Dnamevalue来给Spring配置文件传递参数。</p>
