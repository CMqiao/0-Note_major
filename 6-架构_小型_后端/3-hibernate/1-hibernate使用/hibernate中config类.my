<h1>Hibernate中的Configuration类</h1>

<p>Configuration类用来管理我们的配置文件的信息的，通过它，我们可以通过创建一个configuration实例来管理相应的配置文档，但是通常我们只创建一个configuration实例。&nbsp;<br />
下面是一个通用的创建实例的代码&nbsp;<br />
Java代码&nbsp;</p>

<ol start="1">
	<li>try{&nbsp;&nbsp;</li>
	<li>&nbsp;sessionFactory&nbsp;=&nbsp;new&nbsp;Configuration().configure().buildSessionFactory();&nbsp;&nbsp;</li>
	<li>}catch(HibernateException&nbsp;e){&nbsp;&nbsp;</li>
	<li>&nbsp;throw&nbsp;new&nbsp;RuntimeException(e.getMessage,e);&nbsp;&nbsp;</li>
	<li>}&nbsp;&nbsp;</li>
</ol>

<p>在这里，我们看到：要创建一个Configuration,可以使用&nbsp;<br />
Configuration config = new Configuration().configure();&nbsp;<br />
这里我们要明白的是，Configuration是入口，通过它来获得配置文件。&nbsp;<br />
同时Configuration还可以通过指定参数来传递：&nbsp;<br />
下面看：&nbsp;<br />
File file = new File(&quot;c:\\Hibernate.xml&quot;);&nbsp;<br />
Configuration config = new Configuration().config(file);&nbsp;<br />
同时，Configuration还有一些比较重要的方法：&nbsp;<br />
addProperties();&nbsp;<br />
setProperties();&nbsp;<br />
下面看一下例子：&nbsp;<br />
Properties properties = Porperties.load(&quot;a.properties&quot;);&nbsp;<br />
Configuration configure = new Configuration().setProperties(properties).config();&nbsp;<br />
同时还可以指定.hbm.xml文件，下面是几种方法：&nbsp;<br />
addClass();&nbsp;<br />
addFile();&nbsp;<br />
addURL();&nbsp;<br />
下面看一下例子：&nbsp;<br />
Configuration configure = new Configuration().addClass(Order.class);&nbsp;<br />
Configuration configure = new Configuration().addURL(Configuration.class.getResource(Order.hbm.xml));&nbsp;<br />
Configuration configure = new Configuration().addFile(&quot;Order.hbm.xml&quot;);&nbsp;<br />
<br />
下面简单的看一下SessionFactory类&nbsp;<br />
首先看一下代码&nbsp;<br />
Configuration configure = new Configuration().configure();&nbsp;<br />
SessionFactory sessions = configure.buildSessionFactory();&nbsp;<br />
这里要说明的是，SessionFactory是线程安全的，可以被多个线程调用。在我们实际开发中，我们可以在初始化的部分构造一个SessionFactory即可，比如，在一个公共静态类中初始化一个SessionFactory的readonly常量等等。它充当数据存储源的代理。这里用到了工厂模式。需要注意的是SessionFactory并不是轻量级的，因为一般情况下，一个项目通常只需要一个SessionFactory就够，当需要操作多个数据库时，可以为每个数据库指定一个SessionFactory。</p>
