<h1>页面跳转froward和redirect</h1>

<h2>1.response.getWriter()</h2>

<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 可以直接返回生成的html页面，或者类似于文件下载的数据流。<br />
&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; 情况一:普通的页面请求，然后会直接返回生成的html到页面。<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;PrintWriter out = response.getWriter(); &nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;out.write(&quot;write something&quot;);<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;out.flush();<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;out.close();<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;只是在返回的页面的某处加上输出部分。并不会再response中给ajax回调使用。</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 情况二:通过ajax发送过来的请求，out里面的内容设为json对象/字符串，。<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; JSONObject jsonObject = new JSONObject(); &nbsp;<br />
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;jsonObject.put(&quot;categorys&quot;, objectTypes); &nbsp;<br />
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;JSONArray jsonArray = new JSONArray(); &nbsp;<br />
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;jsonArray.add(jsonObject); &nbsp;</p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; 默认的这个out对象是将内容返回作为页面的一部分。不会给ajax处理。跟情况一相同。<br />
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PrintWriter out = response.getWriter(); &nbsp;<br />
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;out.write(jsonArray.toString());&nbsp;<br />
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;out.flush();<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;out.close();</p>

<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;返回给ajax处理，需要设置setContentType如下：<br />
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;response.setCharacterEncoding(&quot;utf-8&quot;);<br />
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;response.setContentType(&quot;application/json; charset=utf-8&quot;);<br />
&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;response.getWriter().write(jsonArray.toString());<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;response.getWriter().flush();<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;response.getWriter().close();</p>

<h2>2.response.getOutputStream()&nbsp;&nbsp; &nbsp;//输出非文本使用。</h2>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 返回文件流，作为下载功能。<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void downloadSingle( HttpServletRequest request, HttpServletResponse response)<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;throws ServletException, IOException, ParseException{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;response.setContentType(&quot;application/x-download&quot;); &nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;response.setHeader(&quot;Content-disposition&quot;,&quot;attachment;filename=&quot; &nbsp; &nbsp;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ URLEncoder.encode(&quot;download.xls&quot;, &quot;UTF-8&quot;));<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;OutputStream out = response.getOutputStream();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;wb.write(out);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;out.flush();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;out.close();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;}</p>

<h2>3.RequestDispatcher.forward()</h2>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 是在服务器端起作用,当使用forward()时,Servlet engine传递HTTP请求从当前的Servlet or JSP到另外一个Servlet,JSP 或普通HTML文件,也即你的form提交至a.jsp,在a.jsp用到了forward()重定向至b.jsp,此时form提交的所有信息在b.jsp都可以获得,参数自动传递.</p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;但forward()无法重定向至有frame的jsp文件,可以重定向至有frame的html文件,同时forward()无法在后面带参数传递,比如servlet?name=frank,这样不行,可以程序内通过response.setAttribute(&quot;name&quot;,name)来传至下一个页面.</p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;重定向后浏览器地址栏URL不变.<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;例:在servlet中进行重定向<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void doPost(HttpServletRequest request,HttpServletResponse response)<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;throws ServletException,IOException<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;　response.setContentType(&quot;text/html; charset=gb2312&quot;);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;　ServletContext sc = getServletContext();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;　RequestDispatcher rd = null;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;　rd = sc.getRequestDispatcher(&quot;/index.jsp&quot;); //定向的页面<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;　rd.forward(request, response);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;　　通常在servlet中使用，不在jsp中使用。</p>

<h2>4.response.sendRedirect()</h2>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 是在用户的浏览器端工作,sendRedirect()可以带参数传递,比如servlet?name=frank传至下个页面,同时它可以重定向至不同的主机上,sendRedirect()可以重定向有frame.的jsp文件.<br />
　　&nbsp;&nbsp; &nbsp;重定向后在浏览器地址栏上会出现重定向页面的URL<br />
　　&nbsp;&nbsp; &nbsp;例:在servlet中重定向<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;public void doPost(HttpServletRequest request,HttpServletResponse response)<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;throws ServletException,IOException<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;　response.setContentType(&quot;text/html; charset=gb2312&quot;);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;　response.sendRedirect(&quot;/index.jsp&quot;);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;　　由于response是jsp页面中的隐含对象，故在jsp页面中可以用response.sendRedirect()直接实现重定位。</p>

<h2>5.jsp:forward page=&quot;&quot; &nbsp;</h2>

<p>&nbsp; &nbsp; 　　它的底层部分是由RequestDispatcher来实现的，因此它带有RequestDispatcher.forward()方法的印记。<br />
&nbsp;&nbsp; &nbsp;　　如果在&lt;jsp:forward&gt;之前有很多输出,前面的输出已使缓冲区满,将自动输出到客户端,那么该语句将不起作用,这一点应该特别注意。<br />
&nbsp;&nbsp; &nbsp;　　另外要注意：它不能改变浏览器地址，刷新的话会导致重复提交</p>

<h2>6.修改HTTP header的Location属性来重定向</h2>

<p>&nbsp; &nbsp; 　　通过设置直接修改地址栏来实现页面的重定向。<br />
&nbsp;&nbsp; &nbsp;　　jsp文件代码如下：<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;%<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;response.setStatus(HttpServletResponse.SC_MOVED_PERMANENTLY);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String newLocn = &quot;/newpath/jsa.jsp&quot;;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;response.setHeader(&quot;Location&quot;,newLocn);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;%&gt;</p>

<h2>7.JSP中实现在某页面停留若干秒后,自动重定向到另一页面</h2>

<p>　　&nbsp;&nbsp; &nbsp;在html文件中，下面的代码：</p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;300; url=target.jsp&quot;&gt;<br />
&nbsp;&nbsp; &nbsp;　　它的含义：在5分钟之后正在浏览的页面将会自动变为target.html这一页。代码中300为刷新的延迟时间，以秒为单位。<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;targer class=&quot;&quot;&gt;&lt;/targer&gt;html为你想转向的目标页,若为本页则为自动刷新本页。</p>

<p>　　&nbsp;&nbsp; &nbsp;由上可知，可以通过setHeader来实现某页面停留若干秒后,自动重定向到另一页面。</p>

<p>　　&nbsp;&nbsp; &nbsp;关键代码：</p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String content=stayTime+&quot;;URL=&quot;+URL;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;response.setHeader(&quot;REFRESH&quot;,content);</p>

<p><br />
总结 &nbsp; &nbsp; &nbsp;<br />
----------------------------------------------------------------------------------------------------<br />
|类别&nbsp;&nbsp; &nbsp; |概念 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|共享数据&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;|应用 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp;<br />
|--------|----------------------------|---------------------------|--------------------------------|<br />
|Redirect|URL重新定向：可以是任意的URL|不能共享request里面的数据 &nbsp;|一般用于用户注销登录时返回主页面|<br />
| &nbsp; &nbsp; &nbsp; &nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;|和跳转到其它的网站等等 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />
|--------|----------------------------|---------------------------|--------------------------------|<br />
|Forward |页面的转发：只能是同一个Web |转发页面和转发到的页面可以 |一般用于用户登录的时候根据角色 &nbsp;|&nbsp;<br />
| &nbsp; &nbsp; &nbsp; &nbsp;|应用程序的其他Web组件 &nbsp; &nbsp; &nbsp; |共享request里面的数据&nbsp;&nbsp; &nbsp; &nbsp;|转发到相应的模块等等 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp;<br />
----------------------------------------------------------------------------------------------------</p>

<p><br />
&nbsp;</p>
