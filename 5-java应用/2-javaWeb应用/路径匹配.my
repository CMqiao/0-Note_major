<h1><a href="http://www.cnblogs.com/51kata/p/5152400.html" id="cb_post_title_url">servlet的url-pattern匹配规则详细描述</a></h1>

<p><strong>一、概述</strong></p>

<p>在利用servlet或Filter进行url请求的匹配时，很关键的一点就是匹配规则，但servlet容器中的匹配规则既不是简单的通配，也不是正则表达式，而是由自己的规则，比较容易混淆。本文来详细举例介绍下。下面的说明都是在tomcat服务器中得到验证的。</p>

<p>先介绍一下匹配的概念，上例子代码。在一个app（如名字为myapp）的web.xml文件中，有如下信息：</p>

<pre>
&lt;servlet&gt;
    &lt;servlet-name&gt;MyServlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.nau.MyServlet&lt;/servlet-class&gt;
  &lt;/servlet&gt;
  
  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;MyServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;xxxxxx&lt;/url-pattern&gt;
   &lt;url-pattern&gt;yyyyyyy&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;
</pre>

<p>上面的配置信息，其中&lt;servlet&gt;标签首先配置声明一个servlet，包括servlet的名字和对应的java类名。<br />
其中&lt;servlet-mapping&gt;标签声明了与该servlet相应的匹配规则，每个&lt;url-pattern&gt;标签代表1个匹配规则。</p>

<p>当浏览器发起一个url请求后，该请求发送到servlet容器的时候，容器先会将请求的url减去当前应用上下文的路径作为servlet的映射url，比如url是http://10.43.11.143/myapp/kata/detail.html，其应用上下文是myapp，容器会将http://10.43.11.143/myapp去掉，剩下的/kata/detail.html部分拿来做servlet的映射匹配。这个映射匹配过程是有优先顺序的(具体的优先顺序规则后面介绍)，而且当有一个servlet匹配成功以后，就不会去理会剩下的servlet了。</p>

<p>注意Filter的匹配规则与servlet一样，但对于filter，不会像servlet那样只匹配一个servlet，因为filter的集合是一个链，所以只会有处理的顺序不同，而不会出现只选择一个filter。Filter的处理顺序和filter-mapping在web.xml中定义的顺序相同。&nbsp;</p>

<p>下面我们详细介绍各种匹配规则</p>

<p><strong>二、精确匹配</strong></p>

<p>&lt;url-pattern&gt;中配置的项必须与url完全精确匹配。</p>

<p>如配置信息如下：</p>

<pre>
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;MyServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/kata/detail.html&lt;/url-pattern&gt;
    &lt;url-pattern&gt;/demo.html&lt;/url-pattern&gt;
    &lt;url-pattern&gt;/table&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
</pre>

<p>当在浏览器中输入如下几种url时，都会被匹配到该servlet<br />
http://10.43.11.143/myapp/kata/detail.html<br />
http://10.43.11.143/myapp/demo.html<br />
http://10.43.11.143/myapp/table</p>

<p>注意：</p>

<p>http://10.43.11.143/myapp/table/ 是非法的url，不会被当作http://10.43.11.143/myapp/table识别</p>

<p>另外上述url后面可以跟任意的查询条件，都会被匹配，如</p>

<p>http://10.43.11.143/myapp/table?hello 这个请求就会被匹配到MyServlet。</p>

<p>&nbsp;</p>

<p><strong>三、扩展名匹配</strong></p>

<p>如果匹配规则如下</p>

<pre>
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;MyServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;</pre>

<p>则任何扩展名为jsp（文件名和路径任意）的url请求都会匹配，比如下面的url都会被匹配<br />
http://10.43.11.143/myapp/demo.jsp<br />
http://10.43.11.143/myapp/test.jsp</p>

<p>&nbsp;</p>

<p><strong>四、路径匹配</strong></p>

<p>如果匹配规则如下</p>

<pre>
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;MyServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/kata/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;</pre>

<p>则请求的ulr只要前面（myapp之后）的路径是/kata，而后面的路径可以任意。比如下面的url都会被匹配。<br />
http://10.43.11.143/myapp/kata/demo.html<br />
http://10.43.11.143/myapp/kata/test.jsp<br />
http://10.43.11.143/myapp/kata/test/detail.html</p>

<p>http://10.43.11.143/myapp/kata/action</p>

<p>http://10.43.11.143/myapp/kata/action/</p>

<p>注意：路径和扩展名匹配无法同时设置，比如下面的三个&lt;url-pattern&gt;都是非法的，如果设置，启动tomcat服务器会报错。</p>

<p>&lt;url-pattern&gt;/kata/*.jsp&lt;/url-pattern&gt;</p>

<p>&lt;url-pattern&gt;/*.jsp&lt;/url-pattern&gt;</p>

<p>&lt;url-pattern&gt;he*.jsp&lt;/url-pattern&gt;</p>

<p>另外注意：&lt;url-pattern&gt;/aa/*/bb&lt;/url-pattern&gt;<br />
这个是精确匹配，url必须是 /aa/*/bb，这里的*不是通配的含义</p>

<p>&nbsp;</p>

<p><strong>五、匹配任意的url</strong></p>

<p>如果&lt;url-pattern&gt;配置成如下两种的任意一种</p>

<p>&lt;url-pattern&gt;/&lt;/url-pattern&gt;</p>

<p>&lt;url-pattern&gt;/*&lt;/url-pattern&gt;</p>

<p>则所有的url都可以被匹配上。其中/*是路径匹配，只是路径就是/。</p>

<p>&nbsp;</p>

<p><strong>六、优先顺序</strong></p>

<p>当一个url与多个servlet的匹配规则可以匹配时，则按照 &ldquo; 精确路径 &gt; 最长路径&gt;扩展名&rdquo;这样的优先级匹配到对应的servlet。举例如下：</p>

<p><strong>例1：</strong>比如servletA 的url-pattern为 /test，servletB的url-pattern为 /* ，这个时候，如果我访问的url为http://localhost/test ，这个时候容器就会先进行精确路径匹配，发现/test正好被servletA精确匹配，那么就去调用servletA，不会去管servletB。</p>

<p><strong>例2：</strong>比如servletA的url-pattern为/test/*，而servletB的url-pattern为/test/a/*，此时访问http://localhost/test/a时，容器会选择路径最长的servlet来匹配，也就是这里的servletB。&nbsp;</p>

<p><strong>例3: 比如</strong>servletA的url-pattern：*.action&nbsp;，servletB的url-pattern为 /* ，这个时候，如果我访问的url为http://localhost/test.action，这个时候容器就会优先进行路径匹配，而不是去匹配扩展名，这样就去调用servletB。</p>

<p>&nbsp;</p>

<p><strong>七、小结</strong></p>

<p>本文我们详细介绍了servlet的匹配规则。总的来说就是分为精确、路径和扩展名三种匹配方式，并且介绍了优先级。</p>
