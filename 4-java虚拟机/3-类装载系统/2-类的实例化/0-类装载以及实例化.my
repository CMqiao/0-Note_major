<h1>java类的加载以及对象实例化</h1>

<p>JAVA中获取Class对象有3种方式:<br />
1.Class.forName()<br />
2.Object.getClass()<br />
3.类字面常量 xx.class</p>

<h2>JVM加载类过程：</h2>

<p>1.加载：</p>

<ul>
	<li>类字节码文件从硬盘读入到内存中</li>
	<li>类加载器(BootStrapClassLoader,ExtensionClassLoader,SystemClassLoader）加载字节码文件 在方法区存放生成类对应的Class对象</li>
</ul>

<p>---------</p>

<p>2.连接</p>

<p>这个过程又包括了：验证、准备、解析</p>

<ul>
	<li>验证：对class等进行验证的过程；</li>
	<li>准备阶段：为静态变量开辟内存空间并赋上默认初始值；</li>
	<li>解析：符号化链接解析成实际链接（调用对象方法符号表示转变为方法的实际地址）</li>
</ul>

<p>----------</p>

<p>3.初始化</p>

<ul>
	<li>执行静态成员的初始化语句（为在连接部分中的准备阶段中已经分配内存空间和赋上默认值的静态成员赋值）</li>
	<li>执行静态语句块</li>
</ul>

<p>类加载过程是先加载父类，然后再加载子类</p>

<p>&nbsp;</p>

<h2>一个类的运行，JVM做会以下几件事情：</h2>

<p>&nbsp;&nbsp; &nbsp; &nbsp;1、类装载&nbsp;</p>

<p>&nbsp;&nbsp; &nbsp; &nbsp;2、链接&nbsp;</p>

<p>&nbsp;&nbsp; &nbsp; &nbsp;3、初始化 （static块执行时机，可以设置初始化时机）</p>

<p>&nbsp;&nbsp; &nbsp; &nbsp;4、实例化</p>

<p>&nbsp;&nbsp; &nbsp; &nbsp; 而初始化阶段做的事情是初始化静态变量和执行静态方法等的工作。所以，当Class.forName(args[0],true,off.getClass().getClassLoader());中的true变为false的时候，就是告诉JVM不需再load class之后进行initial的工作。这样，将initial的工作推迟到了newInstance的时候进行。<strong>所以，static块的绝对不是什么&ldquo;只是在类被第一次实体化的时候才会被仅仅调用一次&rdquo;，而应该是在类被初始化的时候，仅仅调用一次。</strong></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h1>java类初始化时机</h1>

<p>当程序主动使用某个类时，若该类还没加载到内存中，系统会通过加载，链接，初始化3个操作对类进行初始化。<br />
类字面常量&rdquo;,class&rdquo;创建Class对象的引用时，不会自动地初始化该Class对象，准备工作包含3个步骤:<br />
1.加载:由类加载器执行，该步骤查找字节码,并从这些字节码中创建一个Class对象<br />
2.链接:在链接阶段将验证类中的字节码，为静态域分配存储空间，并且如果必需的话，将解析这个类创建的对其他类的所有引用。<br />
3.初始化:如果该类有超类，则对其初始化，执行静态初始化器和静态初始化块</p>

<h2>类的初始化时机</h2>

<p>1.创建类的实例<br />
2.访问类或接口的静态变量（static final常量除外，static final变量可以）<br />
3.调用类的静态方法<br />
4.反射（Class.forName(packageName.className)）<br />
5.初始化类的子类（子类初始化问题：满足主动调用，即访问子类中的静态变量、方法，否则仅父类初始化）<br />
6.java虚拟机启动时被标明为启动类的类</p>

<p><br />
注：加载顺序：启动类的static block最先加载<br />
(父类静态成员、静态代码块&mdash;&gt;子类静态成员、静态代码块&mdash;&gt;父类实例成员、代码块&mdash;&mdash;&gt;父类构造函数&mdash;&gt;子类实例成员、代码块&mdash;&gt;子类构造函数)</p>

<p>我们需要明白在JAVA中任何class都要装载在虚拟机上才能运行，<strong>而forClass就是装载类用的，这是要和new不一样</strong>，要分清楚哦。<br />
A a = (A)Class.forName(&ldquo;package.A&rdquo;).newInstance();和 A a = new A;是等价的。<br />
记住一个概念，静态代码是和class绑定的,class装载成功就表示执行了你的静态代码，而且以后不会再走这套静态代码了。<br />
Class.forName(xxx.xx.xx)的作用是要求JVM查找并加载指定的类，也即是说JVM会执行该类的静态代码段。</p>

<p>&nbsp;</p>
