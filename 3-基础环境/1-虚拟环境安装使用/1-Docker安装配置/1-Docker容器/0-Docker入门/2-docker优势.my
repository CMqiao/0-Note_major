<h1>Docker 有什么优势</h1>

<p>1.什么是容器?</p>

<p>&nbsp; 依托与linux 内核功能的虚拟化技术</p>

<p>2. docker 是什么？</p>

<p>&nbsp;&nbsp;能够把应用程序自动部署到容器的开源引擎</p>

<p><em>3. docker 跟原有的工具有何区别？</em></p>

<ul>
	<li>传统的部署模式是：安装(包管理工具或者源码包编译)-&gt;配置-&gt;运行；</li>
	<li>Docker的部署模式是：复制-&gt;运行。</li>
</ul>

<p><em>4. docker 会对服务器端开发/部署带来什么变化？</em></p>

<p>&nbsp; 实现更轻量级的虚拟化，方便快速部署<br />
&nbsp; 对于部署来说可以极大的减少部署的时间成本和人力成本</p>

<p>&nbsp; Docker支持将应用打包进一个可以移植的容器中，重新定义了应用开发，测试，部署上线的过程，核心理念就是 Build once, Run anywhere。典型应用场景是开发运维上提供持续集成和持续部署的服务。</p>

<p>&nbsp;</p>

<p>1）标准化应用发布，docker容器包含了运行环境和可执行程序，可以跨平台和主机使用；</p>

<p>2）节约时间，快速部署和启动，VM启动一般是分钟级，docker容器启动是秒级；</p>

<p>3）方便构建基于SOA架构或微服务架构的系统，通过服务编排，更好的松耦合；</p>

<p>4）节约成本，以前一个虚拟机至少需要几个G的磁盘空间，docker容器可以减少到MB级；</p>

<p>5）方便持续集成，通过与代码进行关联使持续集成非常方便；</p>

<p>6）可以作为集群系统的轻量主机或节点，在IaaS平台上，已经出现了CaaS，通过容器替代原来的主机。</p>

<p>docker 优势：</p>

<p><strong>1、交付物标准化</strong></p>

<p>Docker是软件工程领域的&ldquo;标准化&rdquo;交付组件，最恰到好处的类比是&ldquo;集装箱&rdquo;。</p>

<p>集装箱将零散、不易搬运的大量物品封装成一个整体，集装箱更重要的意义在于它提供了一种通用的封装货物的标准，卡车、火车、货轮、桥吊等运输或搬运工具采用此标准，隧道、桥梁等也采用此标准。以集装箱为中心的标准化设计大大提高了物流体系的运行效率。</p>

<p>传统的软件交付物包括：应用程序、依赖软件安装包、配置说明文档、安装文档、上线文档等非标准化组件。Docker的标准化交付物称为&ldquo;镜像&rdquo;，它包含了应用程序及其所依赖的运行环境，大大简化了应用交付的模式。</p>

<p>&nbsp;</p>

<p><strong>2、一次构建，多次交付</strong></p>

<p>类似于集装箱的&ldquo;一次装箱，多次运输&rdquo;，Docker镜像可以做到&ldquo;一次构建，多次交付&rdquo;。当涉及到应用程序多副本部署或者应用程序迁移时，更能体现Docker的价值。</p>

<p>&nbsp;</p>

<p><strong>3、应用隔离</strong></p>

<p>集装箱可以有效做到货物之间的隔离，使化学物品和食品可以堆砌在一起运输。Docker可以隔离不同应用程序之间的相互影响，但是比虚拟机开销更小。</p>
