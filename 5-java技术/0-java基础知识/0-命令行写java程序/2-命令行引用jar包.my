<h1>linux编译引用一个或多个第三方jar包方法（总结转载）</h1>

<p>2015年02月02日 17:44:52</p>

<p>阅读数：3524</p>

<p>参考：</p>

<p><a href="http://cyesheng.iteye.com/blog/1544299" target="_blank">http://cyesheng.iteye.com/blog/1544299</a></p>

<p><a href="http://blog.sina.com.cn/s/blog_ab5e3d9b0101fodw.html" target="_blank">http://blog.sina.com.cn/s/blog_ab5e3d9b0101fodw.html</a></p>

<p>linux下编译引用第三方jar包的方法：</p>

<p>java文件需要引入外部的jar包：&nbsp;<br />
1、将外部jar包放在Linux路径下面。如/home/username/lib.&nbsp;<br />
2、将需要编译的java文件放在Linux路径下。如/home/username/test&nbsp;&nbsp;&nbsp;<br />
3、编译已经写好的java文件，命令如下(-cp指列出路径)：&nbsp;<br />
&nbsp;&nbsp; javac -cp /home/username/lib/sss.jar /home/username/test.java&nbsp;<br />
&nbsp;&nbsp; 生成test.class文件。&nbsp;<br />
4、运行程序，命令如下：&nbsp;<br />
&nbsp;&nbsp; java -cp /home/username/lib/sss.jar:/home/username/lib/test test<br />
&nbsp;</p>

<p><strong>PS:</strong></p>

<p>不过如果要引入的jar文件有多个的话，上面的格式要改为：冒号作为分隔符，并且同最后的java文件之间分隔符是冒号空格&ldquo;: &rdquo;</p>

<p>例如：javac -cp /home/username/aaa.jar:/home/username/bbb.jar:/home/username/ccc.jar:&nbsp;TestDemo.java</p>

<p>java -cp /home/username/aaa.jar:/home/username/bbb.jar:/home/username/ccc.jar:&nbsp;package.TestDemo.java</p>

<p><strong>pps:</strong></p>

<p>&nbsp; &nbsp; &nbsp; &nbsp;如果有包，要在根目录下建立包名文件夹，把java文件放进去后编译，然后执行。</p>

<p>我犯过的错误是，有包名但编译时没有放在对应文件夹下，但是能通过，结果执行提示noClassDefFoundError。查资料后，java文件的根目录下建立了包名同名的文件夹，把编译好的class文件放入，之后java -cp执行，仍然提示错误。这可能是新手容易犯得错误之一。需要编译之前就建立对应的目录层次，这样生成的.class文件才是对的。.class文件在jvm执行时，是顺着classpath寻找文件的（当然首先保证环境变量PATH中有要执行的项目目录路径）</p>
