<h1>入门项目</h1>

<h2>服务端开发</h2>

<h3>创建初始项目</h3>

<p>进入在线网站，创建简单项目就好：<a href="https://start.spring.io/">https://start.spring.io/</a></p>

<h3>修改配置文件</h3>

<h4>编辑 pom.xml</h4>

<p>主要关注其中加粗的部分，版本需对应，不然注释都找不到。。</p>

<pre>
<strong>&lt;parent&gt;
   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
   &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
   &lt;version&gt;2.0.3.RELEASE&lt;/version&gt;
   &lt;relativePath/&gt;
&lt;/parent&gt;</strong>

&lt;groupId&gt;www.ustc.wang&lt;/groupId&gt;
&lt;artifactId&gt;springcloud-config&lt;/artifactId&gt;
&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
&lt;name&gt;demo&lt;/name&gt;
&lt;description&gt;springcloud-config&lt;/description&gt;

<strong>&lt;properties&gt;
   &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
   &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;
   &lt;java.version&gt;1.8&lt;/java.version&gt;
   &lt;spring-cloud.version&gt;Finchley.RELEASE&lt;/spring-cloud.version&gt;
&lt;/properties&gt;</strong>

&lt;dependencies&gt;
   &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
      &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;
   &lt;/dependency&gt;

   &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
      &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
      &lt;scope&gt;test&lt;/scope&gt;
   &lt;/dependency&gt;

   &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
      &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
   &lt;/dependency&gt;

<strong>   &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
      &lt;artifactId&gt;spring-cloud-config-server&lt;/artifactId&gt;
   &lt;/dependency&gt;</strong>
&lt;/dependencies&gt;

&lt;dependencyManagement&gt;
   &lt;dependencies&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
         &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;
         &lt;version&gt;${spring-cloud.version}&lt;/version&gt;
         &lt;type&gt;pom&lt;/type&gt;
         &lt;scope&gt;import&lt;/scope&gt;
      &lt;/dependency&gt;
   &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;

&lt;build&gt;
   &lt;plugins&gt;
      &lt;plugin&gt;
         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
         &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
      &lt;/plugin&gt;
   &lt;/plugins&gt;
&lt;/build&gt;</pre>

<h4>编辑 application.properties</h4>

<pre>
spring.application.name=config-server
server.port=8888

spring.cloud.config.server.git.uri=https://github.com/forezp/SpringcloudConfig/
spring.cloud.config.server.git.searchPaths=respo
spring.cloud.config.label=master
spring.cloud.config.server.git.username=
spring.cloud.config.server.git.password=</pre>

<p>spring.cloud.config.server.git.uri：配置git仓库地址<br />
spring.cloud.config.server.git.searchPaths：配置仓库路径<br />
spring.cloud.config.label：配置仓库的分支<br />
spring.cloud.config.server.git.username：访问git仓库的用户名<br />
spring.cloud.config.server.git.password：访问git仓库的用户密码<br />
如果Git仓库为公开仓库，可以不填写用户名和密码，如果是私有仓库需要填写，本例子是公开仓库，放心使用。</p>

<p>远程仓库https://github.com/forezp/SpringcloudConfig/ 中有个文件config-client-dev.properties文件中有一个属性：</p>

<p>spring.rabbitmq.host = localhost</p>

<p>启动程序：访问 <a href="http://localhost:8888/address/dev">http://localhost:8888/address/dev</a></p>

<pre>
{&quot;name&quot;:&quot;address&quot;,&quot;profiles&quot;:[&quot;dev&quot;],&quot;label&quot;:null,&quot;version&quot;:&quot;0fc8081c507d694b27967e9074127b373d196431&quot;,&quot;state&quot;:null,&quot;propertySources&quot;:[{&quot;name&quot;:&quot;https://github.com/forezp/SpringcloudConfig//respo/address-dev.properties&quot;,&quot;source&quot;:{&quot;spring.rabbitmq.host&quot;:&quot;localhost&quot;,&quot;spring.rabbitmq.port&quot;:&quot;5672&quot;,&quot;server.port&quot;:&quot;8882&quot;,&quot;hystrix.command.default.execution.timeout.enabled&quot;:&quot;false&quot;,&quot;management.security.enabled&quot;:&quot;false&quot;}}]}</pre>

<p>证明配置服务中心可以从远程程序获取配置信息。</p>

<p>http请求地址和资源文件映射如下:</p>

<p>/{application}/{profile}[/{label}]<br />
/{application}-{profile}.yml<br />
/{label}/{application}-{profile}.yml<br />
/{application}-{profile}.properties<br />
/{label}/{application}-{profile}.properties<br />
&nbsp;</p>

<h2>客户端开发</h2>

<h3>创建初始项目</h3>

<p>进入在线网站，创建简单项目就好：<a href="https://start.spring.io/">https://start.spring.io/</a></p>

<h3>修改配置文件</h3>

<h4>编辑 pom.xml</h4>

<pre>
<strong>&lt;parent&gt;
   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
   &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
   &lt;version&gt;2.0.3.RELEASE&lt;/version&gt;
   &lt;relativePath/&gt;
&lt;/parent&gt;</strong>

&lt;groupId&gt;com.ustc.wang&lt;/groupId&gt;
&lt;artifactId&gt;config-simple-client&lt;/artifactId&gt;
&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
&lt;name&gt;config-simple-client&lt;/name&gt;
&lt;description&gt;config-simple-client&lt;/description&gt;

<strong>&lt;properties&gt;
   &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
   &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;
   &lt;java.version&gt;1.8&lt;/java.version&gt;
   &lt;spring-cloud.version&gt;Finchley.RELEASE&lt;/spring-cloud.version&gt;
&lt;/properties&gt;</strong>
</pre>

<pre>
&lt;dependencies&gt;
   &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
      &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;
   &lt;/dependency&gt;

   &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
      &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
      &lt;scope&gt;test&lt;/scope&gt;
   &lt;/dependency&gt;

   &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
      &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
   &lt;/dependency&gt;

<strong>   &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
      &lt;artifactId&gt;spring-cloud-starter-config&lt;/artifactId&gt;  跟server的不同哈。
   &lt;/dependency&gt;</strong>
&lt;/dependencies&gt;

&lt;build&gt;
   &lt;plugins&gt;
      &lt;plugin&gt;
         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
         &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
      &lt;/plugin&gt;
   &lt;/plugins&gt;
&lt;/build&gt;</pre>

<p>编辑 application.properties</p>

<p>spring.application.name=config-client<br />
spring.cloud.config.label=master<br />
spring.cloud.config.profile=dev<br />
spring.cloud.config.uri= http://localhost:8888/<br />
server.port=8881</p>

<p>配置说明：</p>

<p>spring.cloud.config.label 指明远程仓库的分支</p>

<p>spring.cloud.config.profile</p>

<p>dev开发环境配置文件<br />
test测试环境<br />
pro正式环境</p>

<p>spring.cloud.config.uri= http://localhost:8888/ 指明配置服务中心的网址</p>

<p>程序的入口类，写一个API接口&ldquo;／hi&rdquo;，返回从配置中心读取的foo变量的值，代码如下：</p>

<p>@SpringBootApplication<br />
@RestController<br />
public class ConfigClientApplication {</p>

<p>&nbsp;&nbsp; &nbsp;public static void main(String[] args) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;SpringApplication.run(ConfigClientApplication.class, args);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p>&nbsp;&nbsp; &nbsp;@Value(&quot;${foo}&quot;)<br />
&nbsp;&nbsp; &nbsp;String foo;<br />
&nbsp;&nbsp; &nbsp;@RequestMapping(value = &quot;/hi&quot;)<br />
&nbsp;&nbsp; &nbsp;public String hi(){<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return foo;<br />
&nbsp;&nbsp; &nbsp;}<br />
}</p>

<p><br />
打开网址访问：http://localhost:8881/hi，网页显示：<br />
&nbsp;</p>
