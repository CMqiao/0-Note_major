<h1>命令行 新建 springboot 项目</h1>

<h2>maven新建基础项目</h2>

<p>使用mvn脚手架。</p>

<p><code>mvn archetype:generate -DgroupId=com.wang.ustc -DartifactId=SpringbootCMDgenerate -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false [-DarchetypeCatalog=local] [-X]</code></p>

<h3>上面这条初始语句有几点需要注意：</h3>

<ul>
	<li>
	<p>-X 是用来看输出的，第一次执行时很慢，就是通过它来定位错误</p>
	</li>
	<li>
	<p>-DarchetypeCatalog=local 是指定使用本地模板目录。本地模板目录为：<strong>~/.M2/archetype-catalog.xml</strong>&nbsp;可以用迅雷下载之，路径：<a href="https://repo.maven.apache.org/maven2/archetype-catalog.xml">https://repo.maven.apache.org/maven2/archetype-catalog.xml</a></p>
	</li>
</ul>

<p>使用 Spring Boot 仅仅需要在pom文件中声明使用 Spring Boot，并添加 spring-boot-starter-web 的依赖即可</p>

<h2>修改配置文件</h2>

<h3>添加spring boot 主配置</h3>

<p>添加如下内容，使项目变成springboot项目</p>

<p>&lt;parent&gt;</p>

<p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p>

<p>&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</p>

<p>&lt;version&gt;2.0.0.RELEASE&lt;/version&gt;</p>

<p>&lt;/parent&gt;</p>

<h3>添加依赖</h3>

<p>因为我们搭建的是 Web 应用，必须添加 spring-boot-starter-web 依赖</p>

<p>spring-boot-starter-web 中包含了<strong>tomcat</strong>等的依赖！</p>

<p>&lt;dependencies&gt;</p>

<p>&lt;dependency&gt;</p>

<p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p>

<p>&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</p>

<p>&lt;/dependency&gt;</p>

<p>&lt;dependency&gt;</p>

<p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p>

<p>&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</p>

<p>&lt;scope&gt;test&lt;/scope&gt;</p>

<p>&lt;/dependency&gt;</p>

<p>&lt;/dependencies&gt;</p>

<h3>添加构建配置</h3>

<p>如果不加下面这个配置，打包成功，但是运行时报错：&ldquo;<strong>SpringbootCMDgenerate-1.0-SNAPSHOT.jar中没有主清单属性</strong>&rdquo;</p>

<p>&lt;build&gt;</p>

<p>&lt;plugins&gt;</p>

<p>&lt;plugin&gt;</p>

<p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p>

<p>&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</p>

<p>&lt;/plugin&gt;</p>

<p>&lt;/plugins&gt;</p>

<p>&lt;/build&gt;</p>

<h3>另外还可以加的一些配置 非必须的</h3>

<p>&lt;properties&gt;</p>

<p>&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</p>

<p>&lt;java.version&gt;1.8&lt;/java.version&gt;</p>

<p>&lt;/properties&gt;</p>

<h3>这样，我们就得到了最简单的springboot项目的pom文件，如下：</h3>

<p>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</p>

<p>xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</p>

<p>&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</p>

<p>&lt;groupId&gt;com.wang.ustc&lt;/groupId&gt;</p>

<p>&lt;artifactId&gt;SpringbootCMDgenerate&lt;/artifactId&gt;</p>

<p>&lt;packaging&gt;jar&lt;/packaging&gt;</p>

<p>&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</p>

<p>&lt;name&gt;SpringbootCMDgenerate&lt;/name&gt;</p>

<p>&lt;url&gt;http://maven.apache.org&lt;/url&gt;</p>

<p>&lt;parent&gt;</p>

<p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p>

<p>&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</p>

<p>&lt;version&gt;2.0.0.RELEASE&lt;/version&gt;</p>

<p>&lt;/parent&gt;</p>

<p>&lt;dependencies&gt;</p>

<p>&lt;dependency&gt;</p>

<p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p>

<p>&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</p>

<p>&lt;/dependency&gt;</p>

<p>&lt;dependency&gt;</p>

<p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p>

<p>&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</p>

<p>&lt;scope&gt;test&lt;/scope&gt;</p>

<p>&lt;/dependency&gt;</p>

<p>&lt;/dependencies&gt;</p>

<p>&lt;build&gt;</p>

<p>&lt;plugins&gt;</p>

<p>&lt;plugin&gt;</p>

<p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p>

<p>&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</p>

<p>&lt;/plugin&gt;</p>

<p>&lt;/plugins&gt;</p>

<p>&lt;/build&gt;</p>

<p>&lt;/project&gt;</p>

<h2>编写java类</h2>

<p><strong>注意：这里，java文件放置的位置没有强制要求，实际尝试了下，主类和控制类可以放在src下任意位置，注释都能生效！</strong></p>

<p>在src/main 目录下 新建目录 java</p>

<p>然后根据包名依次创建com/wang/ustc/</p>

<h3>启动类 SpringBootApp.java</h3>

<p>package com.wang.ustc;</p>

<p>import org.springframework.boot.SpringApplication;</p>

<p>import org.springframework.boot.autoconfigure.SpringBootApplication;</p>

<p>@SpringBootApplication</p>

<p>public class SpringBootApp {</p>

<p>public static void main(String[] args) {</p>

<p>SpringApplication.run(SpringBootApp.class, args);</p>

<p>}</p>

<p>}</p>

<h4>注意！ 其中的 @SpringBootApplication 注释</h4>

<p>有些示例上面，这里写的是<strong>SpringBootConfiguration</strong>&nbsp;但是此处不行。。</p>

<p>说明：@SpringBootApplication是Spring Boot的核心注解，也是一个组合注解。主要组合了@Configuration、@EnableAutoConfiguration、@ComponentScan。</p>

<p>如果不使用组合注解@SpringBootApplication则可以直接使用@Configuration、@EnableAutoConfiguration、@ComponentScan。</p>

<h3>控制类 TestController.java</h3>

<p>package com.wang.ustc;</p>

<p>import org.springframework.web.bind.annotation.RequestMapping;</p>

<p>import org.springframework.web.bind.annotation.RestController;</p>

<p>@RestController</p>

<p>public class TestController {</p>

<p>@RequestMapping(&quot;test&quot;)</p>

<p>public String test(){</p>

<p>return &quot;test&quot;;</p>

<p>}</p>

<p>}</p>

<h2>启动并验证项目</h2>

<h3>打包 运行 项目</h3>

<p>在pom所在文件夹，shift + 右击，打开命令行</p>

<p>mvn package</p>

<p>cd target</p>

<p>java -jar SpringbootCMDgenerate-1.0-SNAPSHOT.jar</p>

<h3>验证项目</h3>

<p>现在可以在浏览器输入<a href="http://localhost:8080/test">http://localhost:8080/test</a>访问项目</p>
