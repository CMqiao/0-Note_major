<h1>使用maven创建spring-boot项目</h1>

<h2>前期准备</h2>

<p>安装maven：下载-&gt;安装-&gt;配置环境变量。下载链接:<a href="http://maven.apache.org/download.cgi" target="_blank">http://maven.apache.org/download.cgi</a></p>

<p>安装eclipse：eclipse-jee-neon-3-win32-x86_64 下载链接:<a href="https://www.eclipse.org/downloads/" target="_blank">https://www.eclipse.org/downloads/</a></p>

<h2>创建maven项目</h2>

<p>1.eclipse: file-&gt;new-&gt;maven project&nbsp;</p>

<p>2.选择创建的版本。&nbsp;</p>

<p><img alt="这里写图片描述" src="https://img-blog.csdn.net/20170510211420204?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDk4OTE5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:665px; width:800px" title="" /></p>

<p>3.输入Group Id 和Artifact Id。&nbsp;</p>

<p>Group Id代表的是公司组织名称 Artifact Id 表示的当前项目的名称&nbsp;</p>

<p><img alt="这里写图片描述" src="https://img-blog.csdn.net/20170510211544300?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDk4OTE5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:665px; width:800px" title="" /></p>

<p>4.点击Finish即可创建一个maven项目。</p>

<h2>构建成Spring Boot的项目目录</h2>

<p>1.在src/main/java源文件夹上右键，选择new-&gt;Source Folder。新建一个src/main/resources源代码文件夹。如下图所示：&nbsp;</p>

<p><img alt="这里写图片描述" src="https://img-blog.csdn.net/20170510212125324?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDk4OTE5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" title="" /><br />
2.在src/main/resources源代码文件夹上右键，选择new-&gt;folder。新建以下几个文件夹，static和templates。&nbsp;<br />
<img alt="这里写图片描述" src="https://img-blog.csdn.net/20170510212423735?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDk4OTE5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" title="" />&nbsp;<br />
3.在src/main/resources文件夹下创建application.properties文件。&nbsp;<br />
<img alt="这里写图片描述" src="https://img-blog.csdn.net/20170510212602753?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDk4OTE5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" title="" />&nbsp;<br />
4.在pom.xml中加入依赖配置参数。</p>

<pre>
<code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
    xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;groupId&gt;PersonalDemo&lt;/groupId&gt;
    &lt;artifactId&gt;SpringBootDemo&lt;/artifactId&gt;
    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
    &lt;packaging&gt;jar&lt;/packaging&gt;
    &lt;name&gt;SpringBootDemo&lt;/name&gt;
    &lt;url&gt;http://maven.apache.org&lt;/url&gt;
    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;/properties&gt;
    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;1.5.3.RELEASE&lt;/version&gt;
        &lt;relativePath /&gt;
    &lt;/parent&gt;
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
&lt;/project&gt;

</code></pre>

<p>5.创建启动类。SpringBootApplication.java</p>

<pre>
<code>package PersonalDemo.SpringBootDemo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.SpringBootConfiguration;

@SpringBootConfiguration
public class SpringBootApplication {

    public static void main(String[] args) {
        SpringApplication.run(SpringBootApplication.class, args);
    }
}</code></pre>

<p>6.创建测试TestController</p>

<pre>
<code>package PersonalDemo.SpringBootDemo.controller;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class TestController {

    @RequestMapping(&quot;test&quot;)
    public String test(){
        return &quot;test&quot;;
    }
}</code></pre>

<p>7.右键SpringBootApplication类，选择run as-&gt;Spring boot app。启动成功界面。&nbsp;</p>

<p><img alt="这里写图片描述" src="https://img-blog.csdn.net/20170510214447434?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDk4OTE5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:383px; width:800px" title="" /><br />
8.测试请求/test。&nbsp;<br />
<img alt="这里写图片描述" src="https://img-blog.csdn.net/20170510214548155?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDk4OTE5MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" title="" /></p>

<h2>总结</h2>

<p>以上即完成了一个Spring boot的简单环境搭建，可以结合自己的项目需求加入不同的服务。</p>

<p>如果需要整合mybatis或者redis等可以参考以下配置:<a href="http://blog.csdn.net/u010989191/article/details/71330676" target="_blank">http://blog.csdn.net/u010989191/article/details/71330676</a></p>
