<h1>springboot 使用pagehelper进行分页排序</h1>

<h2>第一步：添加pom文件依赖</h2>

<p>&lt;!-- springboot整合mybatis --&gt;<br />
&lt;dependency&gt;<br />
&nbsp; &nbsp; &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;<br />
&nbsp; &nbsp; &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;<br />
&nbsp; &nbsp; &lt;version&gt;1.3.1&lt;/version&gt;<br />
&lt;/dependency&gt;</p>

<p>&lt;!-- springboot分页插件 --&gt;<br />
&lt;dependency&gt;<br />
&nbsp; &nbsp; &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;<br />
&nbsp; &nbsp; &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt;<br />
&nbsp; &nbsp; &lt;!-- 特别注意版本问题, 看到评论以后得以纠正 --&gt;<br />
&nbsp; &nbsp; &lt;version&gt;1.2.3&lt;/version&gt;<br />
&lt;/dependency&gt;</p>

<p>&lt;!-- 阿里巴巴druid数据库连接池 --&gt;<br />
&lt;dependency&gt;<br />
&nbsp; &nbsp; &lt;groupId&gt;com.alibaba&lt;/groupId&gt;<br />
&nbsp; &nbsp; &lt;artifactId&gt;druid&lt;/artifactId&gt;<br />
&nbsp; &nbsp; &lt;version&gt;1.1.3&lt;/version&gt;<br />
&lt;/dependency&gt;</p>

<p>&lt;!-- mysql驱动 --&gt;<br />
&lt;dependency&gt;<br />
&nbsp; &nbsp; &lt;groupId&gt;mysql&lt;/groupId&gt;<br />
&nbsp; &nbsp; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;<br />
&lt;/dependency&gt;<br />
&nbsp;</p>

<h2>第二步：配置application文件</h2>

<h3>修改application.yml</h3>

<p># 与mybatis整合<br />
mybatis:<br />
&nbsp; config-location: classpath:mybatis.xml<br />
&nbsp; mapper-locations:<br />
&nbsp; - classpath:mapper/*.xml</p>

<p># 分页配置<br />
pagehelper:<br />
&nbsp; helper-dialect: mysql<br />
&nbsp; reasonable: true<br />
&nbsp; support-methods-arguments: true<br />
&nbsp; params: count=countSql<br />
&nbsp;</p>

<h3>或者修改application.xml</h3>

<pre>
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis.type-aliases-package=com.neo.entity

spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = root

pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql</pre>

<h2>第三步：service层开发</h2>

<pre>
@Service
public class UserService {
    @Autowired
    private UserMapper userMapper;

    public  List&lt;UserEntity&gt; getAll() {
        <strong>PageHelper.startPage(0,2,&quot;id&quot;); </strong>
        List&lt;UserEntity&gt;  users = userMapper.getAll();
        return users;
    }
}</pre>

<h2>第四步：controller层开发</h2>

<p>其实这里跟一般的调用就是一样的，主要就是service层里面加粗的那一句而已。很容易引进！！！</p>

<pre>
@Autowired
private UserService userService;

@RequestMapping(&quot;/getUsers&quot;)
public List&lt;UserEntity&gt; getUsers() {
   List&lt;UserEntity&gt; users=userService.getAll();
   return users;
}</pre>

<p>&nbsp;</p>
