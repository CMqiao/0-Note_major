<h1><a href="http://www.cnblogs.com/jach/p/5709175.html" id="cb_post_title_url">原生和jQuery的ajax用法</a></h1>

<p>form数据的序列化：</p>

<pre>
$(&#39;#submit&#39;).click(function(){
    $(&#39;#form&#39;).serialize();        //会根据input里面的name，把数据序列化成字符串；eg：name=yang
    $(&#39;#form&#39;).serializeArray();    //会根据input里面的name，把数据序列化成数组；eg：[object]
　　//注意：没有name会获取不到值


    //下面两种不是jQuery的方法
    JSON.parse()    //json字符串转化为json对象
    JSON.stringify()    //json对象转化为json字符串
});
</pre>

<p>jQuery的ajax方法：</p>

<pre>
$.ajax({
    url:&#39;/comm/test1.php&#39;,
    type:&#39;POST&#39;, //GET
    async:true,    //或false,是否异步
    data:{
        name:&#39;yang&#39;,age:25
    },
    timeout:5000,    //超时时间
    dataType:&#39;json&#39;,    //返回的数据格式：json/xml/html/script/jsonp/text
    beforeSend:function(xhr){
        console.log(xhr)
        console.log(&#39;发送前&#39;)
    },
    success:function(data,textStatus,jqXHR){
        console.log(data)
        console.log(textStatus)
        console.log(jqXHR)
    },
    error:function(xhr,textStatus){
        console.log(&#39;错误&#39;)
        console.log(xhr)
        console.log(textStatus)
    },
    complete:function(){
        console.log(&#39;结束&#39;)
    }
})
</pre>

<p>原生的ajax方法：</p>

<pre>
$(&#39;#send&#39;).click(function(){
    //请求的5个阶段，对应readyState的值
        //0: 未初始化，send方法未调用；
        //1: 正在发送请求，send方法已调用；
        //2: 请求发送完毕，send方法执行完毕；
        //3: 正在解析响应内容；
        //4: 响应内容解析完毕；

    var data = &#39;name=yang&#39;;
    var xhr = new XMLHttpRequest();        //创建一个ajax对象
    xhr.onreadystatechange = function(event){    //对ajax对象进行监听
        if(xhr.readyState == 4){    //4表示解析完毕
            if(xhr.status == 200){    //200为正常返回
                console.log(xhr)
            }
        }
    };
    xhr.open(&#39;POST&#39;,&#39;url&#39;,true);    //建立连接，参数一：发送方式，二：请求地址，三：是否异步，true为异步
    xhr.setRequestHeader(&#39;Content-type&#39;,&#39;application/x-www-form-urlencoded&#39;);    //可有可无
    xhr.send(data);        //发送
});</pre>
