<h1>前后端交互整理</h1>

<p>案例一：带特殊符号的文件名传后台：</p>

<p>文件名是 word文&amp;件.docx</p>

<p>方式一：使用encodeURIComponent函数。</p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;encodeURIComponent() 将中文和特殊字符都进行转码处理。</p>

<p>后台java接收：</p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String fileName = URLDecoder.decode(request.getParameter(&quot;fileName&quot;), &quot;UTF-8&quot;);</p>

<p>方式二：</p>

<p>可以人为将字符串里的特殊字符替换掉，汉字不换，但是这样，后台取就要特殊处理下。</p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//URLDecoder.decode 执行的时候，%汉字 会有问题。<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;String fileName = request.getParameter(&quot;fileName&quot;);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;fileName = fileName.replaceAll(&quot;%(?![0-9a-fA-F]{2})&quot;, &quot;%25&quot;);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;fileName = fileName.replaceAll(&quot;\\+&quot;, &quot;%2B&quot;);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;fileName = URLDecoder.decode(fileName, &quot;UTF-8&quot;);</p>

<p>&nbsp;</p>
