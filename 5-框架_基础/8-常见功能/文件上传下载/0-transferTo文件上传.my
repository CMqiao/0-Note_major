<h1>springMVC上传文件Java使用transferTo方法事半功倍</h1>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 在web开发中，常常会遇到上传文件的需求，比如上传视频和图片，之前做上传功能的时候，就是使用IO流来操作，这种需要熟悉IO各种输入输出流，当然本人还是希望开发能对IO进行深度学习，如果掌握了，不妨可以尝试使用transferTo()来进行文件的上传操作。</p>

<h2>前端页面写法（form表单提交）：</h2>

<p>&lt;label class=&quot;col-sm-2 control-label no-padding-right&quot; for=&quot;form-field-1&quot;&gt;视频：&lt;/label&gt;<br />
&lt;div class=&quot;col-sm-3&quot;&gt;<br />
&lt;input type=&quot;file&quot; &nbsp;id=&quot;media&quot; name=&quot;myfile&quot; /&gt;<br />
&lt;input type=&quot;hidden&quot; name=&quot;mediaName&quot; value=&quot;&quot;/&gt;<br />
&lt;/div&gt;<br />
&lt;input type=&quot;button&quot; class=&quot;btn btn-small btn-base&quot; title=&quot;保存&quot; onclick=&quot;tijiao();&quot; value=&quot;保存&quot;&gt;<br />
提交就是使用jquery的ajaxSubmit函数进行整个表单的提交。</p>

<h2>后端核心代码写法：</h2>

<p>public void fileUpload(@RequestParam(&quot;myfile&quot;) MultipartFile[] myfile) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;int len = myfile.length;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (int i = 0; i &lt; len; i++) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;MultipartFile file = myfile[i];<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (file.isEmpty()) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// TODO文件为空时处理<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;file.transferTo(new File(&quot;服务器文件上传目录&quot; + file.getName()));<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch (Exception e) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.printStackTrace();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return;<br />
&nbsp;&nbsp; &nbsp;}</p>
