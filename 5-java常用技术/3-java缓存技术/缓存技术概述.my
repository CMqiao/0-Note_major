<h1><a href="http://www.cnblogs.com/FrankLei/p/6799359.html" id="cb_post_title_url">java缓存技术详解</a></h1>

<p>一、缓存是什么？</p>

<p><img alt="" src="http://f10.baidu.com/it/u=92774751,3065996083&amp;fm=170&amp;s=161DA96CCBA1BA590EFA1D890300808A&amp;w=426&amp;h=240&amp;img.JPEG&amp;access=215967316" /></p>

<p>请点击此处输入图片描述</p>

<p>Cache</p>

<p>①高速缓冲存储器，其中复制了频繁使用的数据以利于快速访问。</p>

<p>②位于速度相差较大的两种硬件/软件之间，用于协调两者数据传输速度差异的结构</p>

<p>二、缓存有哪几类？</p>

<p>1、基于web应用的系统架构图</p>

<p><img alt="" src="http://f10.baidu.com/it/u=3172213674,2067363890&amp;fm=170&amp;s=E59EA37787C2614B44F4916A0300F070&amp;w=629&amp;h=328&amp;img.JPEG&amp;access=215967316" /></p>

<p>请点击此处输入图片描述</p>

<p>2、在系统架构中，不同层级之间为了加快访问速度，缓存都可以存在。</p>

<p>操作系统磁盘缓存-&gt;减少磁盘机械操作数据库缓存-&gt;减少文件系统I/O应用程序缓存-&gt;减少对数据库的查询Web服务器缓存-&gt;减少应用服务器请求客户端浏览器缓存-&gt;减少对网站的访问</p>

<p>三、操作系统缓存</p>

<p>1、文件系统提供的Disk Cache：经常访问到的文件内容会通过操作系统放入到内存当中，由文件系统来管理</p>

<p>2、当应用程序通过文件系统访问磁盘文件的时候，操作系统从Disk Cache当中读取文件内容，加速了文件读取速度</p>

<p>3、Disk Cache由操作系统来自动管理，一般不用人工干预，但应当保证物理内存充足，以便于操作系统可以使用尽量多的内存充当Disk Cache，加速文件读取速度</p>

<p>4、特殊的应用程序对文件系统Disk Cache有很高的要求，会绕开文件系统Disk Cache，直接访问磁盘分区，自己实现Disk</p>

<p>5、Cache策略</p>

<p>Oracle的raw device(裸设备) &ndash; 直接抛弃文件系统MySQL的InnoDB： innodb_flush_method = O_DIRECT</p>

<p>四、数据库缓存</p>

<p>1、重要性</p>

<p>数据库通常是企业应用系统最核心的部分数据库保存的数据量通常非常庞大数据库查询操作通常很频繁，有时还很复杂以上原因造成数据库查询会引起非常频繁的磁盘I/O读取操作，迫使CPU挂起等待，数据库性能极度低下</p>

<p>2、缓存策略</p>

<p>a、Query Cache</p>

<p>以SQL作为key值缓存查询结果集一旦查询涉及的表记录被修改，缓存就会被自动删除设置合适的Query Cache会极大提高数据库性能Query Cache并非越大越好，过大的Qquery Cache会浪费内存MySQL: query_cache_size= 128M</p>

<p>b、Data Buffer</p>

<p>data buffer是数据库数据在内存中的容器data buffer的命中率直接决定了数据库的性能data buffer越大越好，多多益善MySQL的InnoDB buffer：innodb_buffer_pool_size = 2GMySQL建议buffer pool开大到服务器物理内存60-80%</p>

<p>五、应用程序缓存</p>

<p>1、对象缓存</p>

<p>由O/R Mapping框架例如Hibernate提供，透明性访问，细颗粒度缓存数据库查询结果，无需业务代码显式编程，是最省事的缓存策略当软件结构按照O/R Mapping框架的要求进行针对性设计，使用对象缓存将会极大降低Web系统对于数据库的访问请求良好的设计数据库结构和利用对象缓存，能够提供极高的性能，对象缓存适合OLTP（联机事务处理）应用</p>

<p>2、查询缓存</p>

<p>对数据库查询结果集进行缓存，类似数据库的Query Cache适用于一些耗时，但是时效性要求比较低的场景。查询缓存和对象缓存适用的场景不一样，是互为补充的当查询结果集涉及的表记录被修改以后，需要注意清理缓存</p>

<p>3、页面缓存</p>

<p>a、作用</p>

<p>针对页面的缓存技术不但可以减轻数据库服务器压力，还可以减轻应用服务器压力好的页面缓存可以极大提高页面渲染速度页面缓存的难点在于如何清理过期的缓存</p>

<p>b、分类</p>

<p>I、动态页面静态化</p>

<p>利用模板技术将访问过一次的动态页面生成静态html，同时修改页面链接，下一次请求直接访问静态链接页面动态页面静态化技术的广泛应用于互联网CMS/新闻类Web应用，但也有BBS应用使用该技术，例如Discuz!无法进行权限验证，无法显示个性化信息可以使用AJAX请求弥补动态页面静态化的某些缺点</p>

<p>II、Servlet缓存</p>

<p>针对URL访问返回的页面结果进行缓存，适用于粗粒度的页面缓存，例如新闻发布可以进行权限的检查OScache提供了简单的Servlet缓存(通过web.xml中的配置)也可以自己编程实现Servlet缓存</p>

<p>III、页面内部缓存</p>

<p>针对动态页面的局部片断内容进行缓存，适用于一些个性化但不经常更新的页面(例如博客)OSCache提供了简单的页面缓存可以自行扩展JSP Tag实现页面局部缓存</p>

<p>六、web服务器端缓存</p>

<p>基于代理服务器模式的Web服务器端缓存，如squid/nginxWeb服务器缓存技术被用来实现CDN（内容分发网络 content delivery network）被国内主流门户网站大量采用不需要编程，但仅限于新闻发布类网站，页面实时性要求不高</p>

<p>七、基于ajax的浏览器缓存</p>

<p>使用AJAX调用的时候，将数据库在浏览器端缓存只要不离开当前页面，不刷新当前页面，就可以直接读取缓存数据只适用于使用AJAX技术的页面</p>

<p>&nbsp;<img alt="" src="http://images2015.cnblogs.com/blog/1059843/201705/1059843-20170502233937492-417333241.png" /></p>
