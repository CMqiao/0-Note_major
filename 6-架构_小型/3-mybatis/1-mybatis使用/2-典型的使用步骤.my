<h1>iBatis 简介</h1>

<p>iBatis 是apache 的一个开源项目，一个O/R Mapping 解决方案，iBatis 最大的特点就是小巧，上手很快。如果不需要太多复杂的功能，iBatis 是能够满足你的要求又足够灵活的最简单的解决方案，现在的iBatis 已经改名为Mybatis 了。</p>

<p>官网为：http://www.mybatis.org/</p>

<h2>搭建iBatis 开发环境：</h2>

<p>1 、导入相关的jar 包，ibatis-2.3.0.677.jar 、mysql-connector-java-5.1.6-bin.jar</p>

<p>2 、编写配置文件：</p>

<p>1&gt; Jdbc 连接的属性文件</p>

<p>2&gt; 总配置文件， SqlMapConfig.xml</p>

<p>3&gt; 关于每个实体的映射文件（Map 文件）</p>

<p>&nbsp;</p>

<h2>Demo ：</h2>

<p>Student.java:</p>

<p>package com.iflytek.entity;<br />
import java.sql.Date;</p>

<p><br />
/**<br />
&nbsp;* @author xudongwang 2011-12-31<br />
&nbsp;*<br />
&nbsp;* Email:xdwangiflytek@gmail.com<br />
&nbsp;*<br />
&nbsp;*/<br />
publicclass Student {<br />
/* 注意这里需要保证有一个无参构造方法，因为包括Hibernate在内的映射都是使用反射的，如果没有无参构造可能会出现问题 */<br />
&nbsp;&nbsp; &nbsp;privateint&nbsp;&nbsp; &nbsp;id;<br />
&nbsp;&nbsp; &nbsp;private String&nbsp;&nbsp; &nbsp;name;<br />
&nbsp;&nbsp; &nbsp;private Date&nbsp;&nbsp; &nbsp;birth;<br />
&nbsp;&nbsp; &nbsp;privatefloat&nbsp;&nbsp; &nbsp;score;<br />
&nbsp;&nbsp; &nbsp;publicint getId()<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(id);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;publicvoid setId( int id )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.id = id;<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;public String getName()<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(name);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;publicvoid setName( String name )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.name = name;<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;public Date getBirth()<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(birth);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;publicvoid setBirth( Date birth )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.birth = birth;<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;publicfloat getScore()<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(score);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;publicvoid setScore( float score )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.score = score;<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;@Override<br />
&nbsp;&nbsp; &nbsp;public String toString()<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(&quot;id=&quot; + id + &quot;\tname=&quot; + name + &quot;\tmajor=&quot; + birth + &quot;\tscore=&quot;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; + score + &quot;\n&quot;);<br />
&nbsp;&nbsp; &nbsp;}<br />
}</p>

<h2>SqlMap.properties ：</h2>

<p>driver=com.mysql.jdbc.Driver<br />
url=jdbc:mysql://localhost:3306/ibatis<br />
username=root<br />
password=123<br />
&nbsp;</p>

<h2>Student.xml ：</h2>

<p><strong>&lt;?xml</strong>version=&quot;1.0&quot;encoding=&quot;UTF-8&quot;<strong>?&gt;</strong><br />
&lt;!DOCTYPE sqlMap PUBLIC &quot;-//ibatis.apache.org//DTD SQL Map 2.0//EN&quot;<br />
&quot;http://ibatis.apache.org/dtd/sql-map-2.dtd&quot;<strong>&gt;</strong><br />
&nbsp;<br />
<strong>&lt;sqlMap&gt;</strong><br />
&lt;!-- 通过typeAlias使得我们在下面使用Student实体类的时候不需要写包名 --&gt;<br />
<strong>&lt;typeAlias&nbsp;</strong>alias=&quot;Student&quot; type=&quot;com.iflytek.entity.Student&quot;<strong>/&gt;</strong><br />
&nbsp;<br />
&lt;!-- 这样以后改了sql，就不需要去改java代码了 --&gt;<br />
&lt;!-- id表示select里的sql语句，resultClass表示返回结果的类型 --&gt;<br />
<strong>&lt;select&nbsp;</strong>id=&quot;selectAllStudent&quot; resultClass=&quot;Student&quot;<strong>&gt;</strong><br />
select * from<br />
tbl_student<br />
<strong>&lt;/select&gt;</strong><br />
&nbsp;<br />
&lt;!-- parameterClass表示参数的内容 --&gt;<br />
&lt;!-- #表示这是一个外部调用的需要传进的参数，可以理解为占位符 --&gt;<br />
<strong>&lt;select&nbsp;</strong>id=&quot;selectStudentById&quot; parameterClass=&quot;int&quot; resultClass=&quot;Student&quot;<strong>&gt;</strong><br />
select * from tbl_student where&nbsp;id=#id#<br />
<strong>&lt;/select&gt;</strong><br />
&nbsp;<br />
&lt;!-- 注意这里的resultClass类型，使用Student类型取决于queryForList还是queryForObject --&gt;<br />
<strong>&lt;select&nbsp;</strong>id=&quot;selectStudentByName&quot;parameterClass=&quot;String&quot;<br />
resultClass=&quot;Student&quot;<strong>&gt;</strong><br />
select name,birth,score from tbl_student where name like<br />
&#39;%$name$%&#39;<br />
<strong>&lt;/select&gt;</strong><br />
&nbsp;<br />
<strong>&lt;insert&nbsp;</strong>id=&quot;addStudent&quot; parameterClass=&quot;Student&quot;<strong>&gt;</strong><br />
insert into<br />
tbl_student(name,birth,score) values<br />
(#name#,#birth#,#score#)<br />
<strong>&lt;selectKey&nbsp;</strong>resultClass=&quot;int&quot; keyProperty=&quot;id&quot;<strong>&gt;</strong><br />
select @@identity as inserted<br />
&lt;!-- 这里需要说明一下不同的数据库主键的生成，对各自的数据库有不同的方式： --&gt;<br />
&lt;!-- mysql:SELECT LAST_INSERT_ID() AS VALUE --&gt;<br />
&lt;!-- mssql:select @@IDENTITY as value --&gt;<br />
&lt;!-- oracle:SELECT STOCKIDSEQUENCE.NEXTVAL AS VALUE FROM DUAL --&gt;<br />
&lt;!-- 还有一点需要注意的是不同的数据库生产商生成主键的方式不一样，有些是预先生成 (pre-generate)主键的，如Oracle和PostgreSQL。<br />
有些是事后生成(post-generate)主键的，如MySQL和SQL Server 所以如果是Oracle数据库，则需要将selectKey写在insert之前 --<strong>&gt;</strong><br />
<strong>&lt;/selectKey&gt;</strong><br />
<strong>&lt;/insert&gt;</strong><br />
&nbsp;<br />
<strong>&lt;delete&nbsp;</strong>id=&quot;deleteStudentById&quot; parameterClass=&quot;int&quot;<strong>&gt;</strong><br />
&lt;!-- #id#里的id可以随意取，但是上面的insert则会有影响，因为上面的name会从Student里的属性里去查找 --&gt;<br />
&lt;!-- 我们也可以这样理解，如果有#占位符，则ibatis会调用parameterClass里的属性去赋值 --&gt;<br />
delete from tbl_student where&nbsp;id=#id#<br />
<strong>&lt;/delete&gt;</strong><br />
&nbsp;<br />
<strong>&lt;update&nbsp;</strong>id=&quot;updateStudent&quot; parameterClass=&quot;Student&quot;<strong>&gt;</strong><br />
update tbl_student set<br />
name=#name#,birth=#birth#,score=#score# where&nbsp;id=#id#<br />
<strong>&lt;/update&gt;</strong><br />
&nbsp;<br />
<strong>&lt;/sqlMap&gt;</strong></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h2>SqlMapConfig.xml ：</h2>

<p>&lt;?xml version=&quot;1.0&quot;?&gt;<br />
&lt;?xmlversion=&quot;1.0&quot;encoding=&quot;UTF-8&quot;?&gt;<br />
&lt;!DOCTYPE sqlMapConfig PUBLIC &quot;-//ibatis.apache.org//DTD SQL Map Config 2.0//EN&quot;<br />
&quot;http://ibatis.apache.org/dtd/sql-map-config-2.dtd&quot;&gt;<br />
&lt;sqlMapConfig&gt;<br />
&nbsp;&nbsp; &nbsp; &lt;propertiesresource&gt;<br />
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &lt;transactionManagertype&gt;<br />
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;dataSourcetype&gt;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;propertyname /&gt;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;propertyname /&gt;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;propertyname /&gt;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;propertyname /&gt;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- 这里可以写多个实体的映射文件 --&gt;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;sqlMapresource&gt;&lt;/sqlMapresource&gt;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/dataSourcetype&gt;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/transactionManagertype&gt;<br />
&nbsp; &nbsp; &lt;/propertiesresource&gt;<br />
&lt;/sqlMapConfig&gt;</p>

<h2>StudentDao ：</h2>

<p>package com.iflytek.dao;<br />
import java.util.List;<br />
import com.iflytek.entity.Student;</p>

<p><br />
/**<br />
&nbsp;* @author xudongwang 2011-12-31<br />
&nbsp;*<br />
&nbsp;* Email:xdwangiflytek@gmail.com<br />
&nbsp;*<br />
&nbsp;*/<br />
public interface StudentDao {<br />
/**<br />
&nbsp;* 添加学生信息<br />
&nbsp;*<br />
&nbsp;* @param student<br />
&nbsp;* 学生实体<br />
&nbsp;* @return 返回是否添加成功<br />
&nbsp;*/<br />
&nbsp;&nbsp; &nbsp;public boolean addStudent( Student student );</p>

<p><br />
/**<br />
&nbsp;* 根据学生id删除学生信息<br />
&nbsp;*<br />
&nbsp;* @param id<br />
&nbsp;* 学生id<br />
&nbsp;* @return 删除是否成功<br />
&nbsp;*/<br />
&nbsp;&nbsp; &nbsp;public boolean deleteStudentById( int id );</p>

<p><br />
/**<br />
&nbsp;* 更新学生信息<br />
&nbsp;*<br />
&nbsp;* @param student<br />
&nbsp;* 学生实体<br />
&nbsp;* @return 更新是否成功<br />
&nbsp;*/<br />
&nbsp;&nbsp; &nbsp;public boolean updateStudent( Student student );</p>

<p><br />
/**<br />
&nbsp;* 查询全部学生信息<br />
&nbsp;*<br />
&nbsp;* @return 返回学生列表<br />
&nbsp;*/<br />
&nbsp;&nbsp; &nbsp;public List&lt;Student&gt; selectAllStudent();</p>

<p><br />
/**<br />
&nbsp;* 根据学生姓名模糊查询学生信息<br />
&nbsp;*<br />
&nbsp;* @param name<br />
&nbsp;* 学生姓名<br />
&nbsp;* @return 学生信息列表<br />
&nbsp;*/<br />
&nbsp;&nbsp; &nbsp;public List&lt;Student&gt; selectStudentByName( String name );</p>

<p><br />
/**<br />
&nbsp;* 根据学生id查询学生信息<br />
&nbsp;*<br />
&nbsp;* @param id<br />
&nbsp;* 学生id<br />
&nbsp;* @return 学生对象<br />
&nbsp;*/<br />
&nbsp;&nbsp; &nbsp;public Student selectStudentById( int id );<br />
}</p>

<p>&nbsp;</p>

<h2>StudentDaoImpl ：</h2>

<p>package com.iflytek.daoimpl;<br />
import java.io.IOException;<br />
import java.io.Reader;<br />
import java.sql.SQLException;<br />
import java.util.List;<br />
import com.ibatis.common.resources.Resources;<br />
import com.ibatis.sqlmap.client.SqlMapClient;<br />
import com.ibatis.sqlmap.client.SqlMapClientBuilder;<br />
import com.iflytek.dao.StudentDao;<br />
import com.iflytek.entity.Student;</p>

<p><br />
/**<br />
&nbsp;* @author xudongwang 2011-12-31<br />
&nbsp;*<br />
&nbsp;* Email:xdwangiflytek@gmail.com<br />
&nbsp;*<br />
&nbsp;*/<br />
public class StudentDaoImpl implements StudentDao {<br />
&nbsp;&nbsp; &nbsp;private static <strong>SqlMapClient</strong> sqlMapClient = null;<br />
/* 读取配置文件 */<br />
&nbsp;&nbsp; &nbsp;static {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Reader reader = Resources.getResourceAsReader( &quot;com/iflytek/entity/SqlMapConfig.xml&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sqlMapClient = SqlMapClientBuilder.buildSqlMapClient( reader );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;reader.close();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch ( IOException e ) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.printStackTrace();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;publicboolean addStudent( Student student )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Object&nbsp;&nbsp; &nbsp;object&nbsp;&nbsp; &nbsp;= null;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;boolean flag&nbsp;&nbsp; &nbsp;= false;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;object = sqlMapClient.insert( &quot;addStudent&quot;, student );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( &quot;添加学生信息的返回值：&quot; + object );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch ( SQLException e ) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.printStackTrace();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ( object != null )<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;flag = true;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(flag);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;public boolean deleteStudentById( int id )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;boolean flag&nbsp;&nbsp; &nbsp;= false;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Object&nbsp;&nbsp; &nbsp;object&nbsp;&nbsp; &nbsp;= null;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;object = sqlMapClient.delete( &quot;deleteStudentById&quot;, id );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( &quot;删除学生信息的返回值：&quot; + object + &quot;，这里返回的是影响的行数&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch ( SQLException e ) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.printStackTrace();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ( object != null )<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;flag = true;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(flag);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;publicboolean updateStudent( Student student )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;boolean flag&nbsp;&nbsp; &nbsp;= false;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Object&nbsp;&nbsp; &nbsp;object&nbsp;&nbsp; &nbsp;= false;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;object = sqlMapClient.update( &quot;updateStudent&quot;, student );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( &quot;更新学生信息的返回值：&quot; + object + &quot;，返回影响的行数&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch ( SQLException e ) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.printStackTrace();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ( object != null )<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;flag = true;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(flag);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;public List&lt;Student&gt; selectAllStudent()<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;List&lt;Student&gt; students = null;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;students = sqlMapClient.queryForList( &quot;selectAllStudent&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch ( SQLException e ) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.printStackTrace();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(students);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;public List&lt;Student&gt; selectStudentByName( String name )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;List&lt;Student&gt; students = null;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;students = sqlMapClient.queryForList( &quot;selectStudentByName&quot;, name );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch ( SQLException e ) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.printStackTrace();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(students);<br />
&nbsp;&nbsp; &nbsp;}</p>

<p><br />
&nbsp;&nbsp; &nbsp;public Student selectStudentById( int id )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Student student = null;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;student = (Student) sqlMapClient.queryForObject(<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;selectStudentById&quot;, id );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch ( SQLException e ) {<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.printStackTrace();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return(student);<br />
&nbsp;&nbsp; &nbsp;}<br />
}</p>

<p><br />
&nbsp;</p>

<h2>TestIbatis.java ：</h2>

<p>package com.iflytek.test;<br />
import java.sql.Date;<br />
import java.util.List;<br />
import com.iflytek.daoimpl.StudentDaoImpl;<br />
import com.iflytek.entity.Student;</p>

<p><br />
/**<br />
&nbsp;* @author xudongwang 2011-12-31<br />
&nbsp;*<br />
&nbsp;* Email:xdwangiflytek@gmail.com<br />
&nbsp;*<br />
&nbsp;*/<br />
publicclass TestIbatis {<br />
&nbsp;&nbsp; &nbsp;publicstaticvoid main( String[] args )<br />
&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;StudentDaoImpl studentDaoImpl = new StudentDaoImpl();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( &quot;测试插入&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Student addStudent = new Student();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;addStudent.setName( &quot;李四&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;addStudent.setBirth( Date.valueOf( &quot;2011-09-02&quot; ) );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;addStudent.setScore( 88 );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( studentDaoImpl.addStudent( addStudent ) );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( &quot;测试根据id查询&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( studentDaoImpl.selectStudentById( 1 ) );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( &quot;测试模糊查询&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;List&lt;Student&gt; mohuLists = studentDaoImpl.selectStudentByName( &quot;李&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for ( Student student : mohuLists )<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( student );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( &quot;测试查询所有&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;List&lt;Student&gt; students = studentDaoImpl.selectAllStudent();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for ( Student student : students )<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( student );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( &quot;根据id删除学生信息&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( studentDaoImpl.deleteStudentById( 1 ) );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( &quot;测试更新学生信息&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Student updateStudent = new Student();<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;updateStudent.setId( 1 );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;updateStudent.setName( &quot;李四1&quot; );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;updateStudent.setBirth( Date.valueOf( &quot;2011-08-07&quot; ) );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;updateStudent.setScore( 21 );<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;System.out.println( studentDaoImpl.updateStudent( updateStudent ) );<br />
&nbsp;&nbsp; &nbsp;}<br />
}<br />
&nbsp;</p>
