<h1><a href="http://www.cnblogs.com/youngjoy/p/3817471.html" id="cb_post_title_url">spring &lt;context:component-scan&gt;使用说明</a></h1>

<p>&nbsp; &nbsp;在xml配置了这个标签后，spring可以自动去扫描base-pack下面或者子包下面的java文件，如果扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean</p>

<p>注意：如果配置了&lt;context:component-scan&gt;那么&lt;context:annotation-config/&gt;标签就可以不用再xml中配置了，因为前者包含了后者。另外&lt;context:annotation-config/&gt;还提供了两个子标签</p>

<p>1.&lt;context:include-filter&gt;</p>

<p>2.&lt;context:exclude-filter&gt;</p>

<p>在说明这两个子标签前，先说一下&lt;context:component-scan&gt;有一个use-default-filters属性，改属性默认为true,这就意味着会扫描指定包下的全部的标有@Component的类，并注册成bean.也就是@Component的子注解@Service,@Reposity等。所以如果仅仅是在配置文件中这么写</p>

<p>&lt;context:component-scan base-package=<em>&quot;tv.huan.weisp.web&quot;</em>/&gt;</p>

<p>&nbsp;Use-default-filter此时为true那么会对base-package包或者子包下的所有的进行java类进行扫描,并把匹配的java类注册成bean。</p>

<p>&nbsp;</p>

<p>&nbsp;可以发现这种扫描的粒度有点太大，如果你只想扫描指定包下面的Controller，该怎么办？此时子标签&lt;context:incluce-filter&gt;就起到了勇武之地。如下所示</p>

<p>&lt;context:component-scan&nbsp;base-package=&quot;tv.huan.weisp.web .controller&quot;&gt;&nbsp;&nbsp;</p>

<p>&lt;context:include-filter&nbsp;type=&quot;annotation&quot;&nbsp;expression=&quot;org.springframework.stereotype.Controller&quot;/&gt;&nbsp;&nbsp;&nbsp;</p>

<p>&lt;/context:component-scan&gt;&nbsp;&nbsp;</p>

<p>这样就会只扫描base-package指定下的有@Controller下的java类，并注册成bean</p>

<p>但是因为use-dafault-filter在上面并没有指定，默认就为true，所以当把上面的配置改成如下所示的时候，就会产生与你期望相悖的结果（注意base-package包值得变化）</p>

<p>&lt;context:component-scan&nbsp;base-package=&quot;tv.huan.weisp.web&nbsp;&quot;&gt;&nbsp;&nbsp;</p>

<p>&lt;context:include-filter&nbsp;type=&quot;annotation&quot;&nbsp;expression=&quot;org.springframework.stereotype.Controller&quot;/&gt;&nbsp;&nbsp;&nbsp;</p>

<p>&lt;/context:component-scan&gt;&nbsp;&nbsp;</p>

<p>此时，spring不仅扫描了@Controller，还扫描了指定包所在的子包service包下注解@Service的java类</p>

<p>此时指定的include-filter没有起到作用，只要把use-default-filter设置成false就可以了。这样就可以避免在base-packeage配置多个包名这种不是很优雅的方法来解决这个问题了。</p>

<p>另外在我参与的项目中可以发现在base-package指定的包中有的子包是不含有注解了，所以不用扫描，此时可以指定&lt;context:exclude-filter&gt;来进行过滤，说明此包不需要被扫描。综合以上说明</p>

<p>Use-dafault-filters=&rdquo;false&rdquo;的情况下：&lt;context:exclude-filter&gt;指定的不扫描，&lt;context:include-filter&gt;指定的扫描</p>

<p>源：http://blog.csdn.net/chunqiuwei/article/details/16115135</p>
