<h2>JAVA Hibernate工作原理</h2>

<h2><strong>hibernate 简介：</strong></h2>

<p>&nbsp;</p>

<p><img alt="" src="http://img.blog.csdn.net/20141120210203542?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaml1cWl5dWxpYW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:327px; width:522px" /></p>

<p>&nbsp;</p>

<p>hibernate是一个开源框架，它是对象关联关系映射的框架，它对JDBC做了轻量级的封装，而我们java程序员可以使用面向对象的思想来操纵数据库。&nbsp; &nbsp;</p>

<p>从上图中，我们可以看出Hibernate六大核心接口，两个主要配置文件，以及他们直接的关系。Hibernate的所有内容都在这了。那我们从上到下简单的认识一下，每个接口进行一句话总结。</p>

<p>hibernate核心接口<br />
session：负责被持久化对象CRUD操作<br />
sessionFactory:负责初始化hibernate，创建session对象<br />
configuration:负责配置并启动hibernate，创建SessionFactory<br />
Transaction:负责事物相关的操作</p>

<p>Query和Criteria接口：负责执行各种数据库查询</p>

<h2><strong>hibernate工作原理：</strong></h2>

<p>1.通过Configuration config = new Configuration().configure();//读取并解析hibernate.cfg.xml配置文件<br />
2.由hibernate.cfg.xml中的&lt;mapping resource=&quot;com/xx/User.hbm.xml&quot;/&gt;读取并解析映射信息<br />
3.通过SessionFactory sf = config.buildSessionFactory();//创建SessionFactory<br />
4.Session session = sf.openSession();//打开Sesssion<br />
5.Transaction tx = session.beginTransaction();//创建并启动事务Transation<br />
6.persistent operate操作数据，持久化操作<br />
7.tx.commit();//提交事务<br />
8.关闭Session<br />
9.关闭SesstionFactory</p>

<h2><br />
<strong>hibernate六大接口介绍：</strong></h2>

<p>1.Configuration接口:</p>

<p>&nbsp;&nbsp; 配置hibernate，启动hibernate。hibernate应用通过Configuration执行关系-映射文件的位置或者动态配置hibernate属性，最后创建SessionFactory实例对象。</p>

<p>&nbsp; 在hibernate的hiberante.cfg.xml文件配置中，会有这么一句话：</p>

<p>&nbsp; &lt;mapping resource=&quot;com/lanhuigu/hibernate/entity/Customer.hbm.xml&quot; /&gt;</p>

<p>&nbsp; 这句就是指定关系-映射文件的位置。</p>

<p>2.SessionFactory接口:</p>

<p>&nbsp;&nbsp; 初始化hibernate,一个SessionFactory对应一个实例数据源，创建session接口对象。</p>

<p>&nbsp;&nbsp; SessionFactory特点:</p>

<p>&nbsp;&nbsp; 1.线程安全，一个实例多个线程共享。</p>

<p>&nbsp;&nbsp; 2.不能随意创建和销毁，因为是重量级的。一个<a href="http://lib.csdn.net/base/mysql" target="_blank" title="MySQL知识库">数据库</a>只需创建一个SessionFactory实例，初始化时创建。如果同时访问多个数据库，需要对应每个数据库创建对应</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 的实例。否则线程共享数据时，发生数据混乱。</p>

<p>3.Session接口:</p>

<p>&nbsp;&nbsp; 线程不安全，避免多个线程共享一个session。</p>

<p>&nbsp;&nbsp; 是轻量级的，创建和销毁消费资源少，被称为持久化管理器，负责数据的保存，更新，删除，加载和查询对象。</p>

<p>&nbsp;&nbsp; 主要有5个方法对象以上操作:</p>

<p>&nbsp;&nbsp; save():</p>

<p>&nbsp;&nbsp; update():</p>

<p>&nbsp;&nbsp; delete():</p>

<p>&nbsp;&nbsp; load():</p>

<p>&nbsp;&nbsp; find():</p>

<p>4.Transaction接口:</p>

<p>&nbsp; 底层封装JDBC,JTA,CORBA事务。 负责hibernate事务的管理。</p>

<p>5.Query，Criteria:负责数据的查询。</p>

<p>&nbsp; Query封装HQL(Hibernate Query Language)查询语句，</p>

<p>&nbsp; Criteria封装基于字符串形式的查询语句。</p>
