<h1>一、JavaWeb应用的生命周期</h1>

<p>JavaWeb应用的生命周期是由Servlet容器来控制的。归纳起来，JavaWeb的生命周期包括三个阶段：</p>

<p>1）启动阶段：加载Web应用的有关数据，创建ServletContext对象，对Filter（过滤器）和一些Servlet进行初始化。</p>

<p>2）运行时阶段：为客户端提供服务。</p>

<p>3）终止阶段：释放Web应用所占用的各种资源。</p>

<p>&nbsp;</p>

<p>下面详细介绍生命你周期的各个阶段：</p>

<h2>1、启动阶段：</h2>

<p>Servlet容器在启动JavaWeb应用，完成以下操作：</p>

<p>（1）把<strong>web.xml文件中的数据加载到内存中</strong>。</p>

<p>（2）为JavaWeb应用创建一个<strong>ServletContext对象</strong>。</p>

<p>（3）对所有的Filter进行初始化。</p>

<p>（4）对那些需要在Web应用启动就初始化的Servlet进行初始化。</p>

<p>补充：</p>

<p>一、启动一个WEB项目的时候，WEB容器会去读取它的配置文件web.xml，读取&lt;context-param&gt;结点。<br />
二、容创建一个ServletContext（servlet上下文），这个 web项目的所有部分都将共享这个上下文。&nbsp;<br />
三、容器将&lt;context-param&gt;转换为键值对，并交给 servletContext。&nbsp;因为listener,&nbsp;filter&nbsp;等在初始化时会用到这些上下文中的信息，所以要先加载。&nbsp;<br />
四、容器创建&lt;listener&gt;中的类实例，创建监听器。<br />
五、对所有的Filter进行初始化。<br />
六、加载servlet&nbsp;<br />
load- on-startup&nbsp;元素在web应用启动的时候指定了servlet被加载的顺序，它的值必须是一个整数。</p>

<p>如果它的值是一个负整数或是这个元素不存在，那么容器会在该servlet被调用的时候，加载这个servlet。如果值是正整数或零，容器在配置的时候就加载并初始化这个servlet，容器必须保证值小的先被加载。如果值相等，容器可以自动选择先加载谁。</p>

<p>web.xml&nbsp;的加载顺序是：context-param&nbsp;-&gt;&nbsp;listener&nbsp;-&gt;&nbsp;filter&nbsp;-&gt;&nbsp;servlet。</p>

<h2>2、运行时阶段：</h2>

<p>这是JavaWeb应用最主要的生命阶段。在这个阶段，应用的所有Servlet都处于待命状态，随时可以为响应客户端的特定请求，提供相应的服务。假如客户端请求的Servlet还不存在，Servlet容器会先初始化Servlet，然后再调用它的service（）服务方法。</p>

<h2>3、终止阶段：</h2>

<p>Servlet容器在终止JavaWeb应用时，会完成以下操作：</p>

<p>（1）销毁JavaWeb应用中所有处于运行时状态的Servlet。</p>

<p>（2）销毁JavaWeb应用中所有处于运行时状态的Filter。</p>

<p>（3）销毁所有与JavaWeb应用相关的对象，如ServletCoontext对象等，并释放Web应用所占用的相关资源。</p>
