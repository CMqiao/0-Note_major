<h1>Java数据类型和MySql数据类型对应一览</h1>

<table align="center" border="0" cellspacing="0">
	<tbody>
		<tr>
			<td>类型名称</td>
			<td>显示长度</td>
			<td>数据库类型</td>
			<td>JAVA类型</td>
			<td>JDBC类型索引(int)</td>
			<td>描述</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>VARCHAR</td>
			<td>L+N</td>
			<td>VARCHAR</td>
			<td>java.lang.String</td>
			<td>12</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>CHAR</td>
			<td>N</td>
			<td>CHAR</td>
			<td>java.lang.String</td>
			<td>1</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>BLOB</td>
			<td>L+N</td>
			<td>BLOB</td>
			<td>java.lang.byte[]</td>
			<td>-4</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>TEXT</td>
			<td>65535</td>
			<td>VARCHAR</td>
			<td>java.lang.String</td>
			<td>-1</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>INTEGER</td>
			<td>4</td>
			<td>INTEGER UNSIGNED</td>
			<td>java.lang.Long</td>
			<td>4</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>TINYINT</td>
			<td>3</td>
			<td>TINYINT UNSIGNED</td>
			<td>java.lang.Integer</td>
			<td>-6</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>SMALLINT</td>
			<td>5</td>
			<td>SMALLINT UNSIGNED</td>
			<td>java.lang.Integer</td>
			<td>5</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>MEDIUMINT</td>
			<td>8</td>
			<td>MEDIUMINT UNSIGNED</td>
			<td>java.lang.Integer</td>
			<td>4</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>BIT</td>
			<td>1</td>
			<td>BIT</td>
			<td>java.lang.Boolean</td>
			<td>-7</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>BIGINT</td>
			<td>20</td>
			<td>BIGINT UNSIGNED</td>
			<td>java.math.BigInteger</td>
			<td>-5</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>FLOAT</td>
			<td>4+8</td>
			<td>FLOAT</td>
			<td>java.lang.Float</td>
			<td>7</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>DOUBLE</td>
			<td>22</td>
			<td>DOUBLE</td>
			<td>java.lang.Double</td>
			<td>8</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>DECIMAL</td>
			<td>11</td>
			<td>DECIMAL</td>
			<td>java.math.BigDecimal</td>
			<td>3</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>BOOLEAN</td>
			<td>1</td>
			<td>同TINYINT</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>ID</td>
			<td>11</td>
			<td>PK (INTEGER UNSIGNED)</td>
			<td>java.lang.Long</td>
			<td>4</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>DATE</td>
			<td>10</td>
			<td>DATE</td>
			<td>java.sql.Date</td>
			<td>91</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>TIME</td>
			<td>8</td>
			<td>TIME</td>
			<td>java.sql.Time</td>
			<td>92</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>DATETIME</td>
			<td>19</td>
			<td>DATETIME</td>
			<td>java.sql.Timestamp</td>
			<td>93</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>TIMESTAMP</td>
			<td>19</td>
			<td>TIMESTAMP</td>
			<td>java.sql.Timestamp</td>
			<td>93</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>YEAR</td>
			<td>4</td>
			<td>YEAR</td>
			<td>java.sql.Date</td>
			<td>91</td>
		</tr>
	</tbody>
</table>

<p>以上就是Java数据类型和MySql数据类型对应表。</p>

<p>对于bolb，一般用于对图片的数据库存储，原理是把图片打成二进制，然后进行的一种存储方式，在java中对应byte［］数组。<br />
<br />
对于boolen类型，在mysql数据库中，个人认为用int类型代替较好，对bit操作不是很方便，尤其是在具有web页面开发的项目中，表示0/1，对应java类型的Integer较好。</p>

<p>&nbsp;</p>

<table border="1">
	<tbody>
		<tr>
			<td>BIT(1)&nbsp;(new in MySQL-5.0)</td>
			<td>BIT</td>
			<td><code>java.lang.Boolean</code></td>
		</tr>
		<tr>
			<td>BIT( &gt; 1)&nbsp;(new in MySQL-5.0)</td>
			<td>BIT</td>
			<td><code>byte[]</code></td>
		</tr>
		<tr>
			<td>TINYINT</td>
			<td>TINYINT</td>
			<td><code>java.lang.Boolean</code>&nbsp;if the configuration property&nbsp;<code>tinyInt1isBit</code>&nbsp;is set to&nbsp;<code>true</code>&nbsp;(the default) and the storage size is 1, or&nbsp;<code>java.lang.Integer</code>&nbsp;if not.</td>
		</tr>
		<tr>
			<td>BOOL,&nbsp;BOOLEAN</td>
			<td>TINYINT</td>
			<td>See&nbsp;TINYINT, above as these are aliases for&nbsp;TINYINT(1), currently.</td>
		</tr>
		<tr>
			<td>SMALLINT[(M)] [UNSIGNED]</td>
			<td>SMALLINT [UNSIGNED]</td>
			<td><code>java.lang.Integer</code>&nbsp;(regardless if UNSIGNED or not)</td>
		</tr>
		<tr>
			<td>MEDIUMINT[(M)] [UNSIGNED]</td>
			<td>MEDIUMINT [UNSIGNED]</td>
			<td><code>java.lang.Integer,</code>&nbsp;if UNSIGNED&nbsp;<code>java.lang.Long</code>&nbsp;(C/J 3.1 and earlier), or&nbsp;<code>java.lang.Integer</code>&nbsp;for C/J 5.0 and later</td>
		</tr>
		<tr>
			<td>INT,INTEGER[(M)] [UNSIGNED]</td>
			<td>INTEGER [UNSIGNED]</td>
			<td><code>java.lang.Integer</code>, if UNSIGNED&nbsp;<code>java.lang.Long</code></td>
		</tr>
		<tr>
			<td>BIGINT[(M)] [UNSIGNED]</td>
			<td>BIGINT [UNSIGNED]</td>
			<td><code>java.lang.Long</code>, if UNSIGNED&nbsp;<code>java.math.BigInteger</code></td>
		</tr>
		<tr>
			<td>FLOAT[(M,D)]</td>
			<td>FLOAT</td>
			<td><code>java.lang.Float</code></td>
		</tr>
		<tr>
			<td>DOUBLE[(M,B)]</td>
			<td>DOUBLE</td>
			<td><code>java.lang.Double</code></td>
		</tr>
		<tr>
			<td>DECIMAL[(M[,D])]</td>
			<td>DECIMAL</td>
			<td><code>java.math.BigDecimal</code></td>
		</tr>
		<tr>
			<td>DATE</td>
			<td>DATE</td>
			<td><code>java.sql.Date</code></td>
		</tr>
		<tr>
			<td>DATETIME</td>
			<td>DATETIME</td>
			<td><code>java.sql.Timestamp</code></td>
		</tr>
		<tr>
			<td>TIMESTAMP[(M)]</td>
			<td>TIMESTAMP</td>
			<td><code>java.sql.Timestamp</code></td>
		</tr>
		<tr>
			<td>TIME</td>
			<td>TIME</td>
			<td><code>java.sql.Time</code></td>
		</tr>
		<tr>
			<td>YEAR[(2|4)]</td>
			<td>YEAR</td>
			<td>If&nbsp;<code>yearIsDateType</code>&nbsp;configuration property is set to false, then the returned object type is&nbsp;<code>java.sql.Short</code>. If set to true (the default) then an object of type&nbsp;<code>java.sql.Date</code>&nbsp;(with the date set to January 1st, at midnight).</td>
		</tr>
		<tr>
			<td>CHAR(M)</td>
			<td>CHAR</td>
			<td><code>java.lang.String</code>&nbsp;(unless the character set for the column is&nbsp;BINARY, then&nbsp;<code>byte[]</code>&nbsp;is returned.</td>
		</tr>
		<tr>
			<td>VARCHAR(M) [BINARY]</td>
			<td>VARCHAR</td>
			<td><code>java.lang.String</code>&nbsp;(unless the character set for the column is&nbsp;BINARY, then&nbsp;<code>byte[]</code>&nbsp;is returned.</td>
		</tr>
		<tr>
			<td>BINARY(M)</td>
			<td>BINARY</td>
			<td><code>byte[]</code></td>
		</tr>
		<tr>
			<td>VARBINARY(M)</td>
			<td>VARBINARY</td>
			<td><code>byte[]</code></td>
		</tr>
		<tr>
			<td>TINYBLOB</td>
			<td>TINYBLOB</td>
			<td><code>byte[]</code></td>
		</tr>
		<tr>
			<td>TINYTEXT</td>
			<td>VARCHAR</td>
			<td><code>java.lang.String</code></td>
		</tr>
		<tr>
			<td>BLOB</td>
			<td>BLOB</td>
			<td><code>byte[]</code></td>
		</tr>
		<tr>
			<td>TEXT</td>
			<td>VARCHAR</td>
			<td><code>java.lang.String</code></td>
		</tr>
		<tr>
			<td>MEDIUMBLOB</td>
			<td>MEDIUMBLOB</td>
			<td><code>byte[]</code></td>
		</tr>
		<tr>
			<td>MEDIUMTEXT</td>
			<td>VARCHAR</td>
			<td><code>java.lang.String</code></td>
		</tr>
		<tr>
			<td>LONGBLOB</td>
			<td>LONGBLOB</td>
			<td><code>byte[]</code></td>
		</tr>
		<tr>
			<td>LONGTEXT</td>
			<td>VARCHAR</td>
			<td><code>java.lang.String</code></td>
		</tr>
		<tr>
			<td>ENUM(&#39;value1&#39;,&#39;value2&#39;,...)</td>
			<td>CHAR</td>
			<td><code>java.lang.String</code></td>
		</tr>
		<tr>
			<td>SET(&#39;value1&#39;,&#39;value2&#39;,...)</td>
			<td>CHAR</td>
			<td><code>java.lang.String</code></td>
		</tr>
	</tbody>
</table>

<p>&nbsp;</p>

<p>mysql官方文档：</p>

<p><a href="http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-type-conversions.html" target="_blank">http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-type-conversions.html</a></p>
