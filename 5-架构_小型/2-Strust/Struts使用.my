<h3>引入工程所需运行库文件</h3>

<p>目前我用到的Struts版本为2.1.8.1 GA。</p>

<p>把以下几个运行库文件复制到工程的WEB-INF下的lib文件夹中。</p>

<p><a href="http://images.cnblogs.com/cnblogs_com/fmricky/WindowsLiveWriter/1Struts2_7FC9/image_4.png"><img alt="image" src="http://images.cnblogs.com/cnblogs_com/fmricky/WindowsLiveWriter/1Struts2_7FC9/image_thumb_1.png" style="height:173px; width:244px" title="image" /></a></p>

<p>&nbsp;</p>

<h3>在web.xml中配置FilterDispatcher</h3>

<p>配置WEB-INF下的web.xml文件</p>

<p><code>&lt;?</code><code>xml</code>&nbsp;<code>version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</code></p>

<p><code>&lt;</code><code>web-app</code>&nbsp;<code>version=&quot;2.5&quot; </code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>xmlns=&quot;<a href="http://java.sun.com/xml/ns/javaee">http://java.sun.com/xml/ns/javaee</a>&quot; </code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>xmlns:xsi=&quot;<a href="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</a>&quot; </code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>xsi:schemaLocation=&quot;<a href="http://java.sun.com/xml/ns/javaee">http://java.sun.com/xml/ns/javaee</a> </code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code><a href="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd</a>&quot;&gt;</code></p>

<p><code>&nbsp;&nbsp;</code>&nbsp;</p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>filter</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>filter-name</code><code>&gt;struts2&lt;/</code><code>filter-name</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>filter-class</code><code>&gt;org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&lt;/</code><code>filter-class</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;/</code><code>filter</code><code>&gt;</code></p>

<p>&nbsp;</p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>filter-mapping</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>filter-name</code><code>&gt;struts2&lt;/</code><code>filter-name</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>url-pattern</code><code>&gt;/*&lt;/</code><code>url-pattern</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;/</code><code>filter-mapping</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p>

<p><code>&lt;/</code><code>web-app</code><code>&gt;</code></p>

<ol>
	<li><strong>Struts2的核心控制器FilterDispatcher被设计成了过滤器</strong>，通过&lt;filter&gt;&lt;/filter&gt;标签引入。</li>
	<li>&lt;url-pattern&gt;/*&lt;/url-pattern&gt;说明所有客户端请求都经由FilterDispatcher处理，并把过滤后的请求交给Struts2进行处理。</li>
</ol>

<h3>编写Action</h3>

<ol>
	<li>Struts2直接使用Action来封装HTTP请求参数，因此Action类应该包含与请求相对应的属性，并为该属性提供对应的setter和getter方法。</li>
	<li>为Action类里增加一个execute方法，因为Struts2框架默认会执行这个方法。这个方法本身并不做业务逻辑处理，而是调用其他业务逻辑组件完成这部分工作。</li>
	<li>Action类返回一个标准的字符串，该字符串是一个逻辑视图名，该视图名对应实际的物理视图。</li>
</ol>

<p>我们现在要实现的是一个用户登录验证，因此Action中提供用户名和密码两个属性。如果正确返回success否则返回error</p>

<p><code>package</code>&nbsp;<code>wwfy.action.user;</code></p>

<p>&nbsp;</p>

<p><code>public</code>&nbsp;<code>class</code>&nbsp;<code>UserAction {</code></p>

<p>&nbsp;</p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>private</code>&nbsp;<code>String username;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>private</code>&nbsp;<code>String password;</code></p>

<p>&nbsp;</p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>public</code>&nbsp;<code>String getUsername() {</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code>&nbsp;<code>username;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></p>

<p>&nbsp;</p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>public</code>&nbsp;<code>void</code>&nbsp;<code>setUsername(String username) {</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>this</code><code>.username = username;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></p>

<p>&nbsp;</p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>public</code>&nbsp;<code>String getPassword() {</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code>&nbsp;<code>password;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></p>

<p>&nbsp;</p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>public</code>&nbsp;<code>void</code>&nbsp;<code>setPassword(String password) {</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>this</code><code>.password = password;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></p>

<p>&nbsp;</p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>public</code>&nbsp;<code>String execute() </code><code>throws</code>&nbsp;<code>Exception {</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>// 只有用户名为wwfy，密码为123456方可成功登陆</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code>&nbsp;<code>(username.equals(</code><code>&quot;wwfy&quot;</code><code>) &amp;&amp; password.equals(</code><code>&quot;123456&quot;</code><code>)) {</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code>&nbsp;<code>&quot;success&quot;</code><code>;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code>&nbsp;<code>{</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code>&nbsp;<code>&quot;error&quot;</code><code>;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></p>

<p><code>}</code><br />
Struts2框架中Action是一个POJO，没有被代码污染。Action有一下特点：</p>

<ul>
	<li>Struts2中的Action的execute方法不依赖于servlet API，改善了Struts1中耦合过于紧密，极大方便了单元测试。</li>
	<li>Struts2的Action无须用ActionForm封装请求参数。</li>
	<li>相对Struts1框架而言，Struts2的逻辑视图不再是ActionForward对象，而是一个普通的字符串，利于分离和复用。</li>
</ul>

<h3>配置struts.xml</h3>

<p>Struts2框架的核心配置文件就是struts.xml，该文件主要负责Struts2应用中各Action的具体实现逻辑。struts.xml会根据不同请求找到具体的Action，然后根据Action返回的逻辑视图名找到具体的物理视图。</p>

<p>在WEB-INF/classes文件夹下创建struts.xml</p>

<p><code>&lt;?</code><code>xml</code>&nbsp;<code>version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</code></p>

<p><code>&lt;!</code><code>DOCTYPE</code>&nbsp;<code>struts PUBLIC</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&quot;-//Apache Software Foundation//DTD Struts Configuration 2.0//EN&quot;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&quot;<a href="http://struts.apache.org/dtds/struts-2.0.dtd">http://struts.apache.org/dtds/struts-2.0.dtd</a>&quot;&gt;</code></p>

<p><code>&lt;</code><code>struts</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>package</code>&nbsp;<code>name=&quot;wwfy&quot; extends=&quot;struts-default&quot;&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>action</code>&nbsp;<code>name=&quot;loginUser&quot; class=&quot;wwfy.action.user.UserAction&quot;&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>result</code>&nbsp;<code>name=&quot;success&quot;&gt;/jsp/error.jsp&lt;/</code><code>result</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>result</code>&nbsp;<code>name=&quot;error&quot;&gt;/jsp/error.jsp&lt;/</code><code>result</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;/</code><code>action</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;/</code><code>package</code><code>&gt;</code></p>

<p><code>&lt;/</code><code>struts</code><code>&gt;</code></p>

<ol>
	<li>该文件发布的时候必须放置在WEB-INF/classes路径下，当程序运行的时候会自动在该目录下搜索struts.xml。</li>
	<li>在action标签中定义了name和class。name属性对应的是用户URL请求中的action名，比如在本应用中，用户请求为<a href="http://localhost:8080/Struts2/loginUser.action">http://localhost:8080/Struts2/loginUser.action</a>,那么name属性就应该为loginUser。class属性是处理请求的实现类（注意：要包含完整路径）,本应用的实现类是wwfy.action.user.UserAction。</li>
	<li>result标签定义逻辑视图和物理视图之间的映射，在我们的Action中，如果返回的字符串是&quot;success&rdquo;则由对应的success.jsp页面进行处理；如果返回的字符串是&quot;error&rdquo;则由error.jsp页面进行处理。</li>
</ol>

<h3>编写视图资源</h3>

<p>1、登陆页面login.jsp</p>

<p><code>&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;GB2312&quot;%&gt;</code></p>

<p><code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</code></p>

<p><code>&lt;!</code><code>DOCTYPE</code>&nbsp;<code>HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</code></p>

<p><code>&lt;</code><code>html</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code><code>&lt;</code><code>head</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>title</code><code>&gt;登陆页面&lt;/</code><code>title</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code><code>&lt;/</code><code>head</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code>&nbsp;</p>

<p><code>&nbsp;&nbsp;</code><code>&lt;</code><code>body</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>center</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>s:form</code>&nbsp;<code>action=&quot;loginUser&quot;&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>s:textfield</code>&nbsp;<code>name=&quot;username&quot; label=&quot;用户名&quot;&gt;&lt;/</code><code>s:textfield</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>s:password</code>&nbsp;<code>name=&quot;password&quot; label=&quot;密码&quot;&gt;&lt;/</code><code>s:password</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>s:submit</code>&nbsp;<code>value=&quot;确定&quot;/&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>s:reset</code>&nbsp;<code>value=&quot;重置&quot;/&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;/</code><code>s:form</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;/</code><code>center</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code><code>&lt;/</code><code>body</code><code>&gt;</code></p>

<p><code>&lt;/</code><code>html</code><code>&gt;</code></p>

<p>2、登陆成功页面success.jsp</p>

<p><code>&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;GB2312&quot;%&gt;</code></p>

<p><code>&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</code></p>

<p><code>&lt;!</code><code>DOCTYPE</code>&nbsp;<code>HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</code></p>

<p><code>&lt;</code><code>html</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code><code>&lt;</code><code>head</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>title</code><code>&gt;成功页面&lt;/</code><code>title</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code><code>&lt;/</code><code>head</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code>&nbsp;</p>

<p><code>&nbsp;&nbsp;</code><code>&lt;</code><code>body</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>p</code>&nbsp;<code>align=&quot;center&quot;&gt;登陆成功！！！您的用户名是&lt;</code><code>s:property</code>&nbsp;<code>value=&quot;username&quot;&gt;&lt;/</code><code>s:property</code><code>&gt;&lt;/</code><code>p</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code><code>&lt;/</code><code>body</code><code>&gt;</code></p>

<p><code>&lt;/</code><code>html</code><code>&gt;</code></p>

<p><br />
&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;GB2312&quot;%&gt;3、登陆失败页面error.jsp</p>

<p><code>&lt;!</code><code>DOCTYPE</code>&nbsp;<code>HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;</code></p>

<p><code>&lt;</code><code>html</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code><code>&lt;</code><code>head</code><code>&gt;&nbsp; </code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>title</code><code>&gt;失败页面&lt;/</code><code>title</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code><code>&lt;/</code><code>head</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code>&nbsp;</p>

<p><code>&nbsp;&nbsp;</code><code>&lt;</code><code>body</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>p</code>&nbsp;<code>align=&quot;center&quot;&gt;登陆失败！！！&lt;/</code><code>p</code><code>&gt;</code></p>

<p><code>&nbsp;&nbsp;</code><code>&lt;/</code><code>body</code><code>&gt;</code></p>

<p><code>&lt;/</code><code>html</code><code>&gt;</code></p>

<p><br />
页面中很多以s:开头的标签,这些是Struts2框架独有的标签库.</p>

<p>整个应用的目录结构是</p>

<p><a href="http://images.cnblogs.com/cnblogs_com/fmricky/WindowsLiveWriter/1Struts2_7FC9/image_6.png"><img alt="image" src="http://images.cnblogs.com/cnblogs_com/fmricky/WindowsLiveWriter/1Struts2_7FC9/image_thumb_2.png" style="height:509px; width:331px" title="image" /></a></p>
