<h1><a href="http://www.cnblogs.com/fly1096431559/p/5436321.html" id="cb_post_title_url">第一次读Hibernate源码</a></h1>

<p>今天抽空读了下hibernate源码，总结了几条读源码的经验，并且认识了hibernate的部分源码结构。</p>

<p>首先，拿到一个框架，要先了解其基本功能，通读(略读)其API。<br />
然后，通过其主要代码或其在项目中的常应用的类为入口，进行追踪。看看其实如何实现本功能的。同时，可在网上查找相关<br />
文档，了解其基本架构。<br />
在对其常用功能的实现有一定认识以后，然后通视源码，主要先从其工具类或实体类开始(因为易于理解，并且不像其他逻辑相关的类一样较为复杂)。<br />
在阅读逻辑相关的类时，不仅要&#39;见文知意&#39;，还要仔细阅读注释，如果有Log日志输出，还可以借助日志输出字符来理解(在应用中还可以借助控制台日志打印信息来追踪程序执行过程)。沿着某项功能的实现为主线，跳跃式阅读。<br />
最后，查缺补漏，找出还未阅读的代码(如不想深入研究，就不必了)。</p>

<p>**在此发现了&#39;解耦&#39;的好处，不用把整个框架设计为一体，全部互相依赖，比如Hibernate里的一些工具类(如StringHelper类)，这样在修改重构时会减少代码量。</p>

<p><br />
今天只读了configuration类和相关的部分类元源码。<br />
其中configuration类是Hibernate运行时的第一个类，他负责解析hibernate.cfg.xml，并作完成框架的初始化工作。</p>

<p>下面是引用网上关于Hibernate各包的简介。</p>

<p><br />
1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.hibernate ：该包的类基本上都是接口类和异常类</p>

<p>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.hibernate.cache.* ：cache的实现类</p>

<p>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.hibernate.cfg.* ：配置文件读取类</p>

<p>4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.hibernate.collection.* ：Hibernate集合接口实现类：例如List（PersistentList），Set（PersistentSet），&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bag(PersistentBag)等等，Hibernate之所以要自行编写集合接口实现类是为了支持延迟加载。</p>

<p>5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.hibernate.connection.* ：几个数据库连接池的Provider</p>

<p>6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.hibernate.dialect.*　：支持多种数据库特性，每个Dialect实现类代表一种数据库，描述了该数据库支持的数据类型和其它特点，例如是否有AutoIncrement，是否有Sequence，是否有分页sql等等</p>

<p>7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.hibernate.eg.* ：Hibernate文档中用到的例子</p>

<p>8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.hibernate.engine.* ：这个包的类作用比较散</p>

<p>9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.hibernate.hql.* ：HQL的实现org.hibernate.id.* ：ID生成器</p>

<p>10.&nbsp;&nbsp;&nbsp; orghibernate.impl.* ：最核心的包，一些重要接口的实现类，如果Session，SessionFactory，Query等　　</p>

<p>11.&nbsp;&nbsp;&nbsp; org.hibernate.jca.* ：JCA支持，把Session包装为支持JCA的接口实现类</p>

<p>12.&nbsp;&nbsp;&nbsp; org.hibernate.jmx.* ：jmx的实现</p>

<p>13.&nbsp;&nbsp;&nbsp; org.hibernate.loader.* ：也是很核心的包，主要是生成sql语句的</p>

<p>14.&nbsp;&nbsp;&nbsp; org..hibernate.lob.* ：Blob和Clob支持</p>

<p>15.&nbsp;&nbsp;&nbsp; org.hibernate.mapping.* :hbm文件的属性实现</p>

<p>16.&nbsp;&nbsp;&nbsp; org.hibernate.metadata.*：PO的Meta实现</p>

<p>17.&nbsp;&nbsp;&nbsp; org.hibernate.odmg.*：ODMG是一个ORM标准，这个包是ODMG标准的实现类</p>

<p>18.&nbsp;&nbsp;&nbsp; org.hibernate.persister.*：核心包，实现持久对象和表之间的映射</p>

<p>19.&nbsp;&nbsp;&nbsp; org.hibernate.proxy.*：Proxy和Lazy Loading支持</p>

<p>20.&nbsp;&nbsp;&nbsp; org.hibernate.ps.*：该包是PreparedStatment Cache</p>

<p>21.&nbsp;&nbsp;&nbsp; org.hibernate.sql.*：生成JDBC sql语句的包</p>

<p>22.&nbsp;&nbsp;&nbsp; org.hibernate.test.*：测试类，你可以用junit来测试Hibernate</p>

<p>23.&nbsp;&nbsp;&nbsp; org.hibernate.tool.hbm2ddl.*：用hbm配置文件生成DDL</p>

<p>24.&nbsp;&nbsp;&nbsp; org.hibernate.transaction.*：Hibernate Transaction实现类</p>

<p>25.&nbsp;&nbsp;&nbsp; org.hibernate.type.*：Hibernate中定义的持久对象的属性的数据类型</p>

<p>26.&nbsp;&nbsp;&nbsp; org.hibernate.util.*：一些工具类，作用比较散</p>

<p>27.&nbsp;&nbsp;&nbsp; org.hibernate.xml.*：XML数据绑定</p>
