<h1>各层代码设计技巧</h1>

<h2>各层设计：</h2>

<p>Server 层，controller层，dao层等，都可以继承自一个基类，方便统一加入一些成员。</p>

<p>dao层返回数值，service 层返回boolean类型。</p>

<p>抽象出错误类型代码！</p>

<p>总结出字典表！常量类！</p>

<h2>js 前端代码层：</h2>

<p>如页面初始化的js里面，加入下拉框初始化的统一方法。方法参数是controller的拦截地址，直接调用controller层获取下拉框数据，并设值。</p>

<h2>controller层：</h2>

<p>有一些模块，他可能对外提供统一方法，这时，可以将统一服务放在一个controller里。</p>

<p>如下拉框的获取，放在同一个controller里面。</p>

<h2>Util层：</h2>

<p>有些字段存储的是id，但是显示的时候要显示为汉字，这里可以将其统一写一个id到名字的转换工具，使用redis或其他技术。</p>

<p>项目中验证、自动生成 这些都统一抽象出来工具类！！(很多地方会使用到验证，也可以写一个统一的验证类。)</p>

<p>项目中删除数据策略。(有些软删除相关的系统，has_used字段的维护也可以写一个工具类。有些功能，如has_used字段维护，单表数据是否存在，可以抽出公共类。)</p>

<h2>数据层：</h2>

<p>数据模型使用dao，pojo，dto.</p>

<h2>&nbsp;</h2>
