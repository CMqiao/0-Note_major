<p>JMS为Java Message Service(即Java消息服务), 由Sun和一些公司组织制定标准</p>

<p>MQ为Message Queue(消息队列), 消息队列在很早就提出.</p>

<p>因为这两者有共性.JMS规范中定义两种服务,topic(消息发布/订阅)和queue(消息队列), 而queue也差不多是MQ的功能.所以很多提供MQ的也同时提供JMS标准(也差不多是因为Java使用的广泛的缘故吧).</p>

<p>&nbsp;</p>

<p>MQ相关概念&nbsp;<br />
1.消息(Message)</p>

<p>消息是MQ中最小的概念，本质上就是一段数据，它能被一个或者多个应用程序所理解，是应用程序之间传递的信息载体。</p>

<p>2.队列(Queue）</p>

<p>2.1本地队列</p>

<p>本地队列按照功能可划分为初始化队列，传输队列，目标队列和死信队列。</p>

<p>初始化队列用作消息触发功能。</p>

<p>传输队列只是暂存待传的消息，条件许可的情况下，通过管道将消息传送到其他的队列管理器。</p>

<p>目标队列是消息的目的地，可以长期存放消息。</p>

<p>如果消息不能送达目标队列，也不能再路由出去，则被自动放入死信队列保存。</p>

<p>2.2别名队列&amp;远程队列</p>

<p>只是一个队列定义，用来指定远端队列管理器的队列。使用了远程队列，程序就不需要知道目标队列的位置。</p>

<p>2.3模型队列</p>

<p>模型队列定义了一套本地队列的属性结合，一旦打开模型队列，队列管理器会按照这些属性动态地创建出一个本地队列。</p>

<p>3.队列管理器(Queue Manager)</p>

<p>队列管理器是一个负责向应用程序提供消息服务的机构，如果把队列管理器比作<a href="http://lib.csdn.net/base/mysql" target="_blank" title="MySQL知识库">数据库</a>，那么队列就是其中一张表。</p>

<p>4.通道(Channel)</p>

<p>通道是两个管理器之间的一种单向点对点的的通信连接，如果需要双向交流，可以建立一对通道。</p>

<p>5.监听器(listner)</p>

<p>MQ产品的特性&nbsp;<br />
可靠性传输</p>

<p>这个特点可以说是消息中间件的立足之本，对于应用来说，只要成功把数据提交给消息中间件，那么关于数据可靠传输的问题就由消息中间件来负责。</p>

<p>不重复传输</p>

<p>不重复传播也就是断点续传的功能，特别适合网络不稳定的环境，节约网络资源。</p>

<p>异步性传输</p>

<p>异步性传输是指，接受信息双方不必同时在线，具有脱机能力和安全性。</p>

<p>消息驱动</p>

<p>接到消息后主动通知消息接收方。</p>

<p>支持事务</p>

<p>应用程序可以把一些数据更新组合成一个工作单元，这些更新通常是逻辑相关的，为了保障数据完整性，所有的更新必须同时成功或者同时失败）。</p>

<p>常用MQ产品比较</p>

<pre>
<code>ActiveMQ    Joram   HornetQ OpenMQ  MuleMQ  SonicMQ RabbitMQ    ZeroMQ
</code></pre>

<p>关注度 高 中 中 中 低 低 高 中&nbsp;<br />
成熟度 成熟 比较成熟 比较成熟 比较成熟 新产品无成功案例 成熟 成熟 不成熟&nbsp;<br />
所属社区/公司 Apache OW2 Jboss Sun Mule Progress&nbsp;<br />
社区活跃度 高 中 中 低 高 低 高 低&nbsp;<br />
文档 多 多 中 中 少 少 多 中&nbsp;<br />
特点 功能齐全，被大量开源项目使用 在Linux平台上直接调用<a href="http://lib.csdn.net/base/operatingsystem" target="_blank" title="操作系统知识库">操作系统</a>的AIO，性能得到很大的提升 性能非常好，与MuleESB无缝整合 性能优越的商业MQ 由于Erlang语言的并发能力，性能很好 低延时，高性能，最高43万条消息每秒&nbsp;<br />
授权方式 开源 开源 开源 开源 商业 商业 开源 开源&nbsp;<br />
开发语言 Java Java Java Java Java Java Erlang C&nbsp;<br />
支持的协议 OpenWire、STOMP、REST、XMPP、AMQP JMS JMS JMS JMS JMS AMQP TCP、UDP&nbsp;<br />
客户端支持语言 Java、C、C++、Python、PHP、Perl、.net等 Java Java Java Java Java、C、C++、.net Java、C、C++、Python、PHP、Perl等 python、java、php、.net等&nbsp;<br />
持久化 内存、文件、数据库 内存、文件 内存、文件 内存、文件 内存、文件 内存、文件、数据库 内存、文件 在消息发送端保存&nbsp;<br />
事务 支持 支持 支持 支持 支持 支持 不支持 不支持&nbsp;<br />
集群 支持 支持 支持 支持 支持 支持 支持 不支持&nbsp;<br />
负载均衡 支持 支持 支持 支持 支持 支持 支持 不支持&nbsp;<br />
管理界面 一般&nbsp;<br />
一般 无 一般 一般 好 无 无&nbsp;<br />
部署方式 独立、嵌入 独立、嵌入 独立、嵌入 独立、嵌入 独立 独立 独立 独立&nbsp;<br />
评价 成熟稳定，开源首选 依赖容器，不适合跨语言调用 推出的时间不长，尚无使用案例，不适合跨语言调用 依赖容器，不适合跨语言调用 推出的时间不长，无成功案例，目前仅支持Java 成熟稳定 Queue的数量大于50后，高并发下无法持续稳定的提供服务 不支持事务、集群，并且消息不能在服务端持久化</p>

<p>MQ适用场景介绍&nbsp;<br />
MQ消息队列是应运松偶合的概念而产生的，主要以队列和发布订阅为消息传输机制，以异步的方式将消息可靠的传输到消费端的一种基础产品。</p>

<p>它被广泛的应用与跨平台、跨系统的分布式系统之间，为它们提供高效可靠的异步传输机制。</p>

<p>消息通道（Message Channel）&nbsp;<br />
使用MQ将彼此协作的客户端和服务端连接起来，使他们可以交换消息。</p>

<p>如客户端与服务端需要安全可靠的交互，可以将一个MQ的队列作为安全通道，是客户端与服务端能够安全高效的进行异步通讯。</p>

<p>消息总线（Message Bus）&nbsp;<br />
对于由许多独立开发的服务组成的分布式系统，倘若要将它们组成一个完整的系统，这些服务必须能够可靠地交互，同时，为了系统的健壮性，</p>

<p>每个服务之间又不能产生过分紧密的依赖关系，这样就可以通过消息总线将不同的服务连接起来，允许它们异步的传递数据。</p>

<p>消息路由（Message Router）&nbsp;<br />
通过消息路由，可以将发送到MQ指定队列的消息根据规则路由到不同的队列。</p>

<p>此外，JMS规范还支持通过selector条件，对消息进行过滤，可以用多个消费者消费同一个队列的消息，每个消费者只消费自己感兴趣的消息。</p>

<p>发布/订阅（Publicsher/Subscriber）&nbsp;<br />
发布/订阅模式用于一对多的通讯，当消息发布者向一个主题（Topic）发送一条消息后，该主题的所有订阅者都会收到这条消息。</p>
