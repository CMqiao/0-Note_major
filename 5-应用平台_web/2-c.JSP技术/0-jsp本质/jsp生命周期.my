<h1>JSP的生命周期</h1>

<p>JSP与Servlet的一个区别在于，Servlet容器必须先把JSP编译成Servlet类，然后才能运行它。<br />
JSP的生命周期包含以下阶段。</p>

<p>&bull; 解析阶段：Servlet容器解析JSP文件的代码，如果有语法错误，就会向客户端返冋错误信息。</p>

<p>&bull; 翻泽阶段：Servlet容器把JSP文件翮译成Servlet源文件。</p>

<p>&bull; 參编译阶段：Servlet容器编译Servlet源文件，生成Servlet类。</p>

<p>&bull; 初始化阶段：加栽与JSP对应的Servlet类，创建其实例，并调用它的初始化方法。</p>

<p>&bull; 运行时阶段：调用与JSP对应的Servlet实例的服务方法。</p>

<p>&bull; 销毀阶段：调用与JSP对应的Servlet实例的销毁方法，然后销毁Servlet实例。&nbsp;</p>

<p>在JSP的生命周期中，解析、翻译和编译是其特有的阶段，这3个阶段仅发生在以下场合：</p>

<p>&bull;&nbsp;&nbsp; &nbsp;JSP文件被奔户端首次请求访问。</p>

<p>&bull;&nbsp;&nbsp; &nbsp;JSP文件被更新。</p>

<p>&bull;&nbsp;&nbsp; &nbsp;与JSP文件对应的Servlet类的类文件被手工删除。</p>

<p>初始化、运行时和销毁阶段则是JSP和Servlet都具有的阶段。本书第4章的4.3 节（Servlet的生命周期）己经对这3个阶段的特征作了详细介绍。</p>

<p>本章6.1.3节已经讲过，与JSP对应的Servlet类实现了javax.servlet.jsp.JspPage接口，而JspPage 接口则继承自 javax.servlet.Scrvlet 接口。在 JspPage 接口中定义了 jsplnit() 和jspDestroy()方法，它们的作用与Servlet接口的init()和destroy()方法相同。开发人员在编写JSP文件时，可以实现jsplnit() 和jspDestroy()方法，与JSP对应的Servlet类的jspService()方法则是由Servlet容器根据JSP源文件自动生成。</p>
