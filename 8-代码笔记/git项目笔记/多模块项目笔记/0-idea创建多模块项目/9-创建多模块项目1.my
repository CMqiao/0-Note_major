<h1>基于maven使用IDEA创建多模块项目</h1>

<ul>
	<li><a href="http://blog.csdn.net/williamhappy/article/details/54376855#一-项目工程目录" target="">一 项目工程目录</a></li>
	<li><a href="http://blog.csdn.net/williamhappy/article/details/54376855#二-创建父工程" target="">二 创建父工程</a></li>
	<li><a href="http://blog.csdn.net/williamhappy/article/details/54376855#三-创建公共工具类" target="">三 创建公共工具类</a></li>
	<li><a href="http://blog.csdn.net/williamhappy/article/details/54376855#三-创建开发项目" target="">三 创建开发项目</a></li>
	<li><a href="http://blog.csdn.net/williamhappy/article/details/54376855#四-创建开发项目子模块" target="">四 创建开发项目子模块</a></li>
	<li><a href="http://blog.csdn.net/williamhappy/article/details/54376855#五-运行项目" target="">五 运行项目</a></li>
</ul>

<p>鉴于最近学习一个分布式项目的开发，讲一下关于使用IntelliJ IDEA基于Maven创建多模块项目的实际开发，可能有不合适的地方，但是项目是可以跑通的，也请有不足之处，都提出来，一起讨论下。</p>

<h2>一. 项目工程目录</h2>

<p>首先展示一下，最终整个项目的工程目录：</p>

<p><img alt="projectTree" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/projectTree.png" style="height:400px; width:600px" title="" /></p>

<p>简单介绍一下目录结构：&nbsp;<br />
<code>common-parent</code>为所有项目的父项目，主要用来管理所有项目使用的jar包及其版本。&nbsp;<br />
<code>common-utils</code>为公共的工具类项目，继承父项目，它会被打成jar包供其它项目使用。&nbsp;<br />
<code>taotao-manager</code>为我们自己的项目，继承与我们的父项目。&nbsp;<br />
<code>taotao-manager-pojo</code>为我们自己项目的一个子模块，依赖与taotao-manager,打成jar包&nbsp;<br />
<code>taotao-manager-mapper</code>为我们自己项目的一个子模块，依赖与taotao-manager-pojo,打成jar包&nbsp;<br />
<code>taotao-manager-service</code>为我们自己项目的一个子模块，依赖与taotao-manager-mapper,打成jar包&nbsp;<br />
<code>taotao-manager-web</code>为我们自己项目的一个子模块，依赖与taotao-manager-service,打成war包</p>

<h2>二. 创建父工程</h2>

<p>下面为具体操作：&nbsp;<br />
1. 首先打开IntelliJ IDEA，按下面步骤来：&nbsp;<br />
<img alt="createParent1" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createParent1.png" style="height:400px; width:600px" title="" />&nbsp;<br />
或者第一次打开IDEA，&nbsp;<br />
<img alt="createParent2" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createParent2.png" style="width:600px" title="" />&nbsp;<br />
2. 来到创建目录，选择Empty project，next&nbsp;<br />
<img alt="createParent3" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createParent3.png" style="width:600px" title="" />&nbsp;<br />
3. 来到New Project页面，填写project name，选择Project location，点Finish&nbsp;<br />
<img alt="createParent4" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createParent4.png" style="width:600px" title="" />&nbsp;<br />
等待IDEA加载完成，进行下一步&nbsp;<br />
4. 选择File&ndash;&gt;New&ndash;&gt;Module,进入New Module页面：&nbsp;<br />
<img alt="createParent5" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createParent5.png" style="width:600px" title="" />&nbsp;<br />
5. 在New Module页面，按如下步骤操作：&nbsp;<br />
<img alt="createParent6" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createParent6.png" style="width:600px" title="" />&nbsp;<br />
6. 填写组织名称和项目名称，以及版本号&nbsp;<br />
<img alt="createParent7" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createParent7.png" style="width:600px" title="" />&nbsp;<br />
7. 配置本地maven目录及maven仓库配置文件&nbsp;<br />
<img alt="createParent8" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createParent8.png" style="width:600px" title="" />&nbsp;<br />
8. 创建父工程最后一步，给Module取名，及选择工作目录，选择完成&nbsp;<br />
<img alt="createParent9" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createParent9.png" style="width:600px" title="" /></p>

<p>等待生成pom文件，注意修改打包方式为pom，修改pom文件如下：(由于pom文件较长，只给出部分，获取所有，请关注<a href="http://blog.csdn.net/williamhappy/article/details/54376855" target="_blank">github</a>)</p>

<pre>
<code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;cn.william&lt;/groupId&gt;
    &lt;artifactId&gt;common-parent&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;packaging&gt;pom&lt;/packaging&gt;&lt;!--修改打包方式--&gt;

    &lt;name&gt;common-parent&lt;/name&gt;
    &lt;url&gt;http://maven.apache.org&lt;/url&gt;

    &lt;!--集中定义依赖版本号--&gt;
    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
        &lt;junit.version&gt;4.12&lt;/junit.version&gt;
        ...(省略)
    &lt;/properties&gt;

    &lt;dependencyManagement&gt;
        &lt;dependencies&gt;
            &lt;!-- 时间操作组件 --&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;joda-time&lt;/groupId&gt;
                &lt;artifactId&gt;joda-time&lt;/artifactId&gt;
                &lt;version&gt;${joda-time.version}&lt;/version&gt;
            &lt;/dependency&gt;
           ...(省略)
    &lt;/dependencyManagement&gt;

    &lt;build&gt;
        &lt;finalName&gt;${project.artifactId}&lt;/finalName&gt;
        &lt;plugins&gt;
            &lt;!-- 资源文件拷贝插件 --&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;
                &lt;version&gt;2.7&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
            &lt;!-- java编译插件 --&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
                &lt;version&gt;3.5.1&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;source&gt;1.8&lt;/source&gt;
                    &lt;target&gt;1.8&lt;/target&gt;
                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

&lt;/project&gt;
</code></pre>

<h2>三. 创建公共工具类</h2>

<p>首先，公共工具类是继承自父项目common-parent的。&nbsp;<br />
需要注意的一点是一点，为了项目看起来为分模块的形式（类似在eclipse中开发），在创建common-utils中有一步需要注意：&nbsp;<br />
<img alt="createUtils1" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createUtils1.png" style="width:600px" title="" />&nbsp;<br />
<img alt="createUtils2" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createUtils2.png" style="width:600px" title="" />&nbsp;<br />
下一步特别注意，这一步会影响目录结构，&nbsp;<br />
<img alt="createUtils3" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createUtils3.png" style="width:600px" title="" />&nbsp;<br />
<img alt="createUtils4" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createUtils4.png" style="width:600px" title="" />&nbsp;<br />
<img alt="createUtils5" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createUtils5.png" style="width:600px" title="" />&nbsp;<br />
<img alt="createUtils6" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createUtils6.png" style="width:600px" title="" /></p>

<p>同样注意项目的打包方式为jar，和父项目有所不同。</p>

<pre>
<code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;parent&gt;
        &lt;artifactId&gt;common-parent&lt;/artifactId&gt;
        &lt;groupId&gt;cn.william&lt;/groupId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
        &lt;relativePath&gt;../common-parent/pom.xml&lt;/relativePath&gt;
    &lt;/parent&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;artifactId&gt;common-utils&lt;/artifactId&gt;
    &lt;packaging&gt;jar&lt;/packaging&gt;&lt;!-- 打成jar包 --&gt;

    &lt;name&gt;common-utils&lt;/name&gt;
    &lt;url&gt;http://maven.apache.org&lt;/url&gt;

    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;/properties&gt;

    &lt;!-- jar包的依赖 --&gt;
    &lt;dependencies&gt;
        &lt;!-- 时间操作组件 --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;joda-time&lt;/groupId&gt;
            &lt;artifactId&gt;joda-time&lt;/artifactId&gt;
        &lt;/dependency&gt;
        ...(省略)
    &lt;/dependencies&gt;

&lt;/project&gt;
</code></pre>

<h2>三. 创建开发项目</h2>

<p>创建开发项目taotao-manager，其创建步骤同上，同样是继承common-parent,同样修改其pom文件，详细如下：</p>

<pre>
<code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;parent&gt;
        &lt;artifactId&gt;common-parent&lt;/artifactId&gt;
        &lt;groupId&gt;cn.william&lt;/groupId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
        &lt;relativePath&gt;../common-parent/pom.xml&lt;/relativePath&gt;
    &lt;/parent&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;artifactId&gt;taotao-manager&lt;/artifactId&gt;
    &lt;packaging&gt;pom&lt;/packaging&gt;

    &lt;name&gt;taotao-manager&lt;/name&gt;
    &lt;url&gt;http://maven.apache.org&lt;/url&gt;
    &lt;modules&gt;
        &lt;module&gt;taotao-manager-pojo&lt;/module&gt;
        &lt;module&gt;taotao-manager-mapper&lt;/module&gt;
        &lt;module&gt;taotao-manager-service&lt;/module&gt;
        &lt;module&gt;taotao-manager-web&lt;/module&gt;
    &lt;/modules&gt;

    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;/properties&gt;

    &lt;!-- 依赖管理 --&gt;
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;cn.william&lt;/groupId&gt;
            &lt;artifactId&gt;common-utils&lt;/artifactId&gt;
            &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;!-- 配置插件 --&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;
                &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;
                &lt;configuration&gt;
                    &lt;port&gt;8080&lt;/port&gt;
                    &lt;path&gt;/&lt;/path&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;


&lt;/project&gt;
</code></pre>

<h2>四. 创建开发项目子模块</h2>

<p>创建taotao-manager-pojo，mapper，service，web等子模块，详细如下：</p>

<ol>
	<li>
	<p>右键点击taotao-manager，选择New，Module，&nbsp;<br />
	<img alt="createSon1" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createSon1.png" style="width:600px" title="" />&nbsp;<br />
	<img alt="createSon2" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createSon2.png" style="width:600px" title="" />&nbsp;<br />
	这一步注意，与创建common-utils时不同，是将其子模块添加到taotao-manager目录下的：&nbsp;<br />
	<img alt="createSon3" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createSon3.png" style="width:600px" title="" />&nbsp;<br />
	maven的相关配置，保持默认：&nbsp;<br />
	<img alt="createSon4" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createSon4.png" style="width:600px" title="" />&nbsp;<br />
	注意子模块所在目录就好：&nbsp;<br />
	<img alt="createSon5" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createSon5.png" style="width:600px" title="" /></p>
	</li>
	<li>
	<p>创建taotao-manager下其它子模块&nbsp;<br />
	上面说的时创建taotao-manager-pojo子模块，另外三个子模块的创建方式与其类似，有一点不同时，在创建taotao-manager-web子模块时，maven项目的类型选择如下：&nbsp;<br />
	<img alt="createSon6" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createSon6.png" style="width:600px" title="" /></p>
	</li>
	<li>
	<p>修改子模块的pom文件</p>
	</li>
</ol>

<p>子模块pojo，mapper，service的打包方式全为jar，只有web子模块打包为war包。</p>

<p>pojo子模块，pom.xml详细如下：</p>

<pre>
<code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;parent&gt;
        &lt;artifactId&gt;taotao-manager&lt;/artifactId&gt;
        &lt;groupId&gt;cn.william&lt;/groupId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;/parent&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;artifactId&gt;taotao-manager-pojo&lt;/artifactId&gt;
    &lt;packaging&gt;jar&lt;/packaging&gt;

    &lt;name&gt;taotao-manager-pojo&lt;/name&gt;
    &lt;url&gt;http://maven.apache.org&lt;/url&gt;

    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;/properties&gt;

&lt;/project&gt;
</code></pre>

<p>mapper子模块依赖与pojo子模块，pom.xml详细如下：</p>

<pre>
<code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;parent&gt;
        &lt;artifactId&gt;taotao-manager&lt;/artifactId&gt;
        &lt;groupId&gt;cn.william&lt;/groupId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;/parent&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;artifactId&gt;taotao-manager-mapper&lt;/artifactId&gt;
    &lt;packaging&gt;jar&lt;/packaging&gt;

    &lt;name&gt;taotao-manager-mapper&lt;/name&gt;
    &lt;url&gt;http://maven.apache.org&lt;/url&gt;

    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;
        &lt;!-- 依赖与pojo子模块 --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;cn.william&lt;/groupId&gt;
            &lt;artifactId&gt;taotao-manager-pojo&lt;/artifactId&gt;
            &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;!-- Mybatis --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;
            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;
            &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.github.miemiedev&lt;/groupId&gt;
            &lt;artifactId&gt;mybatis-paginator&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;
            &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;!-- MySql --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;mysql&lt;/groupId&gt;
            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;!-- 连接池 --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;
            &lt;artifactId&gt;druid&lt;/artifactId&gt;
        &lt;/dependency&gt;

    &lt;/dependencies&gt;
&lt;/project&gt;
</code></pre>

<p>service子模块依赖与mapper子模块，pom.xml详细如下：</p>

<pre>
<code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;parent&gt;
        &lt;artifactId&gt;taotao-manager&lt;/artifactId&gt;
        &lt;groupId&gt;cn.william&lt;/groupId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;/parent&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;artifactId&gt;taotao-manager-service&lt;/artifactId&gt;
    &lt;packaging&gt;jar&lt;/packaging&gt;

    &lt;name&gt;taotao-manager-service&lt;/name&gt;
    &lt;url&gt;http://maven.apache.org&lt;/url&gt;

    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;
        &lt;!-- 依赖与mapper子模块 --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;cn.william&lt;/groupId&gt;
            &lt;artifactId&gt;taotao-manager-mapper&lt;/artifactId&gt;
            &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;!-- Spring --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-context&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;
        &lt;/dependency&gt;
        ...（省略）
    &lt;/dependencies&gt;
&lt;/project&gt;
</code></pre>

<p>web子模块依赖与service子模块，pom.xml详细如下：</p>

<pre>
<code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
    &lt;parent&gt;
        &lt;artifactId&gt;taotao-manager&lt;/artifactId&gt;
        &lt;groupId&gt;cn.william&lt;/groupId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;/parent&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;artifactId&gt;taotao-manager-web&lt;/artifactId&gt;
    &lt;packaging&gt;war&lt;/packaging&gt;&lt;!--打成war包--&gt;
    &lt;name&gt;taotao-manager-web Maven Webapp&lt;/name&gt;
    &lt;url&gt;http://maven.apache.org&lt;/url&gt;
    &lt;dependencies&gt;
        &lt;!-- 依赖于service --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;cn.william&lt;/groupId&gt;
            &lt;artifactId&gt;taotao-manager-service&lt;/artifactId&gt;
            &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
        &lt;/dependency&gt;
        ...（省略）
    &lt;/dependencies&gt;
    &lt;build&gt;
        &lt;finalName&gt;taotao-manager-web&lt;/finalName&gt;
    &lt;/build&gt;
&lt;/project&gt;
</code></pre>

<blockquote>
<p>于上面省略的部分，可查看github完整项目，地址：</p>
</blockquote>

<h2>五. 运行项目</h2>

<ol>
	<li>
	<p>创建index.jsp&nbsp;<br />
	至此，项目创建已经完成，我们可以在taotao-manager-web的webapp目录下创建index.jsp,详情如下：&nbsp;<br />
	<img alt="createIndex" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/createIndex.png" style="width:600px" title="" /></p>
	</li>
	<li>
	<p>使用tomcat插件&nbsp;<br />
	我们使用maven的tomcat插件来运行项目，在此之前，确保在taotao-manager的pom文件中配置了tomcat的插件：</p>
	</li>
</ol>

<pre>
<code>...（省略）
&lt;build&gt;
    &lt;!-- 配置插件 --&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;
            &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
                &lt;port&gt;8080&lt;/port&gt;
                &lt;path&gt;/&lt;/path&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
...（省略）</code></pre>

<p>配置Maven Tomcat Plugin运行web项目</p>

<p>（1） 添加新配置&nbsp;<br />
<img alt="mavenTomcatPlugin" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/mavenTomcatPlugin.png" style="width:600px" title="" /></p>

<p><img alt="addPlugin" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/addPlugin.png" style="width:600px" title="" /></p>

<p>（2） 点击运行，或者点击旁边的debug&nbsp;<br />
<img alt="tomcatRun" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/tomcatRun.png" style="width:600px" title="" /></p>

<p>（3） 出项错误&nbsp;<br />
出现错误，可能是common-parent和common-utils没有安装到本地仓库，出现的错误是找不到common-utils的jar包，那就需要我们安装一下。&nbsp;<br />
<img alt="mavenInstall" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/mavenInstall.png" style="width:600px" title="" /></p>

<p>等待将jar包安装到本地仓库，稍微有点慢可能，耐心等。。。</p>

<p>安装完成之后，再次运行，出现下面的信息，证明运行成功：&nbsp;<br />
<img alt="runSuccess" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/runSuccess.png" style="width:600px" title="" /></p>

<p>通过浏览器访问：&nbsp;<br />
<img alt="browserSuccess" src="https://raw.githubusercontent.com/williamHappy/FileRepo/master/hexo/20170106/Java007/img/browserSuccess.png" style="width:600px" title="" /></p>

<p>至此，我们的项目环境搭建成功，接下来就是实际的项目开发了。</p>

<blockquote>
<p>声明：&nbsp;<br />
① 关于上面代码中出现的省略的部分，是由于内容偏长，所以省略，想要查看完成项目，请查看本人的github，地址：&nbsp;<br />
② 关于上面有任何不足之处，敬请各位谅解，毕竟本人技术有限，也在学习阶段，也可以给出合理意见，共同改进。&nbsp;<br />
③ 黑黑，喜欢的，加个关注白，哈哈哈</p>
</blockquote>
