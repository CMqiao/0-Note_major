<h1>Spring MVC 多个视图解析器配置</h1>

<h2><strong>背景:</strong></h2>

<p>在web开发中，我们在前端通常使用视图来展示我的数据模型，常用的视图有JSP、XML、JSON、velocity、FreeMarker等。在Spring MVC应用程序中，常用的视图解析器有InternalResourceViewResolver、ResourceBundleViewResolver和XmlViewResolver等。</p>

<h2><strong>问题一:</strong></h2>

<p><strong>那么，在程序中怎么配置JSP、XML、JSON、velocity、FreeMarker他们的解析器呢？</strong></p>

<h2><strong>解决方法:</strong></h2>

<pre>
<code>&lt;!-- jsp视图解析器 --&gt;  
&lt;!-- &lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot; p:prefix=&quot;/jsp/&quot; p:suffix=&quot;.jsp&quot; /&gt; --&gt;
&lt;bean id=&quot;jspViewResolver&quot; class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;  
    &lt;property name=&quot;viewClass&quot; value=&quot;org.springframework.web.servlet.view.JstlView&quot;/&gt;  
    &lt;property name=&quot;prefix&quot; value=&quot;/jsp/&quot;/&gt;  
    &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;/&gt;  
&lt;/bean&gt;          

&lt;!-- velocity视图解析器 --&gt;  
&lt;bean id=&quot;velocityViewResolver&quot; class=&quot;org.springframework.web.servlet.view.velocity.VelocityViewResolver&quot;&gt;  
    &lt;property name=&quot;cache&quot; value=&quot;true&quot;/&gt;  
    &lt;property name=&quot;prefix&quot; value=&quot;/velocity/&quot;/&gt;  
    &lt;property name=&quot;suffix&quot; value=&quot;.vm&quot;/&gt;  
&lt;/bean&gt;  

&lt;!-- velocity环境配置 --&gt;  
&lt;bean id=&quot;velocityConfig&quot; class=&quot;org.springframework.web.servlet.view.velocity.VelocityConfigurer&quot;&gt;  
    &lt;!-- velocity配置文件路径 --&gt;  
    &lt;property name=&quot;configLocation&quot; value=&quot;/WEB-INF/velocity.properties&quot;/&gt;  
    &lt;!-- velocity模板路径 --&gt;  
    &lt;property name=&quot;resourceLoaderPath&quot; value=&quot;/WEB-INF/velocity/&quot;/&gt;  
&lt;/bean&gt;  

&lt;!-- FreeMarker环境配置 --&gt;  
&lt;bean id=&quot;freemarkerConfig&quot; class=&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer&quot;&gt;  
    &lt;!-- freemarker模板位置 --&gt;  
    &lt;property name=&quot;templateLoaderPath&quot; value=&quot;/WEB-INF/freemarker/&quot;/&gt;  
&lt;/bean&gt;  

&lt;!-- FreeMarker视图解析 --&gt;  
&lt;bean id=&quot;freeMarkerViewResolver&quot; class=&quot;org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver&quot;&gt;  
    &lt;property name=&quot;cache&quot; value=&quot;true&quot;/&gt;  
    &lt;property name=&quot;prefix&quot; value=&quot;/freemaker/&quot;/&gt;  
    &lt;property name=&quot;suffix&quot; value=&quot;.ftl&quot;/&gt;  
&lt;/bean&gt;  

&lt;!-- Json视图解析 --&gt;  
&lt;bean name=&quot;jsonView&quot; class=&quot;org.springframework.web.servlet.view.json.MappingJacksonJsonView&quot;&gt;
    &lt;property name=&quot;encoding&quot;&gt;
        &lt;value type=&quot;org.codehaus.jackson.JsonEncoding&quot;&gt;UTF8&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name=&quot;extractValueFromSingleKeyModel&quot; value=&quot;true&quot;&gt;&lt;/property&gt;
    &lt;property name=&quot;contentType&quot; value=&quot;application/json;charset=UTF-8&quot; /&gt;
&lt;/bean&gt;

&lt;!-- xml jaxb视图解析 --&gt;  
&lt;bean id=&quot;xmlViewer&quot; class=&quot;org.springframework.web.servlet.view.xml.MarshallingView&quot;&gt;
    &lt;constructor-arg&gt;
      &lt;bean class=&quot;org.springframework.oxm.jaxb.Jaxb2Marshaller&quot;&gt;
        &lt;property name=&quot;classesToBeBound&quot;&gt;
            &lt;list&gt;
            &lt;/list&gt;
        &lt;/property&gt;
      &lt;/bean&gt;
    &lt;/constructor-arg&gt;
    &lt;property name=&quot;contentType&quot; value=&quot;application/xml;charset=UTF-8&quot; /&gt;
&lt;/bean&gt;

&lt;!-- xml Xstream视图解析 --&gt;  
&lt;bean id=&quot;xmlViewer&quot; class=&quot;org.springframework.web.servlet.view.xml.MarshallingView&quot;&gt;
    &lt;property name=&quot;xStreamMarshaller&quot;&gt;
        &lt;bean class=&quot;org.springframework.oxm.xstream.XStreamMarshaller&quot;&gt;
        &lt;!-- 启用annotation --&gt;
        &lt;property name=&quot;autodetectAnnotations&quot; value=&quot;true&quot; /&gt;
        &lt;!-- 支持在dto列表 --&gt;
        &lt;property name=&quot;supportedClasses&quot;&gt;&lt;array&gt;&lt;/array&gt;&lt;/property&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;!-- 文件上传 --&gt;
&lt;bean id=&quot;multipartResolver&quot; class=&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;&gt;
    &lt;!--1024**1024*5即5M--&gt;
    &lt;property name=&quot;maxUploadSize&quot; value=&quot;5242880&quot;/&gt;
&lt;/bean&gt;
</code></pre>

<h2><strong>问题二:</strong></h2>

<p><strong>如果想用多个视图解析器，那么又怎么配置呢？</strong></p>

<h2><strong>解决方法一:</strong></h2>

<p>在问题一解决方法的配置中，通过&ldquo;order&rdquo;属性来声明优先级，order值越低，则优先级越高。例如：</p>

<pre>
<code>&lt;bean class=&quot;org.springframework.web.servlet.view.ResourceBundleViewResolver&quot;&gt;
    &lt;property name=&quot;basename&quot;&gt;
        &lt;value&gt;spring-views&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name=&quot;order&quot; value=&quot;0&quot; /&gt;
&lt;/bean&gt;

&lt;bean class=&quot;org.springframework.web.servlet.view.XmlViewResolver&quot;&gt;
    &lt;property name=&quot;location&quot;&gt;
        &lt;value&gt;/WEB-INF/spring-views.xml&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name=&quot;order&quot; value=&quot;1&quot; /&gt;
&lt;/bean&gt;

&lt;bean id=&quot;viewResolver&quot;
      class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot; &gt;
    &lt;property name=&quot;prefix&quot;&gt;
        &lt;value&gt;/WEB-INF/pages/&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name=&quot;suffix&quot;&gt;
        &lt;value&gt;.jsp&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name=&quot;order&quot; value=&quot;2&quot; /&gt;
&lt;/bean&gt;</code></pre>

<p><strong>注意：InternalResourceViewResolver必须总是赋予最低的优先级（最大的order值），因为不管返回什么视图名称，它都将解析视图。如果它的优先级高于其它解析器的优先级的话，它将使得其它具有较低优先级的解析器没有机会解析视图。</strong></p>

<p><strong>解决方法二：</strong>&nbsp;使用org.springframework.web.servlet.view.ContentNegotiatingViewResolver进行配置，如下：</p>

<pre>
<code> &lt;!-- 多视图解析 .json .xml --&gt;
&lt;bean class=&quot;org.springframework.web.servlet.view.ContentNegotiatingViewResolver&quot;&gt;
    &lt;property name=&quot;order&quot; value=&quot;1&quot; /&gt;
    &lt;!-- 用于开启 /userinfo/123?format=json 的支持 默认是true --&gt;
    &lt;property name=&quot;favorParameter&quot; value=&quot;false&quot; /&gt;
    &lt;!-- 用于关闭 /userinfo/123.json 的支持 默认是true --&gt;
    &lt;property name=&quot;favorPathExtension&quot; value=&quot;true&quot; /&gt;
    &lt;!-- 设置为true以忽略对Accept Header的支持 --&gt;
    &lt;property name=&quot;ignoreAcceptHeader&quot; value=&quot;true&quot; /&gt;
    &lt;!-- 在没有扩展名时即: &quot;/user/1&quot; 时的默认展现形式 --&gt;
    &lt;property name=&quot;defaultContentType&quot; value=&quot;text/html&quot; /&gt;
    &lt;!-- 扩展名至mimeType的映射,即 /user.json =&gt; application/json --&gt;
    &lt;property name=&quot;mediaTypes&quot;&gt;
        &lt;map&gt;
            &lt;entry key=&quot;json&quot; value=&quot;application/json&quot; /&gt;
            &lt;entry key=&quot;xml&quot; value=&quot;application/xml&quot; /&gt;
        &lt;/map&gt;
    &lt;/property&gt;
    &lt;property name=&quot;defaultViews&quot;&gt;
        &lt;list&gt;
          &lt;ref bean=&quot;jsonView&quot; /&gt;
          &lt;ref bean=&quot;xmlViewer&quot; /&gt;
        &lt;/list&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;!-- json 视图 --&gt;
&lt;bean name=&quot;jsonView&quot; class=&quot;org.springframework.web.servlet.view.json.MappingJacksonJsonView&quot;&gt;
    &lt;property name=&quot;encoding&quot;&gt;
        &lt;value type=&quot;org.codehaus.jackson.JsonEncoding&quot;&gt;UTF8&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name=&quot;extractValueFromSingleKeyModel&quot; value=&quot;true&quot;&gt;&lt;/property&gt;
    &lt;property name=&quot;contentType&quot; value=&quot;application/json;charset=UTF-8&quot; /&gt;
&lt;/bean&gt;

&lt;!-- xml 视图 --&gt;
&lt;bean id=&quot;xmlViewer&quot; class=&quot;org.springframework.web.servlet.view.xml.MarshallingView&quot;&gt;
    &lt;constructor-arg&gt;
      &lt;bean class=&quot;org.springframework.oxm.jaxb.Jaxb2Marshaller&quot;&gt;
        &lt;property name=&quot;classesToBeBound&quot;&gt;
            &lt;list&gt;
            &lt;/list&gt;
        &lt;/property&gt;
      &lt;/bean&gt;
    &lt;/constructor-arg&gt;
    &lt;property name=&quot;contentType&quot; value=&quot;application/xml;charset=UTF-8&quot; /&gt;
&lt;/bean&gt;</code></pre>
