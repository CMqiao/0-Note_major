<h1>js相关资料收集</h1>

<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects">JavaScript 标准库</a></p>

<p><a href="http://es6.ruanyifeng.com/#README">阮一峰学习博客</a></p>

<p><a href="https://www.cnblogs.com/wangfupeng1988/p/3977924.html" id="cb_post_title_url">深入理解javascript原型和闭包（完结）</a></p>

<p>&nbsp;</p>

<p>ES5解决异步嵌套：async模块&nbsp;<br />
<a href="https://caolan.github.io/async/docs.html#eachOfSeries" target="_blank">https://caolan.github.io/async/docs.html#eachOfSeries</a>&nbsp;</p>

<p>ES6/7解决异步嵌套：async funtion+await+promise&nbsp;<br />
Promise库-bluebird:&nbsp;<a href="http://bluebirdjs.com/docs/why-performance.html" target="_blank">http://bluebirdjs.com/docs/why-performance.html</a>&nbsp;<br />
2 koa框架入门&nbsp;<br />
<a href="http://www.jianshu.com/p/6b816c609669" target="_blank">http://www.jianshu.com/p/6b816c609669</a>&nbsp;<br />
<a href="https://github.com/ChenShenhai/koa2-note/" target="_blank">https://github.com/ChenShenhai/koa2-note/</a>&nbsp;<br />
<a href="https://koa.bootcss.com/" target="_blank">https://koa.bootcss.com/</a>&nbsp;<br />
3 balel关于新语法项目在旧解释器上的支持&nbsp;<br />
ES6项目在ES5解释器（低版本的node环境）&nbsp;<br />
<a href="https://babeljs.io/" target="_blank">https://babeljs.io/</a>&nbsp;<br />
<a href="http://www.ruanyifeng.com/blog/2016/01/babel.html" target="_blank">http://www.ruanyifeng.com/blog/2016/01/babel.html</a></p>

<p>4 nodejs介绍&nbsp;<br />
<a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank">https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000</a>&nbsp;廖雪峰&nbsp;<br />
nodejs深入钱出&nbsp;<br />
5 web框架&nbsp;<br />
express&nbsp;<a href="http://www.expressjs.com.cn/" target="_blank">http://www.expressjs.com.cn/</a>&nbsp;<br />
koa&nbsp;<a href="https://koa.bootcss.com/" target="_blank">https://koa.bootcss.com/</a>&nbsp;<br />
<a href="http://koajs.com/" target="_blank">http://koajs.com/</a>&nbsp;<br />
egg&nbsp;<a href="http://eggjs.org/zh-cn/advanced/loader.html" target="_blank">http://eggjs.org/zh-cn/advanced/loader.html</a>&nbsp;<br />
6 大文件上传&nbsp;<br />
<a href="http://fex.baidu.com/webuploader/download.html" target="_blank">http://fex.baidu.com/webuploader/download.html</a>&nbsp;百度的一个上传插件&nbsp;<br />
<a href="http://blog.csdn.net/xiazhiqiang01/article/details/52677484" target="_blank">http://blog.csdn.net/xiazhiqiang01/article/details/52677484</a>&nbsp;介绍如何使用</p>

<p>7 mongoose使用&nbsp;<br />
<a href="http://www.nodeclass.com/api/mongoose.html" target="_blank">http://www.nodeclass.com/api/mongoose.html</a></p>

<p>8 node进程管理/运维&nbsp;<br />
PM2&amp;forever介绍：<a href="http://blog.csdn.net/shmnh/article/details/43075189" target="_blank">http://blog.csdn.net/shmnh/article/details/43075189</a></p>

<p>9 WRK处理HTTP基准测试/压力测试&nbsp;<br />
<a href="https://www.cnblogs.com/rainy-shurun/p/5867946.html" target="_blank">https://www.cnblogs.com/rainy-shurun/p/5867946.html</a>&nbsp;介绍&nbsp;<br />
GitHub ：<a href="https://github.com/wg/wrk" target="_blank">https://github.com/wg/wrk</a>&nbsp;<br />
Ubuntu下upstart ：<a href="http://blog.chinaunix.net/uid-20672559-id-3431895.html" target="_blank">http://blog.chinaunix.net/uid-20672559-id-3431895.html</a>&nbsp;Linux服务器进程管理工具</p>

<p>10 restful-api:&nbsp;<br />
翻译过来是&rdquo;表现层状态转化&rdquo;，面向资源是REST最明显的特征，对于同一个资源的一组不同的操作。资源是服务器上一个可命名的抽象概念，资源是以名词为核心来组织的，首先关注的是名词。REST要求，必须通过统一的接口来对资源执行各种操作。对于每个资源只能执行一组有限的操作。（7个HTTP方法：GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS）</p>

<p>参考：&nbsp;<br />
<a href="http://blog.csdn.net/wangyanchao000/article/details/55047806" target="_blank">http://blog.csdn.net/wangyanchao000/article/details/55047806</a>&nbsp;restful理解&nbsp;<br />
<a href="http://www.infoq.com/cn/articles/understanding-restful-style/" target="_blank">http://www.infoq.com/cn/articles/understanding-restful-style/</a>&nbsp;深入架构层面</p>

<p>11 JavaScript排序算法实现&nbsp;<br />
<a href="https://www.cnblogs.com/beli/p/6297741.html" target="_blank">https://www.cnblogs.com/beli/p/6297741.html</a></p>
