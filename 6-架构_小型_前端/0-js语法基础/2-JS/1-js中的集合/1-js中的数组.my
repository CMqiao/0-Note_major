<h1>js中数组</h1>

<h2>基本用法</h2>

<h3>初始化数组</h3>

<p>var mycars = new Array()<br />
// 或者 var mycars = []<br />
mycars[0] = &quot;Saab&quot;<br />
mycars[1] = &quot;Volvo&quot;<br />
mycars[2] = &quot;BMW&quot;</p>

<h3>遍历数组</h3>

<p>for (i=0;i&lt;mycars.length;i++)<br />
{<br />
&nbsp; &nbsp; document.write(mycars[i] + &quot;&lt;br /&gt;&quot;)<br />
}</p>

<p>for (x in mycars)<br />
{<br />
&nbsp; &nbsp; document.write(mycars[x] + &quot;&lt;br /&gt;&quot;)<br />
}</p>

<h3>合并数组</h3>

<p>var arr2 = new Array(3)<br />
arr2[0] = &quot;James&quot;<br />
arr2[1] = &quot;Adrew&quot;<br />
arr2[2] = &quot;Martin&quot;</p>

<p>document.write(arr.concat(arr2))</p>

<h3>join数组</h3>

<p>alert(arr.join());</p>

<p>alert(arr.join(&quot;.&quot;));</p>

<h3>数组排序</h3>

<p>alert(arr.sort()) 可以是文字的也可以是数字的。</p>

<p>&nbsp;</p>

<h2>var arr=new Array()和 var arr=[] 的区别</h2>

<p>new关键字的使用</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 除了在需要实例化一个对象，或罕见的需要延时加载数据的情况外，你基本上不需要使用new关键字。在Javascript里分配大量的new变量地址是一项很慢的操作，为了效率起见，你应该始终使用对象符号。</p>

<p>new&nbsp;Array()&nbsp;会实例化一个对象变量，而var&nbsp;arr=[],等于是直接声明一个变量。很明显实例一个对象对性能的损耗比直接声明一个对象来的大些</p>

<p>&nbsp;</p>

<h2>JavaScript Array 对象</h2>

<h3>Array 对象</h3>

<p>Array 对象用于在单个的变量中存储多个值。</p>

<h3>创建 Array 对象的语法：</h3>

<pre>
new Array();
new Array(<em>size</em>);
new Array(<em>element0</em>, <em>element1</em>, ..., <em>elementn</em>);
</pre>

<h3>参数</h3>

<p>参数&nbsp;<em>size</em>&nbsp;是期望的数组元素个数。返回的数组，length 字段将被设为&nbsp;<em>size</em>&nbsp;的值。</p>

<p>参数&nbsp;<em>element</em>&nbsp;...,&nbsp;<em>elementn</em>&nbsp;是参数列表。当使用这些参数来调用构造函数 Array() 时，新创建的数组的元素就会被初始化为这些值。它的 length 字段也会被设置为参数的个数。</p>

<h3>返回值</h3>

<p>返回新创建并被初始化了的数组。</p>

<p>如果调用构造函数 Array() 时没有使用参数，那么返回的数组为空，length 字段为 0。</p>

<p>当调用构造函数时只传递给它一个数字参数，该构造函数将返回具有指定个数、元素为 undefined 的数组。</p>

<p>当其他参数调用 Array() 时，该构造函数将用参数指定的值初始化数组。</p>

<p>当把构造函数作为函数调用，不使用 new 运算符时，它的行为与使用 new 运算符调用它时的行为完全一样。</p>

<h2>Array 对象属性</h2>

<table>
	<tbody>
		<tr>
			<th>属性</th>
			<th>描述</th>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_constructor_array.asp">constructor</a></td>
			<td>返回对创建此对象的数组函数的引用。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_length_array.asp">length</a></td>
			<td>设置或返回数组中元素的数目。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_prototype_array.asp">prototype</a></td>
			<td>使您有能力向对象添加属性和方法。</td>
		</tr>
	</tbody>
</table>

<h2>Array 对象方法</h2>

<table>
	<tbody>
		<tr>
			<th>方法</th>
			<th>描述</th>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_concat_array.asp">concat()</a></td>
			<td>连接两个或更多的数组，并返回结果。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_join.asp">join()</a></td>
			<td>把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_pop.asp">pop()</a></td>
			<td>删除并返回数组的最后一个元素</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_push.asp">push()</a></td>
			<td>向数组的末尾添加一个或更多元素，并返回新的长度。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_reverse.asp">reverse()</a></td>
			<td>颠倒数组中元素的顺序。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_shift.asp">shift()</a></td>
			<td>删除并返回数组的第一个元素</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_slice_array.asp">slice()</a></td>
			<td>从某个已有的数组返回选定的元素</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_sort.asp">sort()</a></td>
			<td>对数组的元素进行排序</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_splice.asp">splice()</a></td>
			<td>删除元素，并向数组添加新元素。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_tosource_array.asp">toSource()</a></td>
			<td>返回该对象的源代码。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_toString_array.asp">toString()</a></td>
			<td>把数组转换为字符串，并返回结果。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_toLocaleString_array.asp">toLocaleString()</a></td>
			<td>把数组转换为本地数组，并返回结果。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_unshift.asp">unshift()</a></td>
			<td>向数组的开头添加一个或更多元素，并返回新的长度。</td>
		</tr>
		<tr>
			<td><a href="http://www.w3school.com.cn/jsref/jsref_valueof_array.asp">valueOf()</a></td>
			<td>返回数组对象的原始值</td>
		</tr>
	</tbody>
</table>
