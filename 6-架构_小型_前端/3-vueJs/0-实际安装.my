<h1>vueJs安装使用</h1>

<p><a href="https://router.vuejs.org/zh-cn/essentials/named-routes.html">中文手册</a></p>

<p><a href="https://github.com/vuejs">github网站</a></p>

<p><a href="https://github.com/vuejs/awesome-vue">awesome-vue</a></p>

<h2>基础环境安装</h2>

<p><strong>npm install -g cnpm --registry=http://registry.npm.taobao.org</strong></p>

<p><strong>cnpm install -g vue</strong></p>

<p><strong>cnpm install -g vue-cli</strong></p>

<h2>第一个示例项目安装与运行</h2>

<h3><strong>初始化项目</strong></h3>

<p><strong>vue init webpack firstApp</strong> 初始化项目</p>

<p>首先我们要选择存放项目的位置，然后再用命令行将目录转到选定的目录，在这里，我选择在c盘下创建新的目录（NodeTest 目录），用cd 将目录切到该目录下，如下图：</p>

<p>在NodeTest 目录下，在命令行中运行命令&nbsp;vue init webpack firstApp&nbsp;。解释一下这个命令，这个命令的意思是初始化一个项目，其中webpack是构建工具，也就是整个项目是基于webpack的。其中firstApp是整个项目文件夹的名称，这个文件夹会自动生成在你指定的目录中（我的实例中，会在NodeTest 目录生成该文件夹），如下图。</p>

<p>运行初始化命令的时候会让用户输入几个基本的配置选项，如项目名称、项目描述、作者信息，对于有些不明白或者不想填的信息可以一直按回车去填写就好了，等待一会，就会显示创建项目创建成功，如下图:</p>

<p>接下来，我们去NoteTest目录下去看是否已创建文件：</p>

<p>打开firstApp 项目，项目中的目录如下：</p>

<p>&nbsp; &nbsp; 介绍一下目录及其作用：</p>

<p>&nbsp; &nbsp; &nbsp;build：最终发布的代码的存放位置。</p>

<p>&nbsp; &nbsp; &nbsp;config：配置路径、端口号等一些信息，我们刚开始学习的时候选择默认配置。</p>

<p>&nbsp; &nbsp; &nbsp;node_modules：npm 加载的项目依赖模块。</p>

<p>&nbsp; &nbsp; &nbsp;src：这里是我们开发的主要目录，基本上要做的事情都在这个目录里面，里面包含了几个目录及文件：</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;assets:放置一些图片，如logo等</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;components:目录里放的是一个组件文件，可以不用。</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;App.vue：项目入口文件，我们也可以将组件写这里，而不使用components目录。</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main.js ：项目的核心文件</p>

<p>&nbsp; &nbsp; &nbsp;static：静态资源目录，如图片、字体等。</p>

<p>&nbsp; &nbsp; &nbsp;test：初始测试目录，可删除</p>

<p>&nbsp; &nbsp; &nbsp; .XXXX文件：配置文件。</p>

<p>&nbsp; &nbsp; &nbsp;index.html：首页入口文件，可以添加一些meta信息或者同统计代码啥的。</p>

<p>&nbsp; &nbsp; &nbsp;package.json：项目配置文件。</p>

<p>&nbsp; &nbsp; &nbsp;README.md：项目的说明文件。</p>

<p>&nbsp;</p>

<p>&nbsp; &nbsp; 这就是整个项目的目录结构，其中，我们主要在src目录中做修改。这个项目现在还只是一个结构框架，整个项目需要的依赖资源都还没有安装。</p>

<p>&nbsp; &nbsp; 安装项目所需要的依赖：执行 cnpm install &nbsp; (这里可以用cnpm代替npm了)</p>

<p>&nbsp; &nbsp;&nbsp;安装完成之后，我们到自己的项目中去看，会多一个node_modules文件夹，这里面就是我们所需要的依赖包资源。</p>

<p>&nbsp; &nbsp;&nbsp;安装完依赖包资源后，我们就可以运行整个项目了。</p>

<h3><strong>运行项目</strong></h3>

<p><strong>初始化项目之后，会有提示</strong></p>

<blockquote>
<p># Project initialization finished!<br />
# ========================</p>

<p>To get started:</p>

<p>&nbsp; cd <strong>firstApp</strong><br />
&nbsp; npm run dev</p>

<p>Documentation can be found at https://vuejs-templates.github.io/webpack</p>
</blockquote>

<p><strong>cnpm install (有时需要，有时不需要)</strong></p>

<p>安装项目所需要的依赖：执行 cnpm install &nbsp; (这里可以用cnpm代替npm了)</p>

<p>安装完成之后，我们到自己的项目中去看，会多一个node_modules文件夹，这里面就是我们所需要的依赖包资源。</p>

<p>安装完依赖包资源后，我们就可以运行整个项目了。</p>

<p><strong>npm run dev&nbsp;</strong></p>

<p>在项目目录中，运行命令&nbsp;npm run dev&nbsp;，会用热加载的方式运行我们的应用，热加载可以让我们在修改完代码后不用手动刷新浏览器就能实时看到修改后的效果。</p>

<p>项目启动后，在浏览器中输入项目启动后的地址：</p>

<p>在浏览器中会出现vue的logo：</p>

<p>至此，vue的三种安装方式已介绍完毕。</p>
