<h1>公共路径(Public Path)</h1>

<p>webpack 提供一个非常有用的配置，该配置能帮助你为项目中的所有资源指定一个基础路径。它被称为<code>公共路径(publicPath)</code>。</p>

<h2>示例</h2>

<p>这里提供一些示例，在实际应用中，这些示例的特性在实现的同时，还能保持高度整洁。</p>

<h3>在构建项目时设置路径值</h3>

<p>在开发模式中，我们通常有一个&nbsp;<code>assets/</code>&nbsp;文件夹，它往往存放在和首页一个级别的目录下。这样是挺方便；但是如果在生产环境下，你想把这些静态文件统一使用CDN加载，那该怎么办？</p>

<p>想要解决这个问题，你可以使用有着悠久历史的环境变量。比如说，我们设置了一个名为&nbsp;<code>ASSET_PATH</code>&nbsp;的变量：</p>

<pre>
<code>import webpack from &#39;webpack&#39;;

// 如果预先定义过环境变量，就将其赋值给`ASSET_PATH`变量，否则赋值为根目录
const ASSET_PATH = process.env.ASSET_PATH || &#39;/&#39;;

export default {
  output: {
    publicPath: ASSET_PATH
  },

  plugins: [
    // 该插件帮助我们安心地使用环境变量
    new webpack.DefinePlugin({
      &#39;process.env.ASSET_PATH&#39;: JSON.stringify(ASSET_PATH)
    })
  ]
};
</code></pre>

<h3>即时设定路径值</h3>

<p>另一个可能出现的情况是，我们需要即时设置公共路径。webpack 提供一个全局变量供你设置，它名叫&nbsp;<code>__webpack_public_path__</code>。所以在你的项目入口，你可以简单地设置如下：</p>

<pre>
<code>__webpack_public_path__ = process.env.ASSET_PATH;
</code></pre>

<p>一切设置完成。因为我们已经在我们的配置项中使用了<code>DefinePlugin</code>，&nbsp;<code>process.env.ASSET_PATH</code>&nbsp;就已经被定义了， 所以让我们能够安心地使用它了。</p>

<p><strong>警告：</strong>请注意，如果你在入口文件中使用 ES6 模块导入，则在导入后对&nbsp;<code>__webpack_public_path__</code>&nbsp;进行赋值。在这种情况下，你必须将公共路径(public path)赋值移至自己的专属模块，然后将其导入到你的 entry.js 之上：</p>

<pre>
<code>// entry.js
import &#39;./public-path&#39;;
import &#39;./app&#39;;
</code></pre>

<hr />
<blockquote>
<p>原文：<a href="https://webpack.js.org/guides/public-path/">https://webpack.js.org/guides/public-path/</a></p>
</blockquote>
