<h1><a href="http://www.cnblogs.com/yuanzhiguo/p/8109540.html" id="cb_post_title_url">js中对象与函数的关系</a></h1>

<h3>首先什么是对象？根据W3C上面的解释JS中所有事物都是对象，对象是拥有属性和方法的数据，由此可以看出基本值类型不是对象（number、string、Boolean、<strong>Undefined</strong>），剩下的引用类型（函数、数组、null...）都是对象，也有人说对象是若干属性的集合。</h3>

<p>那么函数和对象是什么关系？</p>

<p>首先我们来测试一下</p>

<h3>1、函数是一种对象</h3>

<pre>
function test() {};
console.log(test instanceof Object);    //    true</pre>

<p>很明显函数是一种对象，但你不能说函数是对象的一种。因为他俩之间是没有包含关系的。有点像鸡蛋和鸡的关系。</p>

<h3>2、对象都是通过函数创建的</h3>

<p>先来看一个例子</p>

<pre>
function test() {
    this.name=&quot;哈哈&quot;
};
var test2=new test();
console.log(test2 instanceof Object);    //true</pre>

<p>这个例子可以说明对象可以被函数创建。那为什么要说对象都是通过函数创建的，那对象字面量是不是也是通过函数来创建的，答案是肯定的，这是一种语法糖方式。举个简单的例子</p>

<p>var obj={ name:&quot;哈哈&quot;, age:&quot;18&quot; }</p>

<p>var obj=new Object() obj.name=&quot;哈哈&quot;; obj.age=&quot;18&quot;;</p>

<p>上面的对象字面量其实是通过下面的构造函数来创建的。而其中的Object是一种函数:</p>

<pre>
console.log(typeof Object)    //function</pre>

<p>通过上面的简单例子我们可以得出一个结论：对象是通过函数创建的，而函数又是一种对象。那么这是为什么呢？这就牵扯到prototype原型。</p>
