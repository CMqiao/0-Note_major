<h1>内容安全策略</h1>

<p>webpack 能够为其加载的所有脚本添加&nbsp;<code>nonce</code>。要启用此功能，需要在引入的入口脚本中设置一个&nbsp;<code>__webpack_nonce__</code>&nbsp;变量。应该为每个唯一的页面视图生成和提供一个唯一的基于 hash 的 nonce，这就是为什么&nbsp;<code>__webpack_nonce__</code>&nbsp;要在入口文件中指定，而不是在配置中指定的原因。请注意，<code>nonce</code>&nbsp;应该是一个 base64 编码的字符串。</p>

<h2>示例</h2>

<p>在 entry 文件中：</p>

<pre>
<code>// ...
__webpack_nonce__ = &#39;c29tZSBjb29sIHN0cmluZyB3aWxsIHBvcCB1cCAxMjM=&#39;;
// ...
</code></pre>

<h2>启用 CSP</h2>

<p>请注意，CSP 默认情况下不启用。需要与文档(document)一起发送相应的&nbsp;<code>CSP</code>&nbsp;header 或 meta 标签&nbsp;<code>&lt;meta http-equiv=&quot;Content-Security-Policy&quot; ...&gt;</code>，以告知浏览器启用 CSP。以下是一个包含 CDN 白名单 URL 的 CSP header 的示例：</p>

<pre>
<code>Content-Security-Policy: default-src &#39;self&#39;; script-src &#39;self&#39; https://trusted.cdn.com;
</code></pre>

<p>有关 CSP 和&nbsp;<code>nonce</code>&nbsp;属性的更多信息，请查看页面底部的<strong>进一步阅读</strong>部分。</p>

<hr />
<blockquote>
<p>原文：<a href="https://webpack.js.org/guides/csp/">https://webpack.js.org/guides/csp/</a></p>
</blockquote>

<hr />
<h3>进一步阅读</h3>

<ul>
	<li><a href="https://stackoverflow.com/questions/42922784/what-s-the-purpose-of-the-html-nonce-attribute-for-script-and-style-elements">Nonce 设计目的解释</a></li>
	<li><a href="https://research.google.com/pubs/pub45542.html">白名单的不安全性和内容安全政策的未来</a></li>
	<li><a href="https://www.troyhunt.com/locking-down-your-website-scripts-with-csp-hashes-nonces-and-report-uri/">使用 CSP, Hash, Nonces 和 报告 URI 锁定你的网站脚本</a></li>
	<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP">MDN 的 CSP 文档</a></li>
</ul>
