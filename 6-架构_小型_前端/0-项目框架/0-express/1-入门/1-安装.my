<h1>安装</h1>

<p>首先假定你已经安装了&nbsp;<a href="https://nodejs.org/">Node.js</a>，接下来为你的应用创建一个目录，然后进入此目录并将其作为当前工作目录。</p>

<pre>
<code>$ mkdir myapp
$ cd myapp
</code></pre>

<p>通过&nbsp;<code>npm init</code>&nbsp;命令为你的应用创建一个&nbsp;<code>package.json</code>&nbsp;文件。 欲了解&nbsp;<code>package.json</code>&nbsp;是如何起作用的，请参考&nbsp;<a href="https://docs.npmjs.com/files/package.json">Specifics of npm&rsquo;s package.json handling</a>。</p>

<pre>
<code>$ npm init
</code></pre>

<p>此命令将要求你输入几个参数，例如此应用的名称和版本。 你可以直接按&ldquo;回车&rdquo;键接受默认设置即可，下面这个除外：</p>

<pre>
<code>entry point: (index.js)
</code></pre>

<p>键入&nbsp;<code>app.js</code>&nbsp;或者你所希望的名称，这是当前应用的入口文件。如果你希望采用默认的&nbsp;<code>index.js</code>&nbsp;文件名，只需按&ldquo;回车&rdquo;键即可。</p>

<p>接下来安装 Express 并将其保存到依赖列表中：</p>

<pre>
<code>$ npm install express --save
</code></pre>

<p>如果只是临时安装 Express，不想将它添加到依赖列表中，只需略去&nbsp;<code>--save</code>&nbsp;参数即可：</p>

<pre>
<code>$ npm install express
</code></pre>

<p>安装 Node 模块时，如果指定了&nbsp;<code>--save</code>&nbsp;参数，那么此模块将被添加到&nbsp;<code>package.json</code>&nbsp;文件中&nbsp;<code>dependencies</code>&nbsp;依赖列表中。 然后通过&nbsp;<code>npm install</code>&nbsp;命令即可自动安装依赖列表中所列出的所有模块。</p>

<p>&nbsp;</p>
