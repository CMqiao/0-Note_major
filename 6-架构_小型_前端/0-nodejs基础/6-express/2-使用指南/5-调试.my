<h1>调试 Express</h1>

<p>Express 内部使用&nbsp;<a href="https://github.com/visionmedia/debug">debug</a>&nbsp;模块记录路由匹配、使用到的中间件、应用模式以及请求-响应循环。</p>

<p><code>debug</code>&nbsp;有点像改装过的&nbsp;<code>console.log</code>，不同的是，您不需要在生产代码中注释掉&nbsp;<code>debug</code>。它会默认关闭，而且使用一个名为&nbsp;<code>DEBUG</code>&nbsp;的环境变量还可以打开。</p>

<p>在启动应用时，设置&nbsp;<code>DEBUG</code>&nbsp;环境变量为&nbsp;<code>express:*</code>，可以查看 Express 中用到的所有内部日志。</p>

<pre>
<code>$ DEBUG=express:* node index.js
</code></pre>

<p>在 Windows 系统里，使用如下的命令。</p>

<pre>
<code>&gt; set DEBUG=express:* &amp; node index.js
</code></pre>

<p>在由&nbsp;<a href="http://www.expressjs.com.cn/starter/generator.html">express 应用生成器</a>&nbsp;生成的默认应用中执行，会打印出如下信息：</p>

<pre>
<code>$ DEBUG=express:* node ./bin/www
  express:router:route new / +0ms
  express:router:layer new / +1ms
  express:router:route get / +1ms
  express:router:layer new / +0ms
  express:router:route new / +1ms
  express:router:layer new / +0ms
  express:router:route get / +0ms
  express:router:layer new / +0ms
  express:application compile etag weak +1ms
  express:application compile query parser extended +0ms
  express:application compile trust proxy false +0ms
  express:application booting in development mode +1ms
  express:router use / query +0ms
  express:router:layer new / +0ms
  express:router use / expressInit +0ms
  express:router:layer new / +0ms
  express:router use / favicon +1ms
  express:router:layer new / +0ms
  express:router use / logger +0ms
  express:router:layer new / +0ms
  express:router use / jsonParser +0ms
  express:router:layer new / +1ms
  express:router use / urlencodedParser +0ms
  express:router:layer new / +0ms
  express:router use / cookieParser +0ms
  express:router:layer new / +0ms
  express:router use / stylus +90ms
  express:router:layer new / +0ms
  express:router use / serveStatic +0ms
  express:router:layer new / +0ms
  express:router use / router +0ms
  express:router:layer new / +1ms
  express:router use /users router +0ms
  express:router:layer new /users +0ms
  express:router use / &lt;anonymous&gt; +0ms
  express:router:layer new / +0ms
  express:router use / &lt;anonymous&gt; +0ms
  express:router:layer new / +0ms
  express:router use / &lt;anonymous&gt; +0ms
  express:router:layer new / +0ms
</code></pre>

<p>当应用收到请求时，能看到 Express 代码中打印出的日志。</p>

<pre>
<code>  express:router dispatching GET / +4h
  express:router query  : / +2ms
  express:router expressInit  : / +0ms
  express:router favicon  : / +0ms
  express:router logger  : / +1ms
  express:router jsonParser  : / +0ms
  express:router urlencodedParser  : / +1ms
  express:router cookieParser  : / +0ms
  express:router stylus  : / +0ms
  express:router serveStatic  : / +2ms
  express:router router  : / +2ms
  express:router dispatching GET / +1ms
  express:view lookup &quot;index.jade&quot; +338ms
  express:view stat &quot;/projects/example/views/index.jade&quot; +0ms
  express:view render &quot;/projects/example/views/index.jade&quot; +1ms
</code></pre>

<p>设置 DEBUG 的值为&nbsp;<code>express:router</code>，只查看路由部分的日志；设置 DEBUG 的值为&nbsp;<code>express:application</code>，只查看应用部分的日志，依此类推。</p>

<h2>通过&nbsp;<code>express</code>&nbsp;生成应用</h2>

<p>通过&nbsp;<code>express</code>&nbsp;命令行生成的应用也使用了&nbsp;<code>debug</code>&nbsp;模块，它的命名空间限制在应用中。</p>

<p>如果您通过下述命令生成应用：</p>

<pre>
<code>$ express sample-app
</code></pre>

<p>则可通过下述命令打开调试信息：</p>

<pre>
<code>$ DEBUG=sample-app node ./bin/www
</code></pre>

<p>可通过逗号隔开的名字列表来指定多个调试命名空间，如下所示：</p>

<pre>
<code>$ DEBUG=http,mail,express:* node index.js
</code></pre>

<p>请查阅&nbsp;<a href="https://github.com/visionmedia/debug">调试指南</a>&nbsp;获取更多有关&nbsp;<code>debug</code>&nbsp;的文档。</p>
