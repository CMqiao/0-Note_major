<h1>资料收集</h1>

<p>&nbsp;</p>

<p><a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">菜鸟Node.js&nbsp;教程</a></p>

<p>&nbsp;</p>

<h3><a href="http://www.baidu.com/link?url=ZU1jVF09TlEoQxfoiSKE0FD3JYoZy1UERg_s0zJXv2m" target="_blank"><em>Node</em>.<em>js</em>&nbsp;中文网</a></h3>

<h3><a href="http://www.baidu.com/link?url=B-HwiB_XJtf7x-_5jDREXSN7X5Yjcn1J0FzyxTDPdya" target="_blank"><em>nodejs</em>官网 - Node.js</a></h3>

<h3><a href="http://www.baidu.com/link?url=i5-rNTSHr9Og8Th4VDroUx-g8rQovBSXFJUkz1KaF-gKbMAHy9c7DAdMSXPjBy0UQUIjbKmoi3O4JfaCaBBLCdrv2pGy-wJtVVdytLahaSzUy7AH08gy-sclRNPcJNLQCpB6m45QFb-opFTW5_cuzXRZX_sAz_Vkl85EGStLGWxz2SAw3CpR8svvx5TSVfsm" target="_blank"><em>Node</em>.<em>js</em>&nbsp;- 廖雪峰的官方网站</a></h3>

<p>&nbsp;</p>

<h2>项目</h2>

<h3><a href="https://www.baidu.com/link?url=jN9TX20sr6xi7_HjNRlagEGv6afLwRa5l_V2dPpX6i1wNU3fxaWDGRUZIaz_XCwWc4uESlNzZUfasZCboW3RZq&amp;wd=&amp;eqid=d54a8b5800056369000000035aeee598" target="_blank">github上有什么好的<em>node</em>.<em>js</em>的<em>项目</em>? - 知乎</a></h3>

<p>&nbsp;</p>

<h1><a href="https://www.cnblogs.com/starof/p/4973500.html" id="cb_post_title_url">node.js认识及学习资料</a></h1>

<h1>一、nodejs是什么</h1>

<p>nodejs是采用google chrome浏览器v8引擎，由c++编写的，本质上是以JavaScript运行环境。</p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/315302/201703/315302-20170327151554326-357729085.png" /></p>

<p>不仅解析代码，也没有浏览器端的各种安全性限制，还提供系统级的API，比如文件读写，进程管理，网络通信等。</p>

<h1>2、nodejs有多火？</h1>

<p><a href="https://www.npmjs.com/" target="_blank">npmjs</a>上数据</p>

<p>20170327数据</p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/315302/201703/315302-20170327152511358-550361614.png" /></p>

<p>&nbsp;github中搜索node相关的结果将近30万</p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/315302/201703/315302-20170327152930623-724371619.png" /></p>

<h1>3、 借助nodejs完成的项目</h1>

<ul>
	<li>Node-Webkit 使用web技术开发跨平台的桌面应用程序，能兼容Mac,Linux或者Windows</li>
	<li>appjs和Node-Webkit相似</li>
	<li>musicquiz</li>
	<li><strong>jade</strong>和nodejs组合使用，非常高效的开发和管理后台html模板</li>
	<li>ghost 强大而且用户体验超好的开源博客程序。</li>
	<li>Yamr</li>
	<li>grunt ：javascript跑各种任务的运行工具。通过集成各种插件来完成，比如样式编译、语法检查、脚本压缩合并，自动化测试，shell脚本运行，文档生成，甚至图片处理等等任务。</li>
	<li><strong>express</strong>.js</li>
	<li>gulp：针对grunt的复杂配置，有了更简洁高效的组织方式。</li>
	<li>nodecast：在pc上运行它，启动移动设备，选中一支持chromecast的应用程序，然后就可以把移动广播上的内容映射到电脑上。等于把电脑当做流媒体来使用。</li>
	<li>log.io&nbsp; 在浏览器里面可以实时监控项目日志。</li>
	<li>hyro</li>
	<li>pdfkit 生成pdf文档。</li>
	<li>haroopad， linux上的markdown编辑器。</li>
	<li>noduinoWeb，硬件黑客希望通过noduinoWeb页面就能控制他们的开源硬件noduino，从而将软件和硬件很好的结合起来。</li>
	<li>Filsh</li>
	<li>Forever</li>
	<li>NodeOS 基于nodejs开发的友好的操作系统。</li>
	<li>Imdex</li>
</ul>

<h1>4、通过4个网站关注nodejs</h1>

<ol>
	<li>官网：<a href="https://nodejs.org/en/" target="_blank">https://nodejs.org/en/</a>&nbsp;看看版本升级，新特性的加入，重要bug的修复，包括最新的API变化，发展历史。</li>
	<li>npmjs模块社区 :<a href="https://www.npmjs.com/" target="_blank">https://www.npmjs.com/</a>&nbsp;&nbsp;&nbsp;&nbsp; 开发新项目，编写新模块时，搜索一下相关模块，看看源代码，看看别人代码是如果组织的，解决项目中的问题，省时省力。</li>
	<li>github代码托管平台：<a href="https://github.com/" target="_blank">https://github.com/</a>&nbsp;在这里有大量和nodejs有关的代码，阅读源码是一种很快的提供学习速度的方法，fork或者follow nodejs代码，看到它的变化和社区的变化。</li>
	<li>stackoverflow技术问答社区:<a href="http://stackoverflow.com/" target="_blank">http://stackoverflow.com/</a>&nbsp;&nbsp; 环境配置出了问题，跑服务的时候报了异常 基本都能解决。</li>
</ol>

<h1>5、nodejs版本</h1>

<p>&nbsp;<img alt="" src="https://images2015.cnblogs.com/blog/315302/201703/315302-20170327160017295-1805313700.png" /></p>

<p>稳定版本有bug修复，非稳定版本中API的修改。</p>

<h1>6、nodejs模块与commonjs规范</h1>

<p>nodejs中不需要有命名空间，不用担心变量污染和方法定义隔离。</p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/315302/201703/315302-20170327160521233-84498590.png" /></p>

<p>每个模块中有三个部分：模块的定义，模块的标识，模块的引用。比如Nodejs/Couchdb都是实现了CommonJs规范，并反馈推动CommonJs。</p>

<p>命名空间：jquery</p>

<p>CommonJs规范：包括了模块，包，二进制，控制台编码，套接字，单元测试等来约定JavaScript应该怎么去组织，怎么去编写。</p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/315302/201703/315302-20170327160650592-1322758267.png" />&nbsp;</p>

<p>&nbsp;</p>

<h1>7、Node.js 入门相关资料</h1>

<p>《<strong>汇智网 Node.js 课程</strong>》</p>

<p>《<strong>快速搭建 Node.js 开发环境以及加速 npm</strong>》</p>

<p><a href="http://fengmk2.com/blog/2014/03/node-env-and-faster-npm.html" target="_blank">http://fengmk2.com/blog/2014/03/node-env-and-faster-npm.html</a></p>

<p>《<strong>Node.js 包教不包会</strong>》</p>

<p><a href="https://github.com/alsotang/node-lessons" target="_blank">https://github.com/alsotang/node-lessons</a></p>

<p>《<strong>最快的 js 编写方式</strong>》</p>

<p><a href="https://github.com/alsotang/fast-js" target="_blank">https://github.com/alsotang/fast-js</a></p>

<p>《<strong>七天学会NodeJS</strong>》</p>

<p><a href="https://github.com/nqdeng/7-days-nodejs" target="_blank">https://github.com/nqdeng/7-days-nodejs</a></p>

<p>《<strong>Node入门-<em>一本全面的Node.js教程</em></strong>》</p>

<p><a href="http://www.nodebeginner.org/index-zh-cn.html" target="_blank">http://www.nodebeginner.org/index-zh-cn.html</a></p>

<h2>Node.js 资源</h2>

<p>《<strong>node weekly</strong>》</p>

<p><a href="http://nodeweekly.com/issues" target="_blank">http://nodeweekly.com/issues</a></p>

<p>《<strong>node123-<em>node.js中文资料导航</em></strong>》</p>

<p><a href="https://github.com/youyudehexie/node123" target="_blank">https://github.com/youyudehexie/node123</a></p>

<p>《<strong>A curated list of delightful Node.js packages and resources</strong>》</p>

<p><a href="https://github.com/sindresorhus/awesome-nodejs" target="_blank">https://github.com/sindresorhus/awesome-nodejs</a></p>

<p>《<strong>Node.js Books</strong>》</p>

<p><a href="https://github.com/pana/node-books" target="_blank">https://github.com/pana/node-books</a></p>

<h2>Node.js 名人</h2>

<p>《<strong>名人堂</strong>》</p>

<p><a href="https://github.com/cnodejs/nodeclub/wiki/%E5%90%8D%E4%BA%BA%E5%A0%82" target="_blank">https://github.com/cnodejs/nodeclub/wiki/%E5%90%8D%E4%BA%BA%E5%A0%82</a></p>

<h2>Node.js 服务器</h2>

<p>新手搭建 Node.js 服务器，推荐使用无需备案的&nbsp;<a href="https://www.linode.com/?r=15ca84df052ab2ac2cc4ac21714969900782a827" target="_blank">Linode(https://www.linode.com)</a>&nbsp;或&nbsp;<a href="https://www.digitalocean.com/?refcode=eba02656eeb3" target="_blank">DigitalOcean(https://www.digitalocean.com/)</a></p>

<p>nodejs菜鸟教程&nbsp;</p>

<p><a href="http://www.runoob.com/nodejs/nodejs-tutorial.html" target="_blank">http://www.runoob.com/nodejs/nodejs-tutorial.html</a></p>

<p>nodejs API文档&nbsp;</p>

<p><a href="http://nodejs.cn/api/" target="_blank">http://nodejs.cn/api/</a></p>

<p>英文api文档</p>

<p><a href="https://nodejs.org/api/" target="_blank">https://nodejs.org/api/</a></p>

<p>&nbsp;</p>

<p>1 ES6/7语法讲解&nbsp;<br />
<a href="http://es6.ruanyifeng.com/#README" target="_blank">http://es6.ruanyifeng.com/#README</a>&nbsp;<br />
<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects" target="_blank">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects</a>&nbsp;JavaScript标准库介绍（火狐官方）&nbsp;<br />
JavaScript作用域，this，执行上下文，闭包介绍（基本可以看懂）&nbsp;<br />
<a href="https://www.cnblogs.com/wangfupeng1988/p/3977924.html" target="_blank">https://www.cnblogs.com/wangfupeng1988/p/3977924.html</a>&nbsp;<br />
ES5解决异步嵌套：async模块&nbsp;<br />
<a href="https://caolan.github.io/async/docs.html#eachOfSeries" target="_blank">https://caolan.github.io/async/docs.html#eachOfSeries</a>&nbsp;<br />
ES6/7解决异步嵌套：async funtion+await+promise&nbsp;<br />
Promise库-bluebird:&nbsp;<a href="http://bluebirdjs.com/docs/why-performance.html" target="_blank">http://bluebirdjs.com/docs/why-performance.html</a>&nbsp;<br />
2 koa框架入门&nbsp;<br />
<a href="http://www.jianshu.com/p/6b816c609669" target="_blank">http://www.jianshu.com/p/6b816c609669</a>&nbsp;<br />
<a href="https://github.com/ChenShenhai/koa2-note/" target="_blank">https://github.com/ChenShenhai/koa2-note/</a>&nbsp;<br />
<a href="https://koa.bootcss.com/" target="_blank">https://koa.bootcss.com/</a>&nbsp;<br />
3 balel关于新语法项目在旧解释器上的支持&nbsp;<br />
ES6项目在ES5解释器（低版本的node环境）&nbsp;<br />
<a href="https://babeljs.io/" target="_blank">https://babeljs.io/</a>&nbsp;<br />
<a href="http://www.ruanyifeng.com/blog/2016/01/babel.html" target="_blank">http://www.ruanyifeng.com/blog/2016/01/babel.html</a></p>

<p>4 nodejs介绍&nbsp;<br />
<a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank">https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000</a>&nbsp;廖雪峰&nbsp;<br />
nodejs深入钱出&nbsp;<br />
5 web框架&nbsp;<br />
express&nbsp;<a href="http://www.expressjs.com.cn/" target="_blank">http://www.expressjs.com.cn/</a>&nbsp;<br />
koa&nbsp;<a href="https://koa.bootcss.com/" target="_blank">https://koa.bootcss.com/</a>&nbsp;<br />
<a href="http://koajs.com/" target="_blank">http://koajs.com/</a>&nbsp;<br />
egg&nbsp;<a href="http://eggjs.org/zh-cn/advanced/loader.html" target="_blank">http://eggjs.org/zh-cn/advanced/loader.html</a>&nbsp;<br />
6 大文件上传&nbsp;<br />
<a href="http://fex.baidu.com/webuploader/download.html" target="_blank">http://fex.baidu.com/webuploader/download.html</a>&nbsp;百度的一个上传插件&nbsp;<br />
<a href="http://blog.csdn.net/xiazhiqiang01/article/details/52677484" target="_blank">http://blog.csdn.net/xiazhiqiang01/article/details/52677484</a>&nbsp;介绍如何使用</p>

<p>7 mongoose使用&nbsp;<br />
<a href="http://www.nodeclass.com/api/mongoose.html" target="_blank">http://www.nodeclass.com/api/mongoose.html</a></p>

<p>8 node进程管理/运维&nbsp;<br />
PM2&amp;forever介绍：<a href="http://blog.csdn.net/shmnh/article/details/43075189" target="_blank">http://blog.csdn.net/shmnh/article/details/43075189</a></p>

<p>9 WRK处理HTTP基准测试/压力测试&nbsp;<br />
<a href="https://www.cnblogs.com/rainy-shurun/p/5867946.html" target="_blank">https://www.cnblogs.com/rainy-shurun/p/5867946.html</a>&nbsp;介绍&nbsp;<br />
GitHub ：<a href="https://github.com/wg/wrk" target="_blank">https://github.com/wg/wrk</a>&nbsp;<br />
Ubuntu下upstart ：<a href="http://blog.chinaunix.net/uid-20672559-id-3431895.html" target="_blank">http://blog.chinaunix.net/uid-20672559-id-3431895.html</a>&nbsp;Linux服务器进程管理工具</p>

<p>10 restful-api:&nbsp;<br />
翻译过来是&rdquo;表现层状态转化&rdquo;，面向资源是REST最明显的特征，对于同一个资源的一组不同的操作。资源是服务器上一个可命名的抽象概念，资源是以名词为核心来组织的，首先关注的是名词。REST要求，必须通过统一的接口来对资源执行各种操作。对于每个资源只能执行一组有限的操作。（7个HTTP方法：GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS）</p>

<p>参考：&nbsp;<br />
<a href="http://blog.csdn.net/wangyanchao000/article/details/55047806" target="_blank">http://blog.csdn.net/wangyanchao000/article/details/55047806</a>&nbsp;restful理解&nbsp;<br />
<a href="http://www.infoq.com/cn/articles/understanding-restful-style/" target="_blank">http://www.infoq.com/cn/articles/understanding-restful-style/</a>&nbsp;深入架构层面</p>

<p>11 JavaScript排序算法实现&nbsp;<br />
<a href="https://www.cnblogs.com/beli/p/6297741.html" target="_blank">https://www.cnblogs.com/beli/p/6297741.html</a></p>

<p>&nbsp;</p>

<h2>码云上好的nodejs项目</h2>

<p><strong>不请自来，题主问的是 GitHub 上面 node.js 的项目，在此特整理了几款 Gitee 上的相关项目作为补充，如时间精力允许也不妨一看。</strong></p>

<hr />
<p><strong>更新：</strong>针对部分小伙伴的回复特此说明，如只想看 GitHub 项目的小伙伴可以绕开此条答案啦，以下项目推荐的为 Gitee 上的 node.js 项目，仅作为 node.js 项目的补充推荐。</p>

<p>&nbsp;</p>

<p><strong>1. 项目名称：</strong>电子商务平台及CMS建站系统 <strong><a href="https://link.zhihu.com/?target=https%3A//gitee.com/arterli/CmsWing" rel="nofollow noreferrer" target="_blank">CmsWing</a></strong></p>

<p><strong>项目简介：</strong></p>

<ul>
	<li>模块化：全新的架构和模块化的开发机制，便于灵活扩展和二次开发。</li>
	<li>模型/栏目/分类信息体系：通过栏目和模型绑定，以及不同的模型类型，不同栏目可以实现差异化的功能，轻松实现诸如资讯、下载、讨论和图片等功能。通过分类信息和栏目绑定，可以自动建立索引表，轻松实现复杂的信息检索。</li>
	<li>用户行为：支持自定义用户行为，可以对单个用户或者群体用户的行为进行记录及分享，为您的运营决策提供有效参考数据。</li>
	<li>云服务支持：支持云存储、云安全、云过滤和云统计等服务，更多贴心的服务让您的网站更安心。</li>
	<li>安全稳健：提供稳健的安全策略，包括备份恢复、容错、防止恶意攻击登录，网页防篡改等多项安全管理功能，保证系统安全，可靠、稳定的运行。</li>
</ul>

<p><img src="https://pic4.zhimg.com/80/v2-a65d9abd38619af2b622f4e29bed167c_hd.jpg" style="width:562px" /></p>

<p><strong>项目地址：</strong><a href="https://link.zhihu.com/?target=https%3A//gitee.com/arterli/CmsWing" rel="nofollow noreferrer" target="_blank">阿特/CmsWing - 码云</a></p>

<p>&nbsp;</p>

<p><strong>2. 项目名称：</strong>内容管理系统 <strong><a href="https://link.zhihu.com/?target=https%3A//gitee.com/doramart/DoraCMS" rel="nofollow noreferrer" target="_blank">DoraCMS</a></strong> （有Bug，渗入）</p>

<p><strong>项目简介：</strong>DoraCMS是基于Nodejs+express+mongodb编写的一套内容管理系统，结构简单，较目前一些开源的cms，doracms易于拓展，特别适合前端开发工程师做二次开发。</p>

<p><strong>项目地址：</strong><a href="https://link.zhihu.com/?target=https%3A//gitee.com/doramart/DoraCMS" rel="nofollow noreferrer" target="_blank">doramart/DoraCMS - 码云</a></p>

<p>&nbsp;</p>

<p><strong>3. 项目名称：</strong>轻量级的企业聊天软件 <strong><a href="https://link.zhihu.com/?target=https%3A//gitee.com/wwccss/xuanxuan" rel="nofollow noreferrer" target="_blank">xuanxuan</a></strong></p>

<p><strong>项目简介：</strong></p>

<p><img src="https://pic2.zhimg.com/80/v2-c69315bb47f0527950c1888a23184a48_hd.jpg" style="width:800px" /></p>

<ul>
	<li><strong>开聊</strong>：和服务器上的任何用户开聊，收发表情、图片、截屏、文件样样在行；</li>
	<li><strong>开源安全</strong>：源码开放，客户端和服务器通信全程加密，安全可靠；</li>
	<li><strong>讨论组</strong>：一个人讨论的不过瘾？随时邀请多人组建个性讨论组；</li>
	<li><strong>公开讨论组</strong>：将讨论组公开，任何感兴趣的人都可以加入进来；</li>
	<li><strong>通知及提醒</strong>：与系统桌面环境集成，即时收到新消息通知；</li>
	<li><strong>会话管理</strong>：将任意会话（包括讨论组和公开讨论组）置顶，精彩内容不容错过，还可以重命名讨论组、为讨论组设置白名单及浏览会话的所有消息历史记录；</li>
	<li><strong>通讯录</strong>：浏览企业成员资料和联系信息；</li>
	<li><strong>轻量级服务器端</strong>：轻松搭配<a href="https://link.zhihu.com/?target=http%3A//ranzhico.com/" rel="nofollow noreferrer" target="_blank">然之协同</a>使用。</li>
</ul>

<p><strong>项目地址：</strong><a href="https://link.zhihu.com/?target=https%3A//gitee.com/wwccss/xuanxuan" rel="nofollow noreferrer" target="_blank">easysoft/xuanxuan - 码云</a></p>

<p>&nbsp;</p>

<p><strong>4. 项目名称：</strong>爬虫系统 <strong><a href="https://link.zhihu.com/?target=https%3A//gitee.com/dreamidea/neocrawler" rel="nofollow noreferrer" target="_blank">neocrawler</a></strong></p>

<p><strong>项目简介：</strong>支持web界面方式的摘取规则配置（css selector &amp; regex）； 包含无界面的浏览器引擎（phantomjs），支持js产生内容的抓取； 用http代理路由的方式防止抓取并发量过大的情况下被对方屏蔽； nodejs none-block 异步环境下的抓取性能比较高； 中央调度器负责网址的调度（同一时间片内一定数量的抓取任务中根据网站的权重来决定派发任务量； 支持多种抓取实例并存，定制摘取引擎和存储方式。</p>

<p><img src="https://pic1.zhimg.com/80/v2-ee14e0e57a12833c909595eb59542ae4_hd.jpg" style="width:1015px" /></p>

<p>&nbsp;</p>

<p><strong>项目地址：</strong><a href="https://link.zhihu.com/?target=https%3A//gitee.com/dreamidea/neocrawler" rel="nofollow noreferrer" target="_blank">水熊宝宝/neocrawler - 码云</a></p>

<p>&nbsp;</p>

<p><strong>5. 项目名称：</strong>基于nodejs 的爬虫 API 接口项目</p>

<p><strong>项目简介：</strong>基于nodejs 的爬虫 API接口项目,包括前端开发日报、知乎日报、前端top框架排行、妹纸福利、搞笑视频、各类视频新闻资讯热点详情接口数据。</p>

<p><strong>项目地址：</strong><a href="https://link.zhihu.com/?target=https%3A//gitee.com/ecitlm/splider" rel="nofollow noreferrer" target="_blank">ecit2010/Node-SpliderApi - 码云</a></p>

<p>&nbsp;</p>

<h2><strong>nodejs学习指南和教程</strong></h2>

<p>这篇文章编译整理自Stack Overflow的一个如何开始学习Node.js的Wiki帖，这份资源列表在SO上面浏览接近60万次，数千个收藏和顶。特意整理发布到这里，其中添加了部分中文参考资料。</p>

<p><strong>学习指南和教程</strong></p>

<ul>
	<li><a href="http://nodeschool.io/?utm_source=jobboleblog" target="_blank">NodeSchool.io&nbsp;交互式课程</a></li>
	<li><a href="https://github.com/maxogden/art-of-node/#the-art-of-node" target="_blank">Node的艺术 (Node简介)</a></li>
	<li><a href="http://www.nodebeginner.org/#hello-world" target="_blank">Hello World</a></li>
	<li><a href="http://www.nodebeginner.org/#building-the-application-stack" target="_blank">Hello World Web Server</a></li>
	<li><a href="http://nodeguide.com/?utm_source=jobboleblog" target="_blank">Node.js 指南</a></li>
	<li><a href="http://howtonode.org/express-mongodb?utm_source=jobboleblog" target="_blank">使用Node.js, express和MongoDB创建一个博客</a></li>
	<li><a href="http://www.imooc.com/view/75?utm_source=jobboleblog" target="_blank">Node+MongoDB 100分钟建站攻略</a></li>
	<li><a href="http://project70.com/?utm_source=jobboleblog" target="_blank">Project 70推出的Node.Js指南</a></li>
	<li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/node-js-for-beginners/?utm_source=jobboleblog" target="_blank">Node.js入门</a></li>
	<li><a href="http://javascriptissexy.com/learn-node-js-completely-and-with-confidence/?utm_source=jobboleblog" target="_blank">全面学习 Node.js</a></li>
</ul>

<p><strong>开发者网站</strong></p>

<ul>
	<li><a href="http://www.joyent.com/developers/node?utm_source=jobboleblog" target="_blank">Joyent的Node开发者站点</a></li>
</ul>

<p><strong>视频</strong></p>

<ul>
	<li><a href="http://nodetuts.com/?utm_source=jobboleblog" target="_blank">Node指南</a></li>
	<li><a href="http://www.imooc.com/view/75?utm_source=jobboleblog" target="_blank">Node+MongoDB 100分钟建站攻略</a></li>
	<li><a href="http://www.youtube.com/watch?v=jo_B4LTHi3I" target="_blank">Ryan Dahl介绍Node.js</a></li>
	<li><a href="http://www.infoq.com/presentations/Parallel-Programming-with-Nodejs?utm_source=jobboleblog" target="_blank">用Node.js做并行开发</a></li>
	<li><a href="http://vimeo.com/18077379?utm_source=jobboleblog" target="_blank">使用Node, Connect &amp; Express做JS的服务端开发</a></li>
	<li><a href="http://www.lynda.com/Nodejs-tutorials/Nodejs-First-Look/101554-2.html?utm_source=jobboleblog" target="_blank">初探Node.js</a></li>
	<li><a href="http://www.youtube.com/watch?v=0_GNHWZHc-o" target="_blank">Node.js 和 MongoDB</a></li>
	<li><a href="http://node.codeschool.com/levels/1?utm_source=jobboleblog" target="_blank">使用Node.js的实时Web</a></li>
</ul>

<p><strong>Screencasts</strong></p>

<ul>
	<li><a href="http://learnallthenodes.com/?utm_source=jobboleblog" target="_blank">全面学习Nodes</a></li>
	<li><a href="http://nodetuts.com/?utm_source=jobboleblog" target="_blank">NodeTuts</a></li>
	<li><a href="http://nodecasts.net/?utm_source=jobboleblog" target="_blank">NodeCasts</a></li>
	<li><a href="http://www.develop.com/webcasts/watch/5318c4d5d588bf08c461f4b1/create-server-side-mvc-apps-with-node-js-and-express" target="_blank">使用Node.js 和 Express创建服务端的MVC应用</a></li>
</ul>

<p><strong>书籍</strong></p>

<ul>
	<li><a href="http://nodebeginner.org/?utm_source=jobboleblog" target="_blank">The Node Beginner Book</a></li>
	<li><a href="http://visionmedia.github.com/masteringnode/?utm_source=jobboleblog" target="_blank">Mastering Node.js</a></li>
	<li><a href="http://chimera.labs.oreilly.com/books/1234000001808/index.html?utm_source=jobboleblog" target="_blank">Up and Running with Node.js</a></li>
	<li><a href="http://www.manning.com/cantelon/?utm_source=jobboleblog" target="_blank">Node.js in Action</a></li>
	<li><a href="http://amzn.com/B008Z5OEUY?utm_source=jobboleblog" target="_blank">Smashing Node.js: JavaScript Everywhere</a></li>
	<li><a href="http://www.amazon.de/dp/389864829X?utm_source=jobboleblog" target="_blank">Node.js &amp; Co. (in German)</a></li>
	<li><a href="http://nodejsbook.io/?utm_source=jobboleblog" target="_blank">Sam&rsquo;s Teach Yourself Node.js in 24 Hours</a></li>
	<li><a href="http://jsbooks.revolunet.com/?utm_source=jobboleblog" target="_blank">Most detailed list of free JavaScript Books</a></li>
	<li><a href="http://book.mixu.net/node/index.html?utm_source=jobboleblog" target="_blank">Mixu&rsquo;s Node Book</a></li>
	<li><a href="http://pragprog.com/book/jwnode/node-js-the-right-way?utm_source=jobboleblog" target="_blank">Node.js the Right Way: Practical, Server-Side JavaScript That Scale</a></li>
	<li><a href="https://leanpub.com/webdevelopmentwithnodejs?utm_source=jobboleblog" target="_blank">Beginning Web Development with Node.js</a></li>
	<li><a href="http://www.packtpub.com/node-javascript-web-development/book?utm_source=jobboleblog" target="_blank">Node Web Development</a></li>
</ul>

<p><strong>课程</strong></p>

<ul>
	<li><a href="http://node.codeschool.com/?utm_source=jobboleblog" target="_blank">Node.js的实时Web开发</a></li>
	<li><a href="http://www.develop.com/training-course/nodejs-featuring-node-npm-express-mocha-mongodb-with-mongoose?utm_source=jobboleblog" target="_blank">Essential Node.js from DevelopMentor</a></li>
</ul>

<p><strong>博客</strong></p>

<ul>
	<li><a href="http://blog.nodejs.org/?utm_source=jobboleblog" target="_blank">Node.js官方博客</a></li>
	<li><a href="http://howtonode.org/?utm_source=jobboleblog" target="_blank">How To Node</a></li>
	<li><a href="http://dailyjs.com/?utm_source=jobboleblog" target="_blank">DailyJS</a></li>
	<li><a href="http://blog.nodejitsu.com/?utm_source=jobboleblog" target="_blank">Nodejitsu blog</a></li>
	<li><a href="http://www.wilcoxd.com/whitepapers/node_js/?utm_source=jobboleblog" target="_blank">Ryan Wilcox&rsquo;s Whitepaper</a></li>
	<li><a href="http://www.devthought.com/?utm_source=jobboleblog" target="_blank">devthought</a></li>
</ul>

<p><strong>JavaScript课程</strong></p>

<ul>
	<li><a href="http://yuiblog.com/crockford/?utm_source=jobboleblog" target="_blank">Crockford&rsquo;s videos</a>&nbsp;(must see!)</li>
	<li>参考这篇文章《<a href="http://blog.jobbole.com/73465/?utm_source=jobboleblog" target="_blank">学习JavaScript的在线课程和指南</a>》</li>
	<li><a href="http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/?utm_source=jobboleblog" target="_blank">Essential JavaScript Design Patterns For Beginners</a></li>
	<li><a href="http://bonsaiden.github.com/JavaScript-Garden/?utm_source=jobboleblog" target="_blank">JavaScript garden</a></li>
	<li><a href="http://oreilly.com/catalog/9780596806767/?utm_source=jobboleblog" target="_blank">JavaScript Patterns</a>&nbsp;book</li>
	<li><a href="http://oreilly.com/catalog/9780596517748/?utm_source=jobboleblog" target="_blank">JavaScript: The Good Parts</a>&nbsp;book</li>
</ul>

<p><strong>Node模块</strong></p>

<ul>
	<li><a href="http://npmjs.org/?utm_source=jobboleblog" target="_blank">Search for registered node.js modules</a></li>
	<li><a href="https://github.com/joyent/node/wiki/modules/?utm_source=jobboleblog" target="_blank">Wiki List on Github/Joyent/Node</a>&nbsp;(start here last!)</li>
	<li><a href="http://www.freshblurbs.com/articles/important-node-js-modules.html?utm_source=jobboleblog" target="_blank">A completely biased and incomplete selection of useful Node modules</a></li>
</ul>

<p><strong>其他工具和资源</strong></p>

<ul>
	<li><a href="http://jsapp.us/?utm_source=jobboleblog" target="_blank">JSApp.US &ndash; like jsfiddle, but for node.js</a></li>
	<li><a href="https://www.ebayopensource.org/index.php/VJET/NodeJS" target="_blank">Node with VJET JS (for Eclipse IDE)</a></li>
	<li>Production sites with published source:
	<ul>
		<li><a href="http://nodeknockout.com/?utm_source=jobboleblog" target="_blank">Node Knockout Hackathon</a>&nbsp;<a href="https://github.com/nko3/website">(source)</a></li>
	</ul>
	</li>
	<li><a href="http://coding.smashingmagazine.com/2011/09/16/useful-node-js-tools-tutorials-and-resources/?utm_source=jobboleblog" target="_blank">Useful Node.js Tools, Tutorials and Resources</a></li>
	<li><a href="http://runnable.com/?utm_source=jobboleblog" target="_blank">Runnable.com &ndash; like jsfiddle, but for server side as well</a></li>
	<li><a href="https://devcenter.heroku.com/categories/nodejs?utm_source=jobboleblog" target="_blank">Getting Started with Node.js on Heroku</a></li>
</ul>

<p><strong>单元测试</strong></p>

<ul>
	<li><a href="http://visionmedia.github.io/mocha/?utm_source=jobboleblog" target="_blank">Mocha</a>&nbsp;is a popular test framework.</li>
	<li><a href="http://vowsjs.org/?utm_source=jobboleblog" target="_blank">Vows</a>&nbsp;is a fantastic take on asynchronous testing, albeit somewhat stale.</li>
	<li><a href="http://visionmedia.github.com/expresso/?utm_source=jobboleblog" target="_blank">Expresso</a>&nbsp;is a more traditional unit testing framework.</li>
	<li><a href="https://github.com/caolan/nodeunit/?utm_source=jobboleblog" target="_blank">node-unit</a>&nbsp;is another relatively traditional unit testing framework.</li>
</ul>

<p><strong>Web框架</strong></p>

<ul>
	<li><a href="http://expressjs.com/?utm_source=jobboleblog" target="_blank">Express</a>&nbsp;is by far the most popular framework.</li>
	<li><a href="http://www.meteor.com/?utm_source=jobboleblog" target="_blank">Meteor</a>&nbsp;bundles together jQuery, Handlebars, Node.js, websockets, mongoDB, and DDP and promotes convention over configuration without being a Rails clone.</li>
	<li><a href="http://towerjs.org/?utm_source=jobboleblog" target="_blank">Tower</a>&nbsp;is an abstraction of top of Express that aims to be a Rails clone.</li>
	<li><a href="http://geddyjs.org/?utm_source=jobboleblog" target="_blank">Geddy</a>&nbsp;is another take on web frameworks.</li>
	<li><a href="https://npmjs.org/package/railway/?utm_source=jobboleblog" target="_blank">RailwayJS</a>&nbsp;is a Ruby-on-Rails inspired MVC web framework.</li>
	<li><a href="https://sailsjs.org/#!" target="_blank">SailsJS</a>&nbsp;is a realtime MVC web framework.</li>
	<li><a href="https://sleekjs.com/?utm_source=jobboleblog" target="_blank">Sleek.js</a>&nbsp;is a simple web framework, built upon express.js.</li>
	<li><a href="http://spumko.github.io/?utm_source=jobboleblog" target="_blank">Hapi</a>&nbsp;is a configuration-centric framework with built-in support for input validation, caching, authentication, etc.</li>
	<li><a href="http://koajs.com/?utm_source=jobboleblog" target="_blank">Koa</a>&nbsp;Koa is a new web framework designed by the team behind Express, which aims to be a smaller, more expressive, and more robust foundation for web applications and APIs.</li>
</ul>

<p><strong>Web框架工具</strong></p>

<ul>
	<li><a href="https://github.com/visionmedia/jade/?utm_source=jobboleblog" target="_blank">Jade</a>&nbsp;is the HAML/Slim of the Node world</li>
	<li><a href="https://github.com/visionmedia/ejs/?utm_source=jobboleblog" target="_blank">EJS</a>&nbsp;is a more traditional templating language.</li>
	<li>Don&rsquo;t forget about&nbsp;<a href="http://documentcloud.github.com/underscore/#template" target="_blank">Underscore&rsquo;s template method</a>!</li>
</ul>

<p><strong>网络</strong></p>

<ul>
	<li><a href="http://www.senchalabs.org/connect/?utm_source=jobboleblog" target="_blank">Connect</a>&nbsp;is the Rack or WSGI of the Node world.</li>
	<li><a href="https://github.com/mikeal/request/?utm_source=jobboleblog" target="_blank">Request</a>&nbsp;is a very popular HTTP request library.</li>
	<li><a href="https://github.com/LearnBoost/socket.io/?utm_source=jobboleblog" target="_blank">socket.io</a>&nbsp;is handy for building WebSocket servers.</li>
</ul>

<p><strong>命令行工具</strong></p>

<ul>
	<li><a href="https://github.com/substack/node-optimist/?utm_source=jobboleblog" target="_blank">Optimist</a>&nbsp;makes argument parsing a joy.</li>
	<li><a href="https://github.com/visionmedia/commander.js/?utm_source=jobboleblog" target="_blank">Commander</a>&nbsp;is another popular argument parser.</li>
	<li><a href="https://github.com/Marak/colors.js/?utm_source=jobboleblog" target="_blank">Colors</a>&nbsp;makes your CLI output pretty.</li>
</ul>
