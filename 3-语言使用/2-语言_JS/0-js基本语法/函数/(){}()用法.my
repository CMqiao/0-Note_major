<h1>自执行匿名函数</h1>

<p>&nbsp;</p>

<p>经常看到别人的JS脚本中有这样的写法:</p>

<pre>
(function(){
function a(){
   alert(&quot;a&quot;);
}
})();</pre>

<p>这里的(function(){xxx})(); 是什么意思，为什么这么写，有什么好处？</p>

<p>&nbsp;</p>

<p>自执行匿名函数：</p>

<ul>
	<li>常见格式：(function() { /* code */ })();</li>
	<li>解释：包围函数（function(){})的第一对括号向脚本返回未命名的函数，随后一对空括号立即执行返回的未命名函数，括号内为匿名函数的参数。</li>
	<li>作用：可以用它创建命名空间，只要把自己所有的代码都写在这个特殊的函数包装内，那么外部就不能访问，除非你允许(变量前加上window，这样该函数或变量就成为全局)。各JavaScript库的代码也基本是这种组织形式。</li>
</ul>

<p>总结一下，执行函数的作用主要为&nbsp;<strong>匿名</strong>&nbsp;和&nbsp;<strong>自动执行</strong>,代码在被解释时就已经在运行了。</p>

<p><ins><em>其他写法</em></ins></p>

<pre>
(function () { /* code */ } ()); 
!function () { /* code */ } ();
~function () { /* code */ } ();
-function () { /* code */ } ();
+function () { /* code */ } ();</pre>

<p>&nbsp;</p>

<p>(funtion(){})()；立即执行函数；相当于先申明一个函数，声明完后直接调用；如果参数如：<br />
(funtion(str){alert(str)})(&quot;output&quot;))；相当于：funtion OutPutFun(str){alert(str);};OutPutFun(&quot;output&quot;);</p>
