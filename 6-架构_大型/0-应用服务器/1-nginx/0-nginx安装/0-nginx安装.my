<h1><a href="http://blog.csdn.net/caiwenfeng_for_23/article/details/43796389">Windows下Nginx的安装与配置</a></h1>

<p>Nginx (&ldquo;engine x&rdquo;) 是一款高性能的，轻量级的HTTP Web 服务器 和 反向代理服务器及电子邮件 IMAP/POP3/SMTP 代理服务器。</p>

<p>Nginx 是由俄罗斯的程序设计师 Igor Sysoev 所开发，为俄罗斯访问量第二的 Rambler.ru 站点开发的，它已经在该站点运行超过四年多时间了，Igor 将源代码以类BSD许可证的形式发布。</p>

<p>自 Nginx 发布四年来，Nginx 已经因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名了。Nginx 超越Apache的高性能和稳定性，使得国内使用 Nginx 作为 Web 服务器的网站也越来越多。</p>

<p>目前国内各大门户网站已经部署了Nginx，如新浪、网易、腾讯等；新近发现 Nginx 技术在国内日趋火热，越来越多的网站开始应用部署Nginx。</p>

<p>一、首先去官网下载 nginx1.0.11的Windows版本，官网下载：<a href="http://nginx.org/download/nginx-1.7.10.zip" target="_blank">http://nginx.org/download/nginx-1.7.10.zip</a></p>

<p>下载到软件包后，解压 nginx-nginx1.7.10.zip 包到你喜欢的根目录，并将目录名改为nginx。</p>

<p>然后，执行下列操作：</p>

<p>cd nginx</p>

<p>start nginx</p>

<p>这样，nginx 服务就启动了。打开任务管理器，查看 nginx.exe 进程，有二个进程会显示，占用系统资源，那是相当的少。然后再打开浏览器，输入&nbsp;<a href="http://127.0.0.1/" target="_blank">http://127.0.0.1/</a>&nbsp;就可以看到nginx的欢迎页面了，非常友好</p>

<p>nginx -s stop // 停止nginx&nbsp;<br />
nginx -s reload // 重新加载配置文件&nbsp;<br />
nginx -s quit // 退出nginx</p>

<h2><a href="http://www.cnblogs.com/chuncn/archive/2011/10/14/2212291.html" id="cb_post_title_url">windows下nginx安装、配置与使用</a></h2>

<p>　　目前国内各大门户网站已经部署了Nginx，如新浪、网易、腾讯等；国内几个重要的视频分享网站也部署了Nginx，如六房间、酷6等。新近发现Nginx 技术在国内日趋火热，越来越多的网站开始部署Nginx。</p>

<p>&nbsp;&nbsp;&nbsp; 相比apeach、iis，nginx以轻量级、高性能、稳定、配置简单、资源占用少等优势广受欢迎。</p>

<p>1)下载地址：</p>

<p>　　<a href="http://nginx.org/">http://nginx.org</a></p>

<p>2)启动</p>

<p>　　解压至c:\nginx，运行nginx.exe(即nginx -c conf\nginx.conf)，默认使用80端口，日志见文件夹C:\nginx\logs</p>

<p>3)使用</p>

<p>　　<a href="http://localhost/">http://localhost</a></p>

<p>4)关闭</p>

<p>　　nginx -s stop 或taskkill /F /IM nginx.exe &gt; nul&nbsp;<br />
5)常用配置</p>

<p>&nbsp;　　C:\nginx\conf\nginx.conf,使用自己定义的conf文件如my.conf，命令为nginx -c conf\my.conf</p>

<p>　　常用配置如下：&nbsp;<br />
　　Nginx.conf代码&nbsp;<br />
　　http {&nbsp;<br />
　　 server {&nbsp;<br />
　　 #1.侦听80端口&nbsp;<br />
　　 listen 80;&nbsp;<br />
　　 location / {&nbsp;<br />
　　 # 2. 默认主页目录在nginx安装目录的html子目录。&nbsp;<br />
　　 root html;&nbsp;<br />
　　 index index.html index.htm;&nbsp;<br />
　　 # 3. 没有索引页时，罗列文件和子目录&nbsp;<br />
　　 autoindex on;&nbsp;<br />
　　 autoindex_exact_size on;&nbsp;<br />
　　 autoindex_localtime on;&nbsp;<br />
　　 }&nbsp;<br />
　　 # 4.指定虚拟目录&nbsp;<br />
　　 location /tshirt {&nbsp;<br />
　　 alias D:\programs\Apache2\htdocs\tshirt;&nbsp;<br />
　　 index index.html index.htm;&nbsp;<br />
　　 }&nbsp;<br />
　　 }&nbsp;<br />
　　 # 5.虚拟主机www.emb.info配置&nbsp;<br />
　　 server {&nbsp;<br />
　　 listen 80;&nbsp;<br />
　　 server_name www.emb.info;&nbsp;<br />
　　 access_log emb.info/logs/access.log;&nbsp;<br />
　　 location / {&nbsp;<br />
　　 index index.html;&nbsp;<br />
　　 root emb.info/htdocs;&nbsp;<br />
　　 }&nbsp;<br />
　　 }&nbsp;<br />
　　}&nbsp;<br />
　　<br />
　　http {<br />
　　 server {<br />
　　 #1.侦听80端口&nbsp;<br />
　　 listen 80;&nbsp;<br />
　　 location / {<br />
　　 # 2. 默认主页目录在nginx安装目录的html子目录。<br />
　　 root html;<br />
　　 index index.html index.htm;<br />
　　 # 3. 没有索引页时，罗列文件和子目录<br />
　　 autoindex on;<br />
　　 autoindex_exact_size on;<br />
　　 autoindex_localtime on;<br />
　　 }<br />
　　 # 4.指定虚拟目录<br />
　　 location /tshirt {<br />
　　 alias D:\programs\Apache2\htdocs\tshirt;<br />
　　 index index.html index.htm;<br />
　　 }<br />
　　 }<br />
　　 # 5.虚拟主机www.emb.info配置<br />
　　 server {<br />
　　 listen 80;<br />
　　 server_name www.emb.info;<br />
　　 access_log emb.info/logs/access.log;<br />
　　 location / {<br />
　　 index index.html;<br />
　　 root emb.info/htdocs;<br />
　　 }<br />
　　 }<br />
　　}<br />
　　<br />
　　小提示：&nbsp;<br />
　　运行nginx -V可以查看该Win32平台编译版支持哪些模块。我这里的结果为：&nbsp;<br />
　　Log代码&nbsp;<br />
　　nginx version: nginx/0.7.65&nbsp;<br />
　　TLS SNI support enabled&nbsp;<br />
　　configure arguments:&nbsp;<br />
　　--builddir=objs.msvc8&nbsp;<br />
　　--crossbuild=win32&nbsp;<br />
　　--with-debug --prefix=&nbsp;<br />
　　--conf-path=conf/nginx.conf&nbsp;<br />
　　--pid-path=logs/nginx.pid&nbsp;<br />
　　--http-log-path=logs/access.log&nbsp;<br />
　　--error-log-path=logs/error.log&nbsp;<br />
　　--sbin-path=nginx.exe&nbsp;<br />
　　--http-client-body-temp-path=temp/client_body_temp&nbsp;<br />
　　--http-proxy-temp-path=temp/proxy_temp&nbsp;<br />
　　--http-fastcgi-temp-path=temp/fastcgi_temp&nbsp;<br />
　　--with-cc-opt=-DFD_SETSIZE=1024&nbsp;<br />
　　--with-pcre=objs.msvc8/lib/pcre-7.9&nbsp;<br />
　　--with-openssl=objs.msvc8/lib/openssl-0.9.8k&nbsp;<br />
　　--with-openssl-opt=enable-tlsext&nbsp;<br />
　　--with-zlib=objs.msvc8/lib/zlib-1.2.3&nbsp;<br />
　　--with-select_module&nbsp;<br />
　　--with-http_ssl_module&nbsp;<br />
　　--with-http_realip_module&nbsp;<br />
　　--with-http_addition_module&nbsp;<br />
　　--with-http_sub_module&nbsp;<br />
　　--with-http_dav_module&nbsp;<br />
　　--with-http_stub_status_module&nbsp;<br />
　　--with-http_flv_module&nbsp;<br />
　　--with-http_gzip_static_module&nbsp;<br />
　　--with-http_random_index_module&nbsp;<br />
　　--with-http_secure_link_module&nbsp;<br />
　　--with-mail&nbsp;<br />
　　--with-mail_ssl_module&nbsp;<br />
　　--with-ipv6&nbsp;<br />
　　<br />
　　nginx version: nginx/0.7.65<br />
　　TLS SNI support enabled<br />
　　configure arguments:&nbsp;<br />
　　--builddir=objs.msvc8&nbsp;<br />
　　--crossbuild=win32&nbsp;<br />
　　--with-debug --prefix=&nbsp;<br />
　　--conf-path=conf/nginx.conf&nbsp;<br />
　　--pid-path=logs/nginx.pid&nbsp;<br />
　　--http-log-path=logs/access.log&nbsp;<br />
　　--error-log-path=logs/error.log&nbsp;<br />
　　--sbin-path=nginx.exe&nbsp;<br />
　　--http-client-body-temp-path=temp/client_body_temp&nbsp;<br />
　　--http-proxy-temp-path=temp/proxy_temp&nbsp;<br />
　　--http-fastcgi-temp-path=temp/fastcgi_temp&nbsp;<br />
　　--with-cc-opt=-DFD_SETSIZE=1024&nbsp;<br />
　　--with-pcre=objs.msvc8/lib/pcre-7.9&nbsp;<br />
　　--with-openssl=objs.msvc8/lib/openssl-0.9.8k&nbsp;<br />
　　--with-openssl-opt=enable-tlsext&nbsp;<br />
　　--with-zlib=objs.msvc8/lib/zlib-1.2.3&nbsp;<br />
　　--with-select_module&nbsp;<br />
　　--with-http_ssl_module&nbsp;<br />
　　--with-http_realip_module&nbsp;<br />
　　--with-http_addition_module&nbsp;<br />
　　--with-http_sub_module&nbsp;<br />
　　--with-http_dav_module&nbsp;<br />
　　--with-http_stub_status_module&nbsp;<br />
　　--with-http_flv_module&nbsp;<br />
　　--with-http_gzip_static_module&nbsp;<br />
　　--with-http_random_index_module&nbsp;<br />
　　--with-http_secure_link_module&nbsp;<br />
　　--with-mail&nbsp;<br />
　　--with-mail_ssl_module&nbsp;<br />
　　--with-ipv6<br />
　　<br />
　　显然，最经常用的memcache, rewrite模块都没在其中，因此该win32编译版本仅能供基本开发测试使用，对于产品平台，应该重新编译自己想要的win32版本，或者在linux下使用更方便。</p>

<p>6）查看nginx进程</p>

<p>　　tasklist /fi &quot;imagename eq nginx.exe&quot;，如下显示：<br />
映像名称&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PID 会话名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 会话#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 内存使用<br />
========================= ======== ================ =========== ============<br />
nginx.exe&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8944 Console&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5,128 K<br />
nginx.exe&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6712 Console&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5,556 K</p>

<p>7）nginx常用命令</p>

<p>nginx -s stop 强制关闭&nbsp;<br />
nginx -s quit 安全关闭&nbsp;<br />
nginx -s reload 改变配置文件的时候，重启nginx工作进程，来时配置文件生效&nbsp;<br />
nginx -s reopen 打开日志文件</p>

<p>8）其它<br />
　　可以通过配置文件开启多个nginx工作进程，但同时只有其中一个nginx工作进程在工作，其他的阻塞等待。<br />
　　一个nginx工作进程最多同时可以处理1024个连接。<br />
　　nginx中需要共享内存的cache或者模块无法在windows下正常使用。<br />
　　不过，nginx官方正在改进，将来nginx会以服务的方式运行，使用 I/O completion ports代替select方法，使多个工作进程能并发工作。<br />
　　要使用nginx配合php-cgi使用，需要修改环境变量，否则，php-cgi运行一定次数就推出，需要重启，设置PHP_FCGI_MAX_REQUESTS这个变量为0即可。</p>

<p>　　以上在win7上通过。&nbsp;</p>

<p>&nbsp;8）nginx以windows服务形式启动</p>

<p>　　1.下载微软两个工具：</p>

<p>　　　　instsrv.exe srvay.exe</p>

<p>　　2.执行命令:</p>

<p>　　　　instsrv Nginxc:/nginx/srvany.exe</p>

<p>　　3.配置Nginx的运行参数</p>

<p>　　可以直接将配置导入到注册表</p>

<p>Windows Registry Editor Version 5.00</p>

<p>[HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Services/NGINX/Parameters]<br />
&quot;Application&quot;=&quot;C://nginx//nginx.exe&quot;<br />
&quot;AppParameters&quot;=&quot;&quot;<br />
&quot;AppDirectory&quot;=&quot;C://nginx//&quot;</p>

<h1>Linux安装Nginx</h1>

<p>一、什么是nginx</p>

<p>是一个C语言开发的HTTP反向代理服务器，性能非常高</p>

<p>一个俄罗斯的哥们开发的，官方提供的测试性能能够达到5W的并发，我的天呐~，实际测试差不多是2W，而淘宝的牛人可以优化到200W</p>

<p>运行效率非常好，占用的资源也非常低，运行稳定</p>

<p>&nbsp;</p>

<p>二、Nginx的应用场景 有哪些</p>

<p>1、http服务器：Nginx是一个http服务可以独立提供http服务，可以做网页静态服务器，你可以放一些静态资源，比如HTML, JS, CSS, 图片</p>

<p>2、虚拟主机：可以实现在一台服务器虚拟出多个网站，同时使用80端口</p>

<p>3、反向代理，负载均衡：当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，这时需要用多台服务器集群可以使用nginx做反向代理。并且多台服务器可以平均分担负载，不会因为某台服务器负载过高而宕机，也不会出现某台服务器闲置的情况。</p>

<p>&nbsp;</p>

<p>三、Nginx安装</p>

<p>首先需要在虚拟机上安装Linux环境（怎么安装的，略...）（当然你也可以用Windows版本的，性能的话呢，呵呵）</p>

<p>&nbsp;</p>

<p>首先要准备编译环境（bala bala ...）</p>

<p>分别运行一下4条命令，至于是啥东西就不多说了，有兴趣的可以m我或者百度一下</p>

<p>yum install gcc-c++</p>

<p>yum install -y pcre pcre-devel</p>

<p>yum install -y zlib zlib-devel</p>

<p>yum install -y openssl openssl-devel</p>

<p>&nbsp;</p>

<p>下载地址</p>

<p>进入http://nginx.org/en/download.html&nbsp;</p>

<p>我目前使用的是1.81, 1.9 的新的不用</p>

<p>&nbsp;</p>

<p>好，东风来了：</p>

<p>1. 把nginx的源码上传到linux系统</p>

<p>放在root下</p>

<p>2. 把压缩包解压缩</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/160419090827731.png" /></p>

<p>&nbsp;</p>

<p>3.在/var下新建/var/temp/nginx/目录</p>

<p>&nbsp;</p>

<p>4. 进行configure配置</p>

<p>./configure \</p>

<p>--prefix=/usr/local/nginx \</p>

<p>--pid-path=/var/run/nginx/nginx.pid \</p>

<p>--lock-path=/var/lock/nginx.lock \</p>

<p>--error-log-path=/var/log/nginx/error.log \</p>

<p>--http-log-path=/var/log/nginx/access.log \</p>

<p>--with-http_gzip_static_module \</p>

<p>--http-client-body-temp-path=/var/temp/nginx/client \</p>

<p>--http-proxy-temp-path=/var/temp/nginx/proxy \</p>

<p>--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \</p>

<p>--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \</p>

<p>--http-scgi-temp-path=/var/temp/nginx/scgi</p>

<p>&nbsp;</p>

<p>直接复制这一坨命令到putty（有很多SSH，随意用）</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/160419090827732.png" /></p>

<p>&nbsp;</p>

<p>运行结果：</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/160419090827733.png" style="width:705px" /></p>

<p>&nbsp;</p>

<p>此时已经有makefile文件夹了</p>

<p>5. make</p>

<p>进入&nbsp;nginx-1.8.1文件夹，运行命令</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/160419090827734.png" /></p>

<p>结果：</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/160419090827735.png" style="width:705px" /></p>

<p>编译成功</p>

<p>&nbsp;</p>

<p>6. make install</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/160419090827736.png" /></p>

<p>运行结果：</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/160419090827737.png" style="width:705px" /></p>

<p>&nbsp;</p>

<p>此时，在 /usr/local下会多一个nginx</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/160419090827738.png" /></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>这时，我们可以使Nginx启动或停止</p>

<p>1. 启动：进入nginx的sbin目录，./nginx就可以直接启动</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/160419090827739.png" /></p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/1604190908277310.png" /></p>

<p>启动成功</p>

<p>&nbsp;</p>

<p>PS：如果你的linux是新建的，那么防火墙是关闭的</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/1604190908277311.png" style="width:688px" /></p>

<p>关闭防火墙就可以访问该虚拟机的IP</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/1604190908277312.png" /></p>

<p>&nbsp;</p>

<p>我们开看一下这个文件</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/1604190908277313.png" /></p>

<p>这是配置文件（废话嘛...）</p>

<p>&nbsp;</p>

<p>我们来看看配置</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/1604190908277314.png" style="width:705px" /></p>

<p>&nbsp;</p>

<p>新建一个server节点</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/1604190908277315.png" /></p>

<p>&nbsp;</p>

<p>对应更目录，html_88</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/1604190908277316.png" /></p>

<p>&nbsp;</p>

<p>./nginx -s reload 刷一下</p>

<p><img alt="" src="http://www.linuxidc.com/upload/2016_04/1604190908277317.png" style="width:705px" /></p>

<p>&nbsp;</p>

<p>成功！</p>

<p>&nbsp;</p>

<p>PS：如果访问不了可能是端口没开</p>

<p>打开88端口即可，这边就不多说了</p>
